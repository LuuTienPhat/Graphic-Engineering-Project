package view;

import java.awt.BasicStroke;
import model.*;
import java.awt.Color;
import java.awt.Graphics;
import java.awt.Graphics2D;
import java.awt.Stroke;
import java.util.ArrayList;
import javax.swing.JColorChooser;
import javax.swing.JComboBox;
import javax.swing.JOptionPane;
import javax.swing.JPanel;
import javax.swing.JTextField;
import model3D.Cone;
import model3D.Cuboid;
import model3D.Cylinder;
import model3D.Point2D;
import model3D.Point3D;
import model3D.Rotation;
import model3D.Shape3D;
import model3D.Sphere;
import transformation.DoiXung;
import transformation.TinhTien;
import transformation.Quay;
import transformation.ThuPhong;

/**
 * \
 *
 * @author tuanbuiquoc
 */
public class KTDH_Nhom8 extends javax.swing.JFrame {

    /**
     * Creates new form KTDH_Nhom8
     */
    Graphics g;
    public static int step = 5, graphWidth, graphHeight;
    public int x1=0, y1=0;
    public int x2=0, y2=0;
    String drawMode = "";
    Color shape3DColor = new Color(57, 62, 70);
    ArrayList<Shape3D> list = new ArrayList<>();
    ArrayList<Shape3D> listRedo = new ArrayList<>();

    public KTDH_Nhom8() {
        initComponents();
        graphWidth = jPanel_Graph.getWidth();
        graphHeight = jPanel_Graph.getHeight();
        g = jPanel_Graph.getGraphics();
        g.setColor(Color.red);
        jCheckBox_VeLuoi.setSelected(true);
        jCheckBox_VeTrucToaDo.setSelected(true);
        jCheckBox_FillMode.setSelected(true);
        this.setLocationRelativeTo(null);

    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        cudboidDialog = new javax.swing.JDialog();
        jPanel6 = new javax.swing.JPanel();
        jLabel1 = new javax.swing.JLabel();
        jPanel2 = new javax.swing.JPanel();
        x_cuboid = new javax.swing.JTextField();
        jLabel3 = new javax.swing.JLabel();
        jLabel4 = new javax.swing.JLabel();
        y_cuboid = new javax.swing.JTextField();
        jLabel5 = new javax.swing.JLabel();
        z_cuboid = new javax.swing.JTextField();
        jLabel6 = new javax.swing.JLabel();
        jPanel3 = new javax.swing.JPanel();
        length_cuboid = new javax.swing.JTextField();
        jLabel7 = new javax.swing.JLabel();
        jLabel8 = new javax.swing.JLabel();
        width_cuboid = new javax.swing.JTextField();
        jLabel9 = new javax.swing.JLabel();
        height_cuboid = new javax.swing.JTextField();
        jPanel4 = new javax.swing.JPanel();
        reset_cuboid = new javax.swing.JButton();
        drawCuboid = new javax.swing.JButton();
        sphereDialog = new javax.swing.JDialog();
        jPanel8 = new javax.swing.JPanel();
        jLabel2 = new javax.swing.JLabel();
        jPanel5 = new javax.swing.JPanel();
        x_sphere = new javax.swing.JTextField();
        jLabel10 = new javax.swing.JLabel();
        jLabel11 = new javax.swing.JLabel();
        y_sphere = new javax.swing.JTextField();
        jLabel12 = new javax.swing.JLabel();
        z_sphere = new javax.swing.JTextField();
        jLabel13 = new javax.swing.JLabel();
        jPanel9 = new javax.swing.JPanel();
        r_sphere = new javax.swing.JTextField();
        jLabel14 = new javax.swing.JLabel();
        jPanel10 = new javax.swing.JPanel();
        reset_sphere = new javax.swing.JButton();
        drawSphere = new javax.swing.JButton();
        CylinderDialog = new javax.swing.JDialog();
        jPanel11 = new javax.swing.JPanel();
        jLabel15 = new javax.swing.JLabel();
        jPanel12 = new javax.swing.JPanel();
        x_cylinder = new javax.swing.JTextField();
        jLabel16 = new javax.swing.JLabel();
        jLabel17 = new javax.swing.JLabel();
        y_cylinder = new javax.swing.JTextField();
        jLabel18 = new javax.swing.JLabel();
        z_cylinder = new javax.swing.JTextField();
        jLabel19 = new javax.swing.JLabel();
        jPanel13 = new javax.swing.JPanel();
        r_cylinder = new javax.swing.JTextField();
        jLabel20 = new javax.swing.JLabel();
        jLabel21 = new javax.swing.JLabel();
        h_cylinder = new javax.swing.JTextField();
        jPanel14 = new javax.swing.JPanel();
        reset_cylinder = new javax.swing.JButton();
        drawCylinder = new javax.swing.JButton();
        ConeDialog = new javax.swing.JDialog();
        jPanel15 = new javax.swing.JPanel();
        jLabel22 = new javax.swing.JLabel();
        jPanel16 = new javax.swing.JPanel();
        x_cone = new javax.swing.JTextField();
        jLabel23 = new javax.swing.JLabel();
        jLabel24 = new javax.swing.JLabel();
        y_cone = new javax.swing.JTextField();
        jLabel25 = new javax.swing.JLabel();
        z_cone = new javax.swing.JTextField();
        jLabel26 = new javax.swing.JLabel();
        jPanel17 = new javax.swing.JPanel();
        r_cone = new javax.swing.JTextField();
        jLabel27 = new javax.swing.JLabel();
        jLabel28 = new javax.swing.JLabel();
        h_cone = new javax.swing.JTextField();
        jPanel18 = new javax.swing.JPanel();
        reset_cone = new javax.swing.JButton();
        drawCone = new javax.swing.JButton();
        jTabbedPane1 = new javax.swing.JTabbedPane();
        jPanel_2D = new javax.swing.JPanel();
        jCheckBox_VeLuoi = new javax.swing.JCheckBox();
        jCheckBox_VeTrucToaDo = new javax.swing.JCheckBox();
        jButton_XoaTatCa = new javax.swing.JButton();
        jButton_VeDoanThangNetLien = new javax.swing.JButton();
        jButton_VeDoanThangNetDut = new javax.swing.JButton();
        jButton_VeDoanThang2ChamGach = new javax.swing.JButton();
        jButton_VeDuongTron = new javax.swing.JButton();
        jButton_VeDuongTronNetDut = new javax.swing.JButton();
        jButton_VeHinhChuNhat = new javax.swing.JButton();
        jButton_VeDiem = new javax.swing.JButton();
        jButton_VeHinhTamGiacCan = new javax.swing.JButton();
        jButton_VeCayThong = new javax.swing.JButton();
        jButton_VeBienBao = new javax.swing.JButton();
        jSeparator2 = new javax.swing.JSeparator();
        jCheckBox_FillMode = new javax.swing.JCheckBox();
        jButton_VeSao = new javax.swing.JButton();
        jButton_VeNew_Oto = new javax.swing.JButton();
        jPanel_3D = new javax.swing.JPanel();
        openCuboidDialog = new javax.swing.JButton();
        openSphereDialog = new javax.swing.JButton();
        openCylinderDialog = new javax.swing.JButton();
        openConeDialog = new javax.swing.JButton();
        setColor3DShape = new javax.swing.JPanel();
        undo = new javax.swing.JButton();
        redo = new javax.swing.JButton();
        jPanel1 = new javax.swing.JPanel();
        jLabel29 = new javax.swing.JLabel();
        a_3d = new javax.swing.JTextField();
        a1_3d = new javax.swing.JTextField();
        jLabel30 = new javax.swing.JLabel();
        b_3d = new javax.swing.JTextField();
        jLabel31 = new javax.swing.JLabel();
        jLabel32 = new javax.swing.JLabel();
        b1_3d = new javax.swing.JTextField();
        c_3d = new javax.swing.JTextField();
        jLabel33 = new javax.swing.JLabel();
        c1_3d = new javax.swing.JTextField();
        jLabel34 = new javax.swing.JLabel();
        d_3d = new javax.swing.JTextField();
        jLabel35 = new javax.swing.JLabel();
        l_3d = new javax.swing.JTextField();
        jLabel36 = new javax.swing.JLabel();
        w_3d = new javax.swing.JTextField();
        jLabel37 = new javax.swing.JLabel();
        d1_3d = new javax.swing.JTextField();
        jLabel38 = new javax.swing.JLabel();
        h_3d = new javax.swing.JTextField();
        jLabel39 = new javax.swing.JLabel();
        r_3d = new javax.swing.JTextField();
        jLabel40 = new javax.swing.JLabel();
        o_3d = new javax.swing.JTextField();
        jLabel41 = new javax.swing.JLabel();
        o1_3d = new javax.swing.JTextField();
        jLabel42 = new javax.swing.JLabel();
        title_3D = new javax.swing.JTextField();
        jLabel43 = new javax.swing.JLabel();
        jPanel_2DAni = new javax.swing.JPanel();
        jButton_car = new javax.swing.JButton();
        jPanel_Graph = new JPanel(){
            public void paintComponent(Graphics g){
                super.paintComponent(g);

                graphHeight = jPanel_Graph.getBounds().height;
                graphWidth = jPanel_Graph.getBounds().width;

                if(jCheckBox_VeLuoi.isSelected()){
                    for (int i = 0; i < graphWidth; i += step) {
                        g.setColor(Color.lightGray);
                        g.drawLine(graphWidth / 2 - i, graphHeight / 2 - graphHeight / 2, graphWidth / 2 - i, graphHeight / 2 + graphHeight / 2);

                        g.drawLine(graphWidth / 2 + i, graphHeight / 2 - graphHeight / 2, graphWidth / 2 + i, graphHeight / 2 + graphHeight / 2);

                        g.drawLine(graphWidth / 2 - graphWidth / 2, graphHeight / 2 - i, graphWidth / 2 + graphWidth / 2, graphHeight / 2 - i);

                        g.drawLine(graphWidth / 2 - graphWidth / 2, graphHeight / 2 + i, graphWidth / 2 + graphWidth / 2, graphHeight / 2 + i);

                    }
                }

                if(jCheckBox_VeTrucToaDo.isSelected()){
                    graphHeight = jPanel_Graph.getBounds().height;
                    graphWidth = jPanel_Graph.getBounds().width;
                    g.setColor(Color.black);
                    g.drawLine(graphWidth / 2, 0, graphWidth / 2, graphHeight);
                    g.drawLine(0, graphHeight / 2, graphWidth, graphHeight / 2);
                    //            int inc = 0;
                    //            int desc = 0;
                    //            for (int i = graphWidth/2; i < graphWidth; i += step) {
                        //                if(inc%50==0){
                            //                    g.drawLine(i, graphHeight/2 +2, i,  graphHeight/2 - 2);
                            //                    g.drawString(""+inc/5, i+2, graphHeight/2 - 4);
                            //                }
                        //                inc+=5;
                        //            }
                    //            for (int i = graphWidth/2; i > 0; i -= step) {
                        //                if(desc%50==0){
                            //                    if(desc==0){
                                //
                                //                    }else{
                                //                        g.drawLine(i, graphHeight/2 +2, i,  graphHeight/2 - 2);
                                //                        g.drawString(""+desc/5, i-2, graphHeight/2 - 4);
                                //                    }
                            //
                            //                }
                        //                desc-=5;
                        //            }
                    //            inc = 0;
                    //            desc = 0;
                    //            for (int i = graphHeight/2; i >0; i -= step) {
                        //                if(inc%50==0){
                            //                    if(inc==0){
                                //
                                //                    }else{
                                //                        g.drawLine(graphWidth/2-2, i, graphWidth/2+2,  i);
                                //                        g.drawString(""+inc/5, graphWidth/2-20, i);
                                //                    }
                            //
                            //                }
                        //                inc+=5;
                        //            }
                    //            for (int i = graphHeight/2; i <graphHeight; i += step) {
                        //                if(desc%50==0){
                            //                    if(desc==0){
                                //
                                //                    }else{
                                //                        g.drawLine(graphWidth/2-2, i, graphWidth/2+2,  i);
                                //                        g.drawString(""+desc/5, graphWidth/2-20, i);
                                //                    }
                            //
                            //                }
                        //                desc-=5;
                        //            }

                }
                g.setColor(Color.red);
                for(DoanThang tmp:listDoanThang){
                    if(tmp.getDrawMode().equals("DoanThangNetLien")){

                        tmp.veDoanThang((Graphics2D)g);
                    }
                    if(tmp.getDrawMode().equals("DoanThangNetDut")){
                        tmp.veDoanThangNetDut((Graphics2D)g);
                    }

                    if(tmp.getDrawMode().equals("DoanThang2ChamGach")){
                        tmp.veDoan2ChamGach((Graphics2D)g);
                    }
                }
                for(DuongTron tmp:listDuongTron){
                    if(tmp.getDrawMode().equals("DuongTronNetLien")){
                        tmp.veDuongTronNetLien((Graphics2D)g);
                    }
                    if(tmp.getDrawMode().equals("DuongTronNetDut")){
                        tmp.veDuongTronNetDut((Graphics2D)g);
                    }
                }
                for(HinhChuNhat tmp:listHinhChuNhat){
                    tmp.veHinhChuNhat((Graphics2D)g);
                }
                for(Diem2D tmp:listDiem2D){
                    tmp.veDiem2D((Graphics2D)g);
                }
                for(model.HinhTamGiacCan tmp:listHinhTamGiacCan){
                    tmp.veHinhTamGiacCan((Graphics2D)g);
                }
                g.setColor(Color.green);
                for(CayThong tmp : listCayThong){
                    tmp.veCayThong((Graphics2D)g);
                }
                for(BienBao tmp : listBienBao){
                    tmp.veBienBao((Graphics2D)g);
                }
                for(Oto tmp : listOto){
                    tmp.veOto((Graphics2D)g);
                }
                for(Sao tmp : listSao){
                    tmp.veSao((Graphics2D)g);
                }
                for(New_Oto tmp : listNew_Oto){
                    tmp.veNewOto((Graphics2D)g);
                }
                hienToaDo();
                if(jTabbedPane1.getSelectedIndex()==1){
                    super.paintComponent(g);
                    initGraph(g);
                }
            }
        };
        jPanel_BienDoiVaThongSo = new javax.swing.JPanel();
        jLabel_Transormation = new javax.swing.JLabel();
        jButton_TinhTien = new javax.swing.JButton();
        jButton_DoiXung = new javax.swing.JButton();
        jButton_Quay = new javax.swing.JButton();
        jButton_ThuPhong = new javax.swing.JButton();
        jLabel_Coor = new javax.swing.JLabel();
        jSeparator1 = new javax.swing.JSeparator();
        jPanel_Coor = new javax.swing.JPanel();
        jLabel_X1 = new javax.swing.JLabel();
        jTextField_x1 = new javax.swing.JTextField();
        jLabel_Y1 = new javax.swing.JLabel();
        jTextField_y1 = new javax.swing.JTextField();
        jTextField_x2 = new javax.swing.JTextField();
        jLabel_X2 = new javax.swing.JLabel();
        jTextField_y2 = new javax.swing.JTextField();
        jLabel_Y2 = new javax.swing.JLabel();
        jLabel_xO = new javax.swing.JLabel();
        jLabel_yO = new javax.swing.JLabel();
        jTextField_xO = new javax.swing.JTextField();
        jTextField_yO = new javax.swing.JTextField();
        jLabel_r = new javax.swing.JLabel();
        jTextField_r = new javax.swing.JTextField();
        jLabel_h = new javax.swing.JLabel();
        jTextField_h = new javax.swing.JTextField();

        cudboidDialog.setTitle("Hình hộp chữ nhật");
        cudboidDialog.setBackground(new java.awt.Color(57, 62, 70));
        cudboidDialog.setFont(new java.awt.Font("Roboto Mono", 0, 14)); // NOI18N
        cudboidDialog.setLocation(new java.awt.Point(250, 250));
        cudboidDialog.setResizable(false);
        cudboidDialog.setSize(new java.awt.Dimension(381, 250));
        cudboidDialog.setLocationRelativeTo(null);

        jPanel6.setBackground(new java.awt.Color(57, 62, 70));
        jPanel6.setForeground(new java.awt.Color(247, 247, 247));

        jLabel1.setFont(new java.awt.Font("Roboto Mono", 0, 12)); // NOI18N
        jLabel1.setForeground(new java.awt.Color(247, 247, 247));
        jLabel1.setText("A(x, y, z)");

        jPanel2.setOpaque(false);

        x_cuboid.setBackground(new java.awt.Color(57, 62, 70));
        x_cuboid.setFont(new java.awt.Font("Roboto Mono", 0, 14)); // NOI18N
        x_cuboid.setForeground(new java.awt.Color(247, 247, 247));
        x_cuboid.setBorder(javax.swing.BorderFactory.createLineBorder(new java.awt.Color(238, 238, 238)));
        x_cuboid.setOpaque(false);

        jLabel3.setFont(new java.awt.Font("Roboto Mono", 0, 12)); // NOI18N
        jLabel3.setForeground(new java.awt.Color(247, 247, 247));
        jLabel3.setText("x");

        jLabel4.setFont(new java.awt.Font("Roboto Mono", 0, 12)); // NOI18N
        jLabel4.setForeground(new java.awt.Color(247, 247, 247));
        jLabel4.setText("y");

        y_cuboid.setBackground(new java.awt.Color(57, 62, 70));
        y_cuboid.setFont(new java.awt.Font("Roboto Mono", 0, 14)); // NOI18N
        y_cuboid.setForeground(new java.awt.Color(247, 247, 247));
        y_cuboid.setBorder(javax.swing.BorderFactory.createLineBorder(new java.awt.Color(238, 238, 238)));
        y_cuboid.setOpaque(false);

        jLabel5.setFont(new java.awt.Font("Roboto Mono", 0, 12)); // NOI18N
        jLabel5.setForeground(new java.awt.Color(247, 247, 247));
        jLabel5.setText("z");

        z_cuboid.setBackground(new java.awt.Color(57, 62, 70));
        z_cuboid.setFont(new java.awt.Font("Roboto Mono", 0, 14)); // NOI18N
        z_cuboid.setForeground(new java.awt.Color(247, 247, 247));
        z_cuboid.setBorder(javax.swing.BorderFactory.createLineBorder(new java.awt.Color(238, 238, 238)));
        z_cuboid.setOpaque(false);

        javax.swing.GroupLayout jPanel2Layout = new javax.swing.GroupLayout(jPanel2);
        jPanel2.setLayout(jPanel2Layout);
        jPanel2Layout.setHorizontalGroup(
            jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel2Layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jLabel3)
                .addGap(18, 18, 18)
                .addComponent(x_cuboid, javax.swing.GroupLayout.PREFERRED_SIZE, 55, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(18, 18, 18)
                .addComponent(jLabel4)
                .addGap(18, 18, 18)
                .addComponent(y_cuboid, javax.swing.GroupLayout.PREFERRED_SIZE, 55, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(18, 18, 18)
                .addComponent(jLabel5, javax.swing.GroupLayout.PREFERRED_SIZE, 7, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(18, 18, 18)
                .addComponent(z_cuboid, javax.swing.GroupLayout.PREFERRED_SIZE, 55, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );
        jPanel2Layout.setVerticalGroup(
            jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel2Layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel3)
                    .addComponent(x_cuboid, javax.swing.GroupLayout.PREFERRED_SIZE, 25, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabel4)
                    .addComponent(y_cuboid, javax.swing.GroupLayout.PREFERRED_SIZE, 25, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabel5)
                    .addComponent(z_cuboid, javax.swing.GroupLayout.PREFERRED_SIZE, 25, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );

        jLabel6.setFont(new java.awt.Font("Roboto Mono", 0, 12)); // NOI18N
        jLabel6.setForeground(new java.awt.Color(247, 247, 247));
        jLabel6.setText("Kích thước:");

        jPanel3.setOpaque(false);

        length_cuboid.setBackground(new java.awt.Color(57, 62, 70));
        length_cuboid.setFont(new java.awt.Font("Roboto Mono", 0, 14)); // NOI18N
        length_cuboid.setForeground(new java.awt.Color(247, 247, 247));
        length_cuboid.setBorder(javax.swing.BorderFactory.createLineBorder(new java.awt.Color(238, 238, 238)));
        length_cuboid.setOpaque(false);

        jLabel7.setFont(new java.awt.Font("Roboto Mono", 0, 12)); // NOI18N
        jLabel7.setForeground(new java.awt.Color(247, 247, 247));
        jLabel7.setText("dài:");

        jLabel8.setFont(new java.awt.Font("Roboto Mono", 0, 12)); // NOI18N
        jLabel8.setForeground(new java.awt.Color(247, 247, 247));
        jLabel8.setText("rộng:");

        width_cuboid.setBackground(new java.awt.Color(57, 62, 70));
        width_cuboid.setFont(new java.awt.Font("Roboto Mono", 0, 14)); // NOI18N
        width_cuboid.setForeground(new java.awt.Color(247, 247, 247));
        width_cuboid.setBorder(javax.swing.BorderFactory.createLineBorder(new java.awt.Color(238, 238, 238)));
        width_cuboid.setOpaque(false);

        jLabel9.setFont(new java.awt.Font("Roboto Mono", 0, 12)); // NOI18N
        jLabel9.setForeground(new java.awt.Color(247, 247, 247));
        jLabel9.setText("cao:");

        height_cuboid.setBackground(new java.awt.Color(57, 62, 70));
        height_cuboid.setFont(new java.awt.Font("Roboto Mono", 0, 14)); // NOI18N
        height_cuboid.setForeground(new java.awt.Color(247, 247, 247));
        height_cuboid.setBorder(javax.swing.BorderFactory.createLineBorder(new java.awt.Color(238, 238, 238)));
        height_cuboid.setOpaque(false);

        javax.swing.GroupLayout jPanel3Layout = new javax.swing.GroupLayout(jPanel3);
        jPanel3.setLayout(jPanel3Layout);
        jPanel3Layout.setHorizontalGroup(
            jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel3Layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jLabel7)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addComponent(length_cuboid, javax.swing.GroupLayout.PREFERRED_SIZE, 55, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(18, 18, 18)
                .addComponent(jLabel8)
                .addGap(18, 18, 18)
                .addComponent(width_cuboid, javax.swing.GroupLayout.PREFERRED_SIZE, 55, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(18, 18, 18)
                .addComponent(jLabel9)
                .addGap(18, 18, 18)
                .addComponent(height_cuboid, javax.swing.GroupLayout.PREFERRED_SIZE, 55, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(30, Short.MAX_VALUE))
        );
        jPanel3Layout.setVerticalGroup(
            jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel3Layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel7)
                    .addComponent(length_cuboid, javax.swing.GroupLayout.PREFERRED_SIZE, 25, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabel8)
                    .addComponent(width_cuboid, javax.swing.GroupLayout.PREFERRED_SIZE, 25, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabel9)
                    .addComponent(height_cuboid, javax.swing.GroupLayout.PREFERRED_SIZE, 25, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );

        jPanel4.setFont(new java.awt.Font("Roboto Mono", 0, 14)); // NOI18N
        jPanel4.setOpaque(false);

        reset_cuboid.setBackground(new java.awt.Color(247, 247, 247));
        reset_cuboid.setFont(new java.awt.Font("Roboto Mono", 0, 12)); // NOI18N
        reset_cuboid.setForeground(new java.awt.Color(57, 62, 70));
        reset_cuboid.setText("Xoá");
        reset_cuboid.setBorder(javax.swing.BorderFactory.createLineBorder(new java.awt.Color(238, 238, 238)));
        reset_cuboid.setContentAreaFilled(false);
        reset_cuboid.setOpaque(true);
        reset_cuboid.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                reset_cuboidActionPerformed(evt);
            }
        });

        drawCuboid.setBackground(new java.awt.Color(247, 247, 247));
        drawCuboid.setFont(new java.awt.Font("Roboto Mono", 0, 12)); // NOI18N
        drawCuboid.setForeground(new java.awt.Color(57, 62, 70));
        drawCuboid.setText("Vẽ");
        drawCuboid.setBorder(javax.swing.BorderFactory.createLineBorder(new java.awt.Color(238, 238, 238)));
        drawCuboid.setContentAreaFilled(false);
        drawCuboid.setOpaque(true);
        drawCuboid.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                drawCuboidActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout jPanel4Layout = new javax.swing.GroupLayout(jPanel4);
        jPanel4.setLayout(jPanel4Layout);
        jPanel4Layout.setHorizontalGroup(
            jPanel4Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel4Layout.createSequentialGroup()
                .addGap(109, 109, 109)
                .addComponent(drawCuboid, javax.swing.GroupLayout.PREFERRED_SIZE, 70, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(18, 18, 18)
                .addComponent(reset_cuboid, javax.swing.GroupLayout.PREFERRED_SIZE, 70, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );
        jPanel4Layout.setVerticalGroup(
            jPanel4Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel4Layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jPanel4Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(drawCuboid, javax.swing.GroupLayout.DEFAULT_SIZE, 36, Short.MAX_VALUE)
                    .addComponent(reset_cuboid, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                .addContainerGap())
        );

        javax.swing.GroupLayout jPanel6Layout = new javax.swing.GroupLayout(jPanel6);
        jPanel6.setLayout(jPanel6Layout);
        jPanel6Layout.setHorizontalGroup(
            jPanel6Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jPanel4, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
            .addGroup(jPanel6Layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jPanel6Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel6Layout.createSequentialGroup()
                        .addGroup(jPanel6Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(jLabel1)
                            .addComponent(jLabel6))
                        .addGap(0, 0, Short.MAX_VALUE))
                    .addComponent(jPanel3, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(jPanel2, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                .addContainerGap())
        );
        jPanel6Layout.setVerticalGroup(
            jPanel6Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel6Layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jLabel1)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jPanel2, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jLabel6)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jPanel3, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(18, 18, 18)
                .addComponent(jPanel4, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(29, Short.MAX_VALUE))
        );

        javax.swing.GroupLayout cudboidDialogLayout = new javax.swing.GroupLayout(cudboidDialog.getContentPane());
        cudboidDialog.getContentPane().setLayout(cudboidDialogLayout);
        cudboidDialogLayout.setHorizontalGroup(
            cudboidDialogLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jPanel6, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
        );
        cudboidDialogLayout.setVerticalGroup(
            cudboidDialogLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jPanel6, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
        );

        sphereDialog.setTitle("Hình cầu");
        sphereDialog.setBackground(new java.awt.Color(57, 62, 70));
        sphereDialog.setFont(new java.awt.Font("Roboto Mono", 0, 14)); // NOI18N
        sphereDialog.setLocation(new java.awt.Point(250, 250));
        sphereDialog.setResizable(false);
        sphereDialog.setSize(new java.awt.Dimension(0, 0));
        cudboidDialog.setLocationRelativeTo(null);

        jPanel8.setBackground(new java.awt.Color(57, 62, 70));
        jPanel8.setForeground(new java.awt.Color(247, 247, 247));

        jLabel2.setFont(new java.awt.Font("Roboto Mono", 0, 12)); // NOI18N
        jLabel2.setForeground(new java.awt.Color(247, 247, 247));
        jLabel2.setText("Tâm O(x, y, z)");

        jPanel5.setOpaque(false);

        x_sphere.setBackground(new java.awt.Color(57, 62, 70));
        x_sphere.setFont(new java.awt.Font("Roboto Mono", 0, 14)); // NOI18N
        x_sphere.setForeground(new java.awt.Color(247, 247, 247));
        x_sphere.setBorder(javax.swing.BorderFactory.createLineBorder(new java.awt.Color(238, 238, 238)));
        x_sphere.setOpaque(false);

        jLabel10.setFont(new java.awt.Font("Roboto Mono", 0, 12)); // NOI18N
        jLabel10.setForeground(new java.awt.Color(247, 247, 247));
        jLabel10.setText("x");

        jLabel11.setFont(new java.awt.Font("Roboto Mono", 0, 12)); // NOI18N
        jLabel11.setForeground(new java.awt.Color(247, 247, 247));
        jLabel11.setText("y");

        y_sphere.setBackground(new java.awt.Color(57, 62, 70));
        y_sphere.setFont(new java.awt.Font("Roboto Mono", 0, 14)); // NOI18N
        y_sphere.setForeground(new java.awt.Color(247, 247, 247));
        y_sphere.setBorder(javax.swing.BorderFactory.createLineBorder(new java.awt.Color(238, 238, 238)));
        y_sphere.setOpaque(false);

        jLabel12.setFont(new java.awt.Font("Roboto Mono", 0, 12)); // NOI18N
        jLabel12.setForeground(new java.awt.Color(247, 247, 247));
        jLabel12.setText("z");

        z_sphere.setBackground(new java.awt.Color(57, 62, 70));
        z_sphere.setFont(new java.awt.Font("Roboto Mono", 0, 14)); // NOI18N
        z_sphere.setForeground(new java.awt.Color(247, 247, 247));
        z_sphere.setBorder(javax.swing.BorderFactory.createLineBorder(new java.awt.Color(238, 238, 238)));
        z_sphere.setOpaque(false);

        javax.swing.GroupLayout jPanel5Layout = new javax.swing.GroupLayout(jPanel5);
        jPanel5.setLayout(jPanel5Layout);
        jPanel5Layout.setHorizontalGroup(
            jPanel5Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel5Layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jLabel10)
                .addGap(18, 18, 18)
                .addComponent(x_sphere, javax.swing.GroupLayout.PREFERRED_SIZE, 55, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(18, 18, 18)
                .addComponent(jLabel11)
                .addGap(18, 18, 18)
                .addComponent(y_sphere, javax.swing.GroupLayout.PREFERRED_SIZE, 55, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(18, 18, 18)
                .addComponent(jLabel12, javax.swing.GroupLayout.PREFERRED_SIZE, 7, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(18, 18, 18)
                .addComponent(z_sphere, javax.swing.GroupLayout.PREFERRED_SIZE, 55, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );
        jPanel5Layout.setVerticalGroup(
            jPanel5Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel5Layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jPanel5Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel10)
                    .addComponent(x_sphere, javax.swing.GroupLayout.PREFERRED_SIZE, 25, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabel11)
                    .addComponent(y_sphere, javax.swing.GroupLayout.PREFERRED_SIZE, 25, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabel12)
                    .addComponent(z_sphere, javax.swing.GroupLayout.PREFERRED_SIZE, 25, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );

        jLabel13.setFont(new java.awt.Font("Roboto Mono", 0, 12)); // NOI18N
        jLabel13.setForeground(new java.awt.Color(247, 247, 247));
        jLabel13.setText("Kích thước:");

        jPanel9.setOpaque(false);

        r_sphere.setBackground(new java.awt.Color(57, 62, 70));
        r_sphere.setFont(new java.awt.Font("Roboto Mono", 0, 14)); // NOI18N
        r_sphere.setForeground(new java.awt.Color(247, 247, 247));
        r_sphere.setBorder(javax.swing.BorderFactory.createLineBorder(new java.awt.Color(238, 238, 238)));
        r_sphere.setOpaque(false);

        jLabel14.setFont(new java.awt.Font("Roboto Mono", 0, 12)); // NOI18N
        jLabel14.setForeground(new java.awt.Color(247, 247, 247));
        jLabel14.setText("Bán kính: ");

        javax.swing.GroupLayout jPanel9Layout = new javax.swing.GroupLayout(jPanel9);
        jPanel9.setLayout(jPanel9Layout);
        jPanel9Layout.setHorizontalGroup(
            jPanel9Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel9Layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jLabel14)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addComponent(r_sphere, javax.swing.GroupLayout.PREFERRED_SIZE, 55, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );
        jPanel9Layout.setVerticalGroup(
            jPanel9Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel9Layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jPanel9Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel14)
                    .addComponent(r_sphere, javax.swing.GroupLayout.PREFERRED_SIZE, 25, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );

        jPanel10.setFont(new java.awt.Font("Roboto Mono", 0, 14)); // NOI18N
        jPanel10.setOpaque(false);

        reset_sphere.setBackground(new java.awt.Color(247, 247, 247));
        reset_sphere.setFont(new java.awt.Font("Roboto Mono", 0, 12)); // NOI18N
        reset_sphere.setForeground(new java.awt.Color(57, 62, 70));
        reset_sphere.setText("Xoá");
        reset_sphere.setBorder(javax.swing.BorderFactory.createLineBorder(new java.awt.Color(238, 238, 238)));
        reset_sphere.setContentAreaFilled(false);
        reset_sphere.setOpaque(true);
        reset_sphere.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                reset_sphereActionPerformed(evt);
            }
        });

        drawSphere.setBackground(new java.awt.Color(247, 247, 247));
        drawSphere.setFont(new java.awt.Font("Roboto Mono", 0, 12)); // NOI18N
        drawSphere.setForeground(new java.awt.Color(57, 62, 70));
        drawSphere.setText("Vẽ");
        drawSphere.setBorder(javax.swing.BorderFactory.createLineBorder(new java.awt.Color(238, 238, 238)));
        drawSphere.setContentAreaFilled(false);
        drawSphere.setOpaque(true);
        drawSphere.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                drawSphereActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout jPanel10Layout = new javax.swing.GroupLayout(jPanel10);
        jPanel10.setLayout(jPanel10Layout);
        jPanel10Layout.setHorizontalGroup(
            jPanel10Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel10Layout.createSequentialGroup()
                .addGap(74, 74, 74)
                .addComponent(drawSphere, javax.swing.GroupLayout.PREFERRED_SIZE, 70, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(18, 18, 18)
                .addComponent(reset_sphere, javax.swing.GroupLayout.PREFERRED_SIZE, 70, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );
        jPanel10Layout.setVerticalGroup(
            jPanel10Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel10Layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jPanel10Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(drawSphere, javax.swing.GroupLayout.DEFAULT_SIZE, 36, Short.MAX_VALUE)
                    .addComponent(reset_sphere, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                .addContainerGap())
        );

        javax.swing.GroupLayout jPanel8Layout = new javax.swing.GroupLayout(jPanel8);
        jPanel8.setLayout(jPanel8Layout);
        jPanel8Layout.setHorizontalGroup(
            jPanel8Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel8Layout.createSequentialGroup()
                .addGroup(jPanel8Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanel8Layout.createSequentialGroup()
                        .addContainerGap()
                        .addGroup(jPanel8Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel8Layout.createSequentialGroup()
                                .addGroup(jPanel8Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addComponent(jLabel2)
                                    .addComponent(jLabel13))
                                .addGap(0, 0, Short.MAX_VALUE))
                            .addComponent(jPanel9, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                            .addComponent(jPanel5, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)))
                    .addComponent(jPanel10, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                .addContainerGap())
        );
        jPanel8Layout.setVerticalGroup(
            jPanel8Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel8Layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jLabel2)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jPanel5, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jLabel13)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jPanel9, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(18, 18, 18)
                .addComponent(jPanel10, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(29, Short.MAX_VALUE))
        );

        javax.swing.GroupLayout sphereDialogLayout = new javax.swing.GroupLayout(sphereDialog.getContentPane());
        sphereDialog.getContentPane().setLayout(sphereDialogLayout);
        sphereDialogLayout.setHorizontalGroup(
            sphereDialogLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(sphereDialogLayout.createSequentialGroup()
                .addComponent(jPanel8, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(0, 0, Short.MAX_VALUE))
        );
        sphereDialogLayout.setVerticalGroup(
            sphereDialogLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jPanel8, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
        );

        CylinderDialog.setTitle("Hình trụ");
        CylinderDialog.setBackground(new java.awt.Color(57, 62, 70));
        CylinderDialog.setFont(new java.awt.Font("Roboto Mono", 0, 14)); // NOI18N
        CylinderDialog.setLocation(new java.awt.Point(250, 250));
        CylinderDialog.setResizable(false);
        CylinderDialog.setSize(new java.awt.Dimension(0, 0));
        cudboidDialog.setLocationRelativeTo(null);

        jPanel11.setBackground(new java.awt.Color(57, 62, 70));
        jPanel11.setForeground(new java.awt.Color(247, 247, 247));

        jLabel15.setFont(new java.awt.Font("Roboto Mono", 0, 12)); // NOI18N
        jLabel15.setForeground(new java.awt.Color(247, 247, 247));
        jLabel15.setText("Tâm đáy O(x, y, z)");

        jPanel12.setOpaque(false);

        x_cylinder.setBackground(new java.awt.Color(57, 62, 70));
        x_cylinder.setFont(new java.awt.Font("Roboto Mono", 0, 14)); // NOI18N
        x_cylinder.setForeground(new java.awt.Color(247, 247, 247));
        x_cylinder.setBorder(javax.swing.BorderFactory.createLineBorder(new java.awt.Color(238, 238, 238)));
        x_cylinder.setOpaque(false);

        jLabel16.setFont(new java.awt.Font("Roboto Mono", 0, 12)); // NOI18N
        jLabel16.setForeground(new java.awt.Color(247, 247, 247));
        jLabel16.setText("x");

        jLabel17.setFont(new java.awt.Font("Roboto Mono", 0, 12)); // NOI18N
        jLabel17.setForeground(new java.awt.Color(247, 247, 247));
        jLabel17.setText("y");

        y_cylinder.setBackground(new java.awt.Color(57, 62, 70));
        y_cylinder.setFont(new java.awt.Font("Roboto Mono", 0, 14)); // NOI18N
        y_cylinder.setForeground(new java.awt.Color(247, 247, 247));
        y_cylinder.setBorder(javax.swing.BorderFactory.createLineBorder(new java.awt.Color(238, 238, 238)));
        y_cylinder.setOpaque(false);

        jLabel18.setFont(new java.awt.Font("Roboto Mono", 0, 12)); // NOI18N
        jLabel18.setForeground(new java.awt.Color(247, 247, 247));
        jLabel18.setText("z");

        z_cylinder.setBackground(new java.awt.Color(57, 62, 70));
        z_cylinder.setFont(new java.awt.Font("Roboto Mono", 0, 14)); // NOI18N
        z_cylinder.setForeground(new java.awt.Color(247, 247, 247));
        z_cylinder.setBorder(javax.swing.BorderFactory.createLineBorder(new java.awt.Color(238, 238, 238)));
        z_cylinder.setOpaque(false);

        javax.swing.GroupLayout jPanel12Layout = new javax.swing.GroupLayout(jPanel12);
        jPanel12.setLayout(jPanel12Layout);
        jPanel12Layout.setHorizontalGroup(
            jPanel12Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel12Layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jLabel16)
                .addGap(18, 18, 18)
                .addComponent(x_cylinder, javax.swing.GroupLayout.PREFERRED_SIZE, 55, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(18, 18, 18)
                .addComponent(jLabel17)
                .addGap(18, 18, 18)
                .addComponent(y_cylinder, javax.swing.GroupLayout.PREFERRED_SIZE, 55, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(18, 18, 18)
                .addComponent(jLabel18, javax.swing.GroupLayout.PREFERRED_SIZE, 7, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(18, 18, 18)
                .addComponent(z_cylinder, javax.swing.GroupLayout.PREFERRED_SIZE, 55, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );
        jPanel12Layout.setVerticalGroup(
            jPanel12Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel12Layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jPanel12Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel16)
                    .addComponent(x_cylinder, javax.swing.GroupLayout.PREFERRED_SIZE, 25, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabel17)
                    .addComponent(y_cylinder, javax.swing.GroupLayout.PREFERRED_SIZE, 25, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabel18)
                    .addComponent(z_cylinder, javax.swing.GroupLayout.PREFERRED_SIZE, 25, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );

        jLabel19.setFont(new java.awt.Font("Roboto Mono", 0, 12)); // NOI18N
        jLabel19.setForeground(new java.awt.Color(247, 247, 247));
        jLabel19.setText("Kích thước:");

        jPanel13.setOpaque(false);

        r_cylinder.setBackground(new java.awt.Color(57, 62, 70));
        r_cylinder.setFont(new java.awt.Font("Roboto Mono", 0, 14)); // NOI18N
        r_cylinder.setForeground(new java.awt.Color(247, 247, 247));
        r_cylinder.setBorder(javax.swing.BorderFactory.createLineBorder(new java.awt.Color(238, 238, 238)));
        r_cylinder.setOpaque(false);

        jLabel20.setFont(new java.awt.Font("Roboto Mono", 0, 12)); // NOI18N
        jLabel20.setForeground(new java.awt.Color(247, 247, 247));
        jLabel20.setText("Bán kính: ");

        jLabel21.setFont(new java.awt.Font("Roboto Mono", 0, 12)); // NOI18N
        jLabel21.setForeground(new java.awt.Color(247, 247, 247));
        jLabel21.setText("Chiều cao:");

        h_cylinder.setBackground(new java.awt.Color(57, 62, 70));
        h_cylinder.setFont(new java.awt.Font("Roboto Mono", 0, 14)); // NOI18N
        h_cylinder.setForeground(new java.awt.Color(247, 247, 247));
        h_cylinder.setBorder(javax.swing.BorderFactory.createLineBorder(new java.awt.Color(238, 238, 238)));
        h_cylinder.setOpaque(false);

        javax.swing.GroupLayout jPanel13Layout = new javax.swing.GroupLayout(jPanel13);
        jPanel13.setLayout(jPanel13Layout);
        jPanel13Layout.setHorizontalGroup(
            jPanel13Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel13Layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jLabel20)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addComponent(r_cylinder, javax.swing.GroupLayout.PREFERRED_SIZE, 55, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(18, 18, 18)
                .addComponent(jLabel21)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addComponent(h_cylinder, javax.swing.GroupLayout.PREFERRED_SIZE, 55, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );
        jPanel13Layout.setVerticalGroup(
            jPanel13Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel13Layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jPanel13Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanel13Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                        .addComponent(jLabel21)
                        .addComponent(h_cylinder, javax.swing.GroupLayout.PREFERRED_SIZE, 25, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addGroup(jPanel13Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                        .addComponent(jLabel20)
                        .addComponent(r_cylinder, javax.swing.GroupLayout.PREFERRED_SIZE, 25, javax.swing.GroupLayout.PREFERRED_SIZE)))
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );

        jPanel14.setFont(new java.awt.Font("Roboto Mono", 0, 14)); // NOI18N
        jPanel14.setOpaque(false);

        reset_cylinder.setBackground(new java.awt.Color(247, 247, 247));
        reset_cylinder.setFont(new java.awt.Font("Roboto Mono", 0, 12)); // NOI18N
        reset_cylinder.setForeground(new java.awt.Color(57, 62, 70));
        reset_cylinder.setText("Xoá");
        reset_cylinder.setBorder(javax.swing.BorderFactory.createLineBorder(new java.awt.Color(238, 238, 238)));
        reset_cylinder.setContentAreaFilled(false);
        reset_cylinder.setOpaque(true);
        reset_cylinder.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                reset_cylinderActionPerformed(evt);
            }
        });

        drawCylinder.setBackground(new java.awt.Color(247, 247, 247));
        drawCylinder.setFont(new java.awt.Font("Roboto Mono", 0, 12)); // NOI18N
        drawCylinder.setForeground(new java.awt.Color(57, 62, 70));
        drawCylinder.setText("Vẽ");
        drawCylinder.setBorder(javax.swing.BorderFactory.createLineBorder(new java.awt.Color(238, 238, 238)));
        drawCylinder.setContentAreaFilled(false);
        drawCylinder.setOpaque(true);
        drawCylinder.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                drawCylinderActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout jPanel14Layout = new javax.swing.GroupLayout(jPanel14);
        jPanel14.setLayout(jPanel14Layout);
        jPanel14Layout.setHorizontalGroup(
            jPanel14Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel14Layout.createSequentialGroup()
                .addGap(74, 74, 74)
                .addComponent(drawCylinder, javax.swing.GroupLayout.PREFERRED_SIZE, 70, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(18, 18, 18)
                .addComponent(reset_cylinder, javax.swing.GroupLayout.PREFERRED_SIZE, 70, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );
        jPanel14Layout.setVerticalGroup(
            jPanel14Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel14Layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jPanel14Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(drawCylinder, javax.swing.GroupLayout.DEFAULT_SIZE, 36, Short.MAX_VALUE)
                    .addComponent(reset_cylinder, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                .addContainerGap())
        );

        javax.swing.GroupLayout jPanel11Layout = new javax.swing.GroupLayout(jPanel11);
        jPanel11.setLayout(jPanel11Layout);
        jPanel11Layout.setHorizontalGroup(
            jPanel11Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel11Layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jPanel11Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel11Layout.createSequentialGroup()
                        .addGroup(jPanel11Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(jLabel15)
                            .addComponent(jLabel19))
                        .addGap(0, 0, Short.MAX_VALUE))
                    .addComponent(jPanel13, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(jPanel12, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)))
            .addComponent(jPanel14, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
        );
        jPanel11Layout.setVerticalGroup(
            jPanel11Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel11Layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jLabel15)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jPanel12, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jLabel19)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jPanel13, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(18, 18, 18)
                .addComponent(jPanel14, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(29, Short.MAX_VALUE))
        );

        javax.swing.GroupLayout CylinderDialogLayout = new javax.swing.GroupLayout(CylinderDialog.getContentPane());
        CylinderDialog.getContentPane().setLayout(CylinderDialogLayout);
        CylinderDialogLayout.setHorizontalGroup(
            CylinderDialogLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jPanel11, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
        );
        CylinderDialogLayout.setVerticalGroup(
            CylinderDialogLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jPanel11, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
        );

        ConeDialog.setTitle("Hình nón");
        ConeDialog.setBackground(new java.awt.Color(57, 62, 70));
        ConeDialog.setFont(new java.awt.Font("Roboto Mono", 0, 14)); // NOI18N
        ConeDialog.setLocation(new java.awt.Point(250, 250));
        ConeDialog.setResizable(false);
        ConeDialog.setSize(new java.awt.Dimension(0, 0));
        cudboidDialog.setLocationRelativeTo(null);

        jPanel15.setBackground(new java.awt.Color(57, 62, 70));
        jPanel15.setForeground(new java.awt.Color(247, 247, 247));

        jLabel22.setFont(new java.awt.Font("Roboto Mono", 0, 12)); // NOI18N
        jLabel22.setForeground(new java.awt.Color(247, 247, 247));
        jLabel22.setText("Tâm đáy O(x, y, z)");

        jPanel16.setOpaque(false);

        x_cone.setBackground(new java.awt.Color(57, 62, 70));
        x_cone.setFont(new java.awt.Font("Roboto Mono", 0, 14)); // NOI18N
        x_cone.setForeground(new java.awt.Color(247, 247, 247));
        x_cone.setBorder(javax.swing.BorderFactory.createLineBorder(new java.awt.Color(238, 238, 238)));
        x_cone.setOpaque(false);

        jLabel23.setFont(new java.awt.Font("Roboto Mono", 0, 12)); // NOI18N
        jLabel23.setForeground(new java.awt.Color(247, 247, 247));
        jLabel23.setText("x");

        jLabel24.setFont(new java.awt.Font("Roboto Mono", 0, 12)); // NOI18N
        jLabel24.setForeground(new java.awt.Color(247, 247, 247));
        jLabel24.setText("y");

        y_cone.setBackground(new java.awt.Color(57, 62, 70));
        y_cone.setFont(new java.awt.Font("Roboto Mono", 0, 14)); // NOI18N
        y_cone.setForeground(new java.awt.Color(247, 247, 247));
        y_cone.setBorder(javax.swing.BorderFactory.createLineBorder(new java.awt.Color(238, 238, 238)));
        y_cone.setOpaque(false);

        jLabel25.setFont(new java.awt.Font("Roboto Mono", 0, 12)); // NOI18N
        jLabel25.setForeground(new java.awt.Color(247, 247, 247));
        jLabel25.setText("z");

        z_cone.setBackground(new java.awt.Color(57, 62, 70));
        z_cone.setFont(new java.awt.Font("Roboto Mono", 0, 14)); // NOI18N
        z_cone.setForeground(new java.awt.Color(247, 247, 247));
        z_cone.setBorder(javax.swing.BorderFactory.createLineBorder(new java.awt.Color(238, 238, 238)));
        z_cone.setOpaque(false);

        javax.swing.GroupLayout jPanel16Layout = new javax.swing.GroupLayout(jPanel16);
        jPanel16.setLayout(jPanel16Layout);
        jPanel16Layout.setHorizontalGroup(
            jPanel16Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel16Layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jLabel23)
                .addGap(18, 18, 18)
                .addComponent(x_cone, javax.swing.GroupLayout.PREFERRED_SIZE, 55, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(18, 18, 18)
                .addComponent(jLabel24)
                .addGap(18, 18, 18)
                .addComponent(y_cone, javax.swing.GroupLayout.PREFERRED_SIZE, 55, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(18, 18, 18)
                .addComponent(jLabel25, javax.swing.GroupLayout.PREFERRED_SIZE, 7, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(18, 18, 18)
                .addComponent(z_cone, javax.swing.GroupLayout.PREFERRED_SIZE, 55, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );
        jPanel16Layout.setVerticalGroup(
            jPanel16Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel16Layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jPanel16Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel23)
                    .addComponent(x_cone, javax.swing.GroupLayout.PREFERRED_SIZE, 25, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabel24)
                    .addComponent(y_cone, javax.swing.GroupLayout.PREFERRED_SIZE, 25, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabel25)
                    .addComponent(z_cone, javax.swing.GroupLayout.PREFERRED_SIZE, 25, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );

        jLabel26.setFont(new java.awt.Font("Roboto Mono", 0, 12)); // NOI18N
        jLabel26.setForeground(new java.awt.Color(247, 247, 247));
        jLabel26.setText("Kích thước:");

        jPanel17.setOpaque(false);

        r_cone.setBackground(new java.awt.Color(57, 62, 70));
        r_cone.setFont(new java.awt.Font("Roboto Mono", 0, 14)); // NOI18N
        r_cone.setForeground(new java.awt.Color(247, 247, 247));
        r_cone.setBorder(javax.swing.BorderFactory.createLineBorder(new java.awt.Color(238, 238, 238)));
        r_cone.setOpaque(false);

        jLabel27.setFont(new java.awt.Font("Roboto Mono", 0, 12)); // NOI18N
        jLabel27.setForeground(new java.awt.Color(247, 247, 247));
        jLabel27.setText("Bán kính: ");

        jLabel28.setFont(new java.awt.Font("Roboto Mono", 0, 12)); // NOI18N
        jLabel28.setForeground(new java.awt.Color(247, 247, 247));
        jLabel28.setText("Chiều cao:");

        h_cone.setBackground(new java.awt.Color(57, 62, 70));
        h_cone.setFont(new java.awt.Font("Roboto Mono", 0, 14)); // NOI18N
        h_cone.setForeground(new java.awt.Color(247, 247, 247));
        h_cone.setBorder(javax.swing.BorderFactory.createLineBorder(new java.awt.Color(238, 238, 238)));
        h_cone.setOpaque(false);

        javax.swing.GroupLayout jPanel17Layout = new javax.swing.GroupLayout(jPanel17);
        jPanel17.setLayout(jPanel17Layout);
        jPanel17Layout.setHorizontalGroup(
            jPanel17Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel17Layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jLabel27)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addComponent(r_cone, javax.swing.GroupLayout.PREFERRED_SIZE, 55, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(18, 18, 18)
                .addComponent(jLabel28)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addComponent(h_cone, javax.swing.GroupLayout.PREFERRED_SIZE, 55, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );
        jPanel17Layout.setVerticalGroup(
            jPanel17Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel17Layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jPanel17Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel27)
                    .addComponent(r_cone, javax.swing.GroupLayout.PREFERRED_SIZE, 25, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabel28)
                    .addComponent(h_cone, javax.swing.GroupLayout.PREFERRED_SIZE, 25, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );

        jPanel18.setFont(new java.awt.Font("Roboto Mono", 0, 14)); // NOI18N
        jPanel18.setOpaque(false);

        reset_cone.setBackground(new java.awt.Color(247, 247, 247));
        reset_cone.setFont(new java.awt.Font("Roboto Mono", 0, 12)); // NOI18N
        reset_cone.setForeground(new java.awt.Color(57, 62, 70));
        reset_cone.setText("Xoá");
        reset_cone.setBorder(javax.swing.BorderFactory.createLineBorder(new java.awt.Color(238, 238, 238)));
        reset_cone.setContentAreaFilled(false);
        reset_cone.setOpaque(true);
        reset_cone.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                reset_coneActionPerformed(evt);
            }
        });

        drawCone.setBackground(new java.awt.Color(247, 247, 247));
        drawCone.setFont(new java.awt.Font("Roboto Mono", 0, 12)); // NOI18N
        drawCone.setForeground(new java.awt.Color(57, 62, 70));
        drawCone.setText("Vẽ");
        drawCone.setBorder(javax.swing.BorderFactory.createLineBorder(new java.awt.Color(238, 238, 238)));
        drawCone.setContentAreaFilled(false);
        drawCone.setOpaque(true);
        drawCone.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                drawConeActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout jPanel18Layout = new javax.swing.GroupLayout(jPanel18);
        jPanel18.setLayout(jPanel18Layout);
        jPanel18Layout.setHorizontalGroup(
            jPanel18Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel18Layout.createSequentialGroup()
                .addGap(74, 74, 74)
                .addComponent(drawCone, javax.swing.GroupLayout.PREFERRED_SIZE, 70, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(18, 18, 18)
                .addComponent(reset_cone, javax.swing.GroupLayout.PREFERRED_SIZE, 70, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );
        jPanel18Layout.setVerticalGroup(
            jPanel18Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel18Layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jPanel18Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(drawCone, javax.swing.GroupLayout.DEFAULT_SIZE, 36, Short.MAX_VALUE)
                    .addComponent(reset_cone, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                .addContainerGap())
        );

        javax.swing.GroupLayout jPanel15Layout = new javax.swing.GroupLayout(jPanel15);
        jPanel15.setLayout(jPanel15Layout);
        jPanel15Layout.setHorizontalGroup(
            jPanel15Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel15Layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jPanel15Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel15Layout.createSequentialGroup()
                        .addGroup(jPanel15Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(jLabel22)
                            .addComponent(jLabel26))
                        .addGap(0, 0, Short.MAX_VALUE))
                    .addComponent(jPanel17, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(jPanel16, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)))
            .addComponent(jPanel18, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
        );
        jPanel15Layout.setVerticalGroup(
            jPanel15Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel15Layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jLabel22)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jPanel16, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jLabel26)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jPanel17, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(18, 18, 18)
                .addComponent(jPanel18, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(29, Short.MAX_VALUE))
        );

        javax.swing.GroupLayout ConeDialogLayout = new javax.swing.GroupLayout(ConeDialog.getContentPane());
        ConeDialog.getContentPane().setLayout(ConeDialogLayout);
        ConeDialogLayout.setHorizontalGroup(
            ConeDialogLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jPanel15, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
        );
        ConeDialogLayout.setVerticalGroup(
            ConeDialogLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jPanel15, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
        );

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);

        jTabbedPane1.setBorder(javax.swing.BorderFactory.createLineBorder(new java.awt.Color(0, 0, 0)));
        jTabbedPane1.setFont(new java.awt.Font("Roboto", 1, 14)); // NOI18N
        jTabbedPane1.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mousePressed(java.awt.event.MouseEvent evt) {
                jTabbedPane1MousePressed(evt);
            }
        });

        jPanel_2D.setBorder(javax.swing.BorderFactory.createLineBorder(new java.awt.Color(0, 0, 0)));

        jCheckBox_VeLuoi.setFont(new java.awt.Font("Roboto", 1, 13)); // NOI18N
        jCheckBox_VeLuoi.setText("Lưới");
        jCheckBox_VeLuoi.addItemListener(new java.awt.event.ItemListener() {
            public void itemStateChanged(java.awt.event.ItemEvent evt) {
                jCheckBox_VeLuoiItemStateChanged(evt);
            }
        });
        jCheckBox_VeLuoi.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jCheckBox_VeLuoiActionPerformed(evt);
            }
        });

        jCheckBox_VeTrucToaDo.setFont(new java.awt.Font("Roboto", 1, 13)); // NOI18N
        jCheckBox_VeTrucToaDo.setText("Trục tọa độ");
        jCheckBox_VeTrucToaDo.addItemListener(new java.awt.event.ItemListener() {
            public void itemStateChanged(java.awt.event.ItemEvent evt) {
                jCheckBox_VeTrucToaDoItemStateChanged(evt);
            }
        });

        jButton_XoaTatCa.setText("Xóa Tất Cả");
        jButton_XoaTatCa.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton_XoaTatCaActionPerformed(evt);
            }
        });

        jButton_VeDoanThangNetLien.setText("Vẽ Đoạn Thẳng");
        jButton_VeDoanThangNetLien.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton_VeDoanThangNetLienActionPerformed(evt);
            }
        });

        jButton_VeDoanThangNetDut.setText("Vẽ Nét Đứt");
        jButton_VeDoanThangNetDut.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton_VeDoanThangNetDutActionPerformed(evt);
            }
        });

        jButton_VeDoanThang2ChamGach.setText("Vẽ Hai Chấm Gạch");
        jButton_VeDoanThang2ChamGach.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton_VeDoanThang2ChamGachActionPerformed(evt);
            }
        });

        jButton_VeDuongTron.setText("Vẽ Đường Tròn");
        jButton_VeDuongTron.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton_VeDuongTronActionPerformed(evt);
            }
        });

        jButton_VeDuongTronNetDut.setText("Vẽ Đường Tròn Nét Đứt");
        jButton_VeDuongTronNetDut.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton_VeDuongTronNetDutActionPerformed(evt);
            }
        });

        jButton_VeHinhChuNhat.setText("Vẽ Hình Chữ Nhật");
        jButton_VeHinhChuNhat.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton_VeHinhChuNhatActionPerformed(evt);
            }
        });

        jButton_VeDiem.setText("Vẽ Điểm");
        jButton_VeDiem.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton_VeDiemActionPerformed(evt);
            }
        });

        jButton_VeHinhTamGiacCan.setText("Vẽ Hình Tam Giác Cân");
        jButton_VeHinhTamGiacCan.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton_VeHinhTamGiacCanActionPerformed(evt);
            }
        });

        jButton_VeCayThong.setText("Vẽ Cây Thông");
        jButton_VeCayThong.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton_VeCayThongActionPerformed(evt);
            }
        });

        jButton_VeBienBao.setText("Vẽ Biển Báo");
        jButton_VeBienBao.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton_VeBienBaoActionPerformed(evt);
            }
        });

        jCheckBox_FillMode.setText("Toggle fill 5x5");
        jCheckBox_FillMode.addItemListener(new java.awt.event.ItemListener() {
            public void itemStateChanged(java.awt.event.ItemEvent evt) {
                jCheckBox_FillModeItemStateChanged(evt);
            }
        });

        jButton_VeSao.setText("Vẽ Sao");
        jButton_VeSao.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton_VeSaoActionPerformed(evt);
            }
        });

        jButton_VeNew_Oto.setText("Vẽ Ô Tô");
        jButton_VeNew_Oto.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton_VeNew_OtoActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout jPanel_2DLayout = new javax.swing.GroupLayout(jPanel_2D);
        jPanel_2D.setLayout(jPanel_2DLayout);
        jPanel_2DLayout.setHorizontalGroup(
            jPanel_2DLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel_2DLayout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jPanel_2DLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jButton_VeDoanThangNetLien, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(jButton_XoaTatCa, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(jButton_VeDoanThangNetDut, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(jButton_VeDoanThang2ChamGach, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(jButton_VeDuongTron, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(jButton_VeDuongTronNetDut, javax.swing.GroupLayout.DEFAULT_SIZE, 200, Short.MAX_VALUE)
                    .addComponent(jButton_VeHinhChuNhat, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(jButton_VeDiem, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(jButton_VeHinhTamGiacCan, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(jButton_VeCayThong, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addGroup(jPanel_2DLayout.createSequentialGroup()
                        .addComponent(jCheckBox_VeLuoi)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 57, Short.MAX_VALUE)
                        .addComponent(jCheckBox_VeTrucToaDo, javax.swing.GroupLayout.PREFERRED_SIZE, 92, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addComponent(jSeparator2)
                    .addComponent(jButton_VeBienBao, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(jButton_VeSao, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addGroup(jPanel_2DLayout.createSequentialGroup()
                        .addComponent(jCheckBox_FillMode)
                        .addGap(0, 0, Short.MAX_VALUE))
                    .addComponent(jButton_VeNew_Oto, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                .addContainerGap())
        );
        jPanel_2DLayout.setVerticalGroup(
            jPanel_2DLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel_2DLayout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jPanel_2DLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jCheckBox_VeLuoi)
                    .addComponent(jCheckBox_VeTrucToaDo))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addComponent(jSeparator2, javax.swing.GroupLayout.PREFERRED_SIZE, 10, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jButton_VeDoanThangNetLien)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jButton_VeDoanThangNetDut)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jButton_VeDoanThang2ChamGach)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jButton_VeDuongTron)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jButton_VeDuongTronNetDut)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jButton_VeHinhChuNhat)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jButton_VeDiem)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jButton_VeHinhTamGiacCan)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jButton_VeCayThong)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jButton_VeBienBao)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jButton_VeSao)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jButton_VeNew_Oto)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 124, Short.MAX_VALUE)
                .addComponent(jCheckBox_FillMode)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addComponent(jButton_XoaTatCa)
                .addContainerGap())
        );

        jTabbedPane1.addTab("2D", jPanel_2D);

        jPanel_3D.setBorder(javax.swing.BorderFactory.createLineBorder(new java.awt.Color(0, 0, 0)));

        openCuboidDialog.setBackground(new java.awt.Color(146, 154, 171));
        openCuboidDialog.setFont(new java.awt.Font("Tahoma", 1, 11)); // NOI18N
        openCuboidDialog.setForeground(new java.awt.Color(255, 255, 255));
        openCuboidDialog.setText("Hình hộp");
        openCuboidDialog.setBorder(null);
        openCuboidDialog.setBorderPainted(false);
        openCuboidDialog.setCursor(new java.awt.Cursor(java.awt.Cursor.DEFAULT_CURSOR));
        openCuboidDialog.setFocusPainted(false);
        openCuboidDialog.setFocusable(false);
        openCuboidDialog.setPreferredSize(new java.awt.Dimension(50, 50));
        openCuboidDialog.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                openCuboidDialogActionPerformed(evt);
            }
        });

        openSphereDialog.setBackground(new java.awt.Color(146, 154, 171));
        openSphereDialog.setFont(new java.awt.Font("Tahoma", 1, 11)); // NOI18N
        openSphereDialog.setForeground(new java.awt.Color(255, 255, 255));
        openSphereDialog.setText("Hình cầu");
        openSphereDialog.setBorder(null);
        openSphereDialog.setBorderPainted(false);
        openSphereDialog.setCursor(new java.awt.Cursor(java.awt.Cursor.DEFAULT_CURSOR));
        openSphereDialog.setFocusPainted(false);
        openSphereDialog.setFocusable(false);
        openSphereDialog.setPreferredSize(new java.awt.Dimension(50, 50));
        openSphereDialog.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                openSphereDialogActionPerformed(evt);
            }
        });

        openCylinderDialog.setBackground(new java.awt.Color(146, 154, 171));
        openCylinderDialog.setFont(new java.awt.Font("Tahoma", 1, 11)); // NOI18N
        openCylinderDialog.setForeground(new java.awt.Color(255, 255, 255));
        openCylinderDialog.setText("Hình trụ");
        openCylinderDialog.setBorder(null);
        openCylinderDialog.setBorderPainted(false);
        openCylinderDialog.setCursor(new java.awt.Cursor(java.awt.Cursor.DEFAULT_CURSOR));
        openCylinderDialog.setFocusPainted(false);
        openCylinderDialog.setFocusable(false);
        openCylinderDialog.setPreferredSize(new java.awt.Dimension(50, 50));
        openCylinderDialog.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                openCylinderDialogActionPerformed(evt);
            }
        });

        openConeDialog.setBackground(new java.awt.Color(146, 154, 171));
        openConeDialog.setFont(new java.awt.Font("Tahoma", 1, 11)); // NOI18N
        openConeDialog.setForeground(new java.awt.Color(255, 255, 255));
        openConeDialog.setText("Hình nón");
        openConeDialog.setBorder(null);
        openConeDialog.setBorderPainted(false);
        openConeDialog.setCursor(new java.awt.Cursor(java.awt.Cursor.DEFAULT_CURSOR));
        openConeDialog.setFocusPainted(false);
        openConeDialog.setFocusable(false);
        openConeDialog.setPreferredSize(new java.awt.Dimension(50, 50));
        openConeDialog.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                openConeDialogActionPerformed(evt);
            }
        });

        setColor3DShape.setBackground(new java.awt.Color(57, 62, 70));
        setColor3DShape.setBorder(javax.swing.BorderFactory.createLineBorder(new java.awt.Color(0, 0, 0)));
        setColor3DShape.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                setColor3DShapeMouseClicked(evt);
            }
        });

        javax.swing.GroupLayout setColor3DShapeLayout = new javax.swing.GroupLayout(setColor3DShape);
        setColor3DShape.setLayout(setColor3DShapeLayout);
        setColor3DShapeLayout.setHorizontalGroup(
            setColor3DShapeLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 0, Short.MAX_VALUE)
        );
        setColor3DShapeLayout.setVerticalGroup(
            setColor3DShapeLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 26, Short.MAX_VALUE)
        );

        undo.setText("Undo");
        undo.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                undoActionPerformed(evt);
            }
        });

        redo.setText("Redo");
        redo.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                redoActionPerformed(evt);
            }
        });

        jPanel1.setBorder(javax.swing.BorderFactory.createLineBorder(new java.awt.Color(0, 0, 0)));

        jLabel29.setFont(new java.awt.Font("Tahoma", 0, 12)); // NOI18N
        jLabel29.setText("A");

        a_3d.setFont(new java.awt.Font("Tahoma", 0, 12)); // NOI18N

        a1_3d.setFont(new java.awt.Font("Tahoma", 0, 12)); // NOI18N

        jLabel30.setFont(new java.awt.Font("Tahoma", 0, 12)); // NOI18N
        jLabel30.setText("A'");

        b_3d.setFont(new java.awt.Font("Tahoma", 0, 12)); // NOI18N

        jLabel31.setFont(new java.awt.Font("Tahoma", 0, 12)); // NOI18N
        jLabel31.setText("B");

        jLabel32.setFont(new java.awt.Font("Tahoma", 0, 12)); // NOI18N
        jLabel32.setText("B'");

        b1_3d.setFont(new java.awt.Font("Tahoma", 0, 12)); // NOI18N

        c_3d.setFont(new java.awt.Font("Tahoma", 0, 12)); // NOI18N

        jLabel33.setFont(new java.awt.Font("Tahoma", 0, 12)); // NOI18N
        jLabel33.setText("C");

        c1_3d.setFont(new java.awt.Font("Tahoma", 0, 12)); // NOI18N

        jLabel34.setFont(new java.awt.Font("Tahoma", 0, 12)); // NOI18N
        jLabel34.setText("C'");

        d_3d.setFont(new java.awt.Font("Tahoma", 0, 12)); // NOI18N

        jLabel35.setFont(new java.awt.Font("Tahoma", 0, 12)); // NOI18N
        jLabel35.setText("D");

        l_3d.setFont(new java.awt.Font("Tahoma", 0, 12)); // NOI18N

        jLabel36.setFont(new java.awt.Font("Tahoma", 0, 12)); // NOI18N
        jLabel36.setText("Chiều dài");

        w_3d.setFont(new java.awt.Font("Tahoma", 0, 12)); // NOI18N

        jLabel37.setFont(new java.awt.Font("Tahoma", 0, 12)); // NOI18N
        jLabel37.setText("Chiều rộng");

        d1_3d.setFont(new java.awt.Font("Tahoma", 0, 12)); // NOI18N

        jLabel38.setFont(new java.awt.Font("Tahoma", 0, 12)); // NOI18N
        jLabel38.setText("D'");

        h_3d.setFont(new java.awt.Font("Tahoma", 0, 12)); // NOI18N

        jLabel39.setFont(new java.awt.Font("Tahoma", 0, 12)); // NOI18N
        jLabel39.setText("Chiều cao");

        r_3d.setFont(new java.awt.Font("Tahoma", 0, 12)); // NOI18N

        jLabel40.setFont(new java.awt.Font("Tahoma", 0, 12)); // NOI18N
        jLabel40.setText("Bán kính");

        o_3d.setFont(new java.awt.Font("Tahoma", 0, 12)); // NOI18N

        jLabel41.setFont(new java.awt.Font("Tahoma", 0, 12)); // NOI18N
        jLabel41.setText("O");

        o1_3d.setFont(new java.awt.Font("Tahoma", 0, 12)); // NOI18N

        jLabel42.setFont(new java.awt.Font("Tahoma", 0, 12)); // NOI18N
        jLabel42.setText("O'");

        title_3D.setFont(new java.awt.Font("Tahoma", 0, 12)); // NOI18N

        javax.swing.GroupLayout jPanel1Layout = new javax.swing.GroupLayout(jPanel1);
        jPanel1.setLayout(jPanel1Layout);
        jPanel1Layout.setHorizontalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(title_3D)
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(a_3d, javax.swing.GroupLayout.PREFERRED_SIZE, 81, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(jLabel29, javax.swing.GroupLayout.PREFERRED_SIZE, 36, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                        .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(a1_3d, javax.swing.GroupLayout.PREFERRED_SIZE, 81, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(jLabel30, javax.swing.GroupLayout.PREFERRED_SIZE, 36, javax.swing.GroupLayout.PREFERRED_SIZE)))
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(l_3d, javax.swing.GroupLayout.PREFERRED_SIZE, 81, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(jLabel36, javax.swing.GroupLayout.PREFERRED_SIZE, 55, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                        .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                            .addComponent(w_3d, javax.swing.GroupLayout.DEFAULT_SIZE, 81, Short.MAX_VALUE)
                            .addComponent(jLabel37, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)))
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(d_3d, javax.swing.GroupLayout.PREFERRED_SIZE, 81, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(jLabel35, javax.swing.GroupLayout.PREFERRED_SIZE, 36, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                        .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(d1_3d, javax.swing.GroupLayout.PREFERRED_SIZE, 81, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(jLabel38, javax.swing.GroupLayout.PREFERRED_SIZE, 36, javax.swing.GroupLayout.PREFERRED_SIZE)))
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(h_3d, javax.swing.GroupLayout.PREFERRED_SIZE, 81, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(jLabel39, javax.swing.GroupLayout.PREFERRED_SIZE, 58, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                        .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(r_3d, javax.swing.GroupLayout.PREFERRED_SIZE, 81, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(jLabel40, javax.swing.GroupLayout.PREFERRED_SIZE, 58, javax.swing.GroupLayout.PREFERRED_SIZE)))
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(jPanel1Layout.createSequentialGroup()
                                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addComponent(b_3d, javax.swing.GroupLayout.PREFERRED_SIZE, 81, javax.swing.GroupLayout.PREFERRED_SIZE)
                                    .addComponent(jLabel31, javax.swing.GroupLayout.PREFERRED_SIZE, 36, javax.swing.GroupLayout.PREFERRED_SIZE))
                                .addGap(18, 18, 18)
                                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addComponent(b1_3d, javax.swing.GroupLayout.PREFERRED_SIZE, 81, javax.swing.GroupLayout.PREFERRED_SIZE)
                                    .addComponent(jLabel32, javax.swing.GroupLayout.PREFERRED_SIZE, 36, javax.swing.GroupLayout.PREFERRED_SIZE)))
                            .addGroup(jPanel1Layout.createSequentialGroup()
                                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addComponent(c_3d, javax.swing.GroupLayout.PREFERRED_SIZE, 81, javax.swing.GroupLayout.PREFERRED_SIZE)
                                    .addComponent(jLabel33, javax.swing.GroupLayout.PREFERRED_SIZE, 36, javax.swing.GroupLayout.PREFERRED_SIZE))
                                .addGap(18, 18, 18)
                                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addComponent(c1_3d, javax.swing.GroupLayout.PREFERRED_SIZE, 81, javax.swing.GroupLayout.PREFERRED_SIZE)
                                    .addComponent(jLabel34, javax.swing.GroupLayout.PREFERRED_SIZE, 36, javax.swing.GroupLayout.PREFERRED_SIZE)))
                            .addGroup(jPanel1Layout.createSequentialGroup()
                                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addComponent(o_3d, javax.swing.GroupLayout.PREFERRED_SIZE, 81, javax.swing.GroupLayout.PREFERRED_SIZE)
                                    .addComponent(jLabel41, javax.swing.GroupLayout.PREFERRED_SIZE, 36, javax.swing.GroupLayout.PREFERRED_SIZE))
                                .addGap(18, 18, 18)
                                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addComponent(o1_3d, javax.swing.GroupLayout.PREFERRED_SIZE, 81, javax.swing.GroupLayout.PREFERRED_SIZE)
                                    .addComponent(jLabel42, javax.swing.GroupLayout.PREFERRED_SIZE, 36, javax.swing.GroupLayout.PREFERRED_SIZE))))
                        .addGap(0, 0, Short.MAX_VALUE)))
                .addContainerGap())
        );
        jPanel1Layout.setVerticalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(title_3D, javax.swing.GroupLayout.PREFERRED_SIZE, 30, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(18, 18, 18)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel29)
                    .addComponent(jLabel30))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(a_3d, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(a1_3d, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addComponent(jLabel31)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(b_3d, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addComponent(jLabel32)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(b1_3d, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addComponent(jLabel33)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(c_3d, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addComponent(jLabel34)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(c1_3d, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addComponent(jLabel35)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(d_3d, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addComponent(jLabel38)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(d1_3d, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addComponent(jLabel41)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(o_3d, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addComponent(jLabel42)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(o1_3d, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel1Layout.createSequentialGroup()
                        .addComponent(jLabel36)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(l_3d, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel1Layout.createSequentialGroup()
                        .addComponent(jLabel37)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(w_3d, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addComponent(jLabel39)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(h_3d, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addComponent(jLabel40)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(r_3d, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)))
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );

        jLabel43.setText("Chọn màu");

        javax.swing.GroupLayout jPanel_3DLayout = new javax.swing.GroupLayout(jPanel_3D);
        jPanel_3D.setLayout(jPanel_3DLayout);
        jPanel_3DLayout.setHorizontalGroup(
            jPanel_3DLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel_3DLayout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jPanel_3DLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jPanel1, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addGroup(jPanel_3DLayout.createSequentialGroup()
                        .addComponent(openConeDialog, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(18, 18, 18)
                        .addComponent(openCylinderDialog, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGroup(jPanel_3DLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(jPanel_3DLayout.createSequentialGroup()
                                .addGap(18, 18, 18)
                                .addComponent(setColor3DShape, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                            .addGroup(jPanel_3DLayout.createSequentialGroup()
                                .addGap(18, 18, 18)
                                .addComponent(jLabel43)
                                .addGap(0, 0, Short.MAX_VALUE))))
                    .addGroup(jPanel_3DLayout.createSequentialGroup()
                        .addComponent(openCuboidDialog, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(18, 18, 18)
                        .addComponent(openSphereDialog, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(18, 18, 18)
                        .addGroup(jPanel_3DLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(redo, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.PREFERRED_SIZE, 67, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(undo, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.PREFERRED_SIZE, 67, javax.swing.GroupLayout.PREFERRED_SIZE))))
                .addContainerGap())
        );
        jPanel_3DLayout.setVerticalGroup(
            jPanel_3DLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel_3DLayout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jPanel_3DLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanel_3DLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                        .addComponent(openSphereDialog, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addComponent(openCuboidDialog, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addGroup(jPanel_3DLayout.createSequentialGroup()
                        .addComponent(undo)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(redo)))
                .addGap(14, 14, 14)
                .addGroup(jPanel_3DLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                    .addGroup(jPanel_3DLayout.createSequentialGroup()
                        .addComponent(jLabel43)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                        .addComponent(setColor3DShape, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addGroup(jPanel_3DLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                        .addComponent(openConeDialog, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addComponent(openCylinderDialog, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addComponent(jPanel1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(15, Short.MAX_VALUE))
        );

        jTabbedPane1.addTab("3D", jPanel_3D);

        jPanel_2DAni.setBorder(javax.swing.BorderFactory.createLineBorder(new java.awt.Color(0, 0, 0)));

        jButton_car.setText("Car");
        jButton_car.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton_carActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout jPanel_2DAniLayout = new javax.swing.GroupLayout(jPanel_2DAni);
        jPanel_2DAni.setLayout(jPanel_2DAniLayout);
        jPanel_2DAniLayout.setHorizontalGroup(
            jPanel_2DAniLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel_2DAniLayout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jButton_car, javax.swing.GroupLayout.DEFAULT_SIZE, 200, Short.MAX_VALUE)
                .addContainerGap())
        );
        jPanel_2DAniLayout.setVerticalGroup(
            jPanel_2DAniLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel_2DAniLayout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jButton_car)
                .addContainerGap(551, Short.MAX_VALUE))
        );

        jTabbedPane1.addTab("2D Animation", jPanel_2DAni);

        jPanel_Graph.setBackground(new java.awt.Color(247, 247, 247));
        jPanel_Graph.setBorder(javax.swing.BorderFactory.createLineBorder(new java.awt.Color(0, 0, 0)));
        jPanel_Graph.setFont(new java.awt.Font("Tahoma", 0, 12)); // NOI18N
        jPanel_Graph.setPreferredSize(new java.awt.Dimension(856, 618));
        jPanel_Graph.addMouseMotionListener(new java.awt.event.MouseMotionAdapter() {
            public void mouseDragged(java.awt.event.MouseEvent evt) {
                jPanel_GraphMouseDragged(evt);
            }
        });
        jPanel_Graph.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mousePressed(java.awt.event.MouseEvent evt) {
                jPanel_GraphMousePressed(evt);
            }
            public void mouseReleased(java.awt.event.MouseEvent evt) {
                jPanel_GraphMouseReleased(evt);
            }
        });

        javax.swing.GroupLayout jPanel_GraphLayout = new javax.swing.GroupLayout(jPanel_Graph);
        jPanel_Graph.setLayout(jPanel_GraphLayout);
        jPanel_GraphLayout.setHorizontalGroup(
            jPanel_GraphLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 854, Short.MAX_VALUE)
        );
        jPanel_GraphLayout.setVerticalGroup(
            jPanel_GraphLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 0, Short.MAX_VALUE)
        );

        jPanel_BienDoiVaThongSo.setBorder(javax.swing.BorderFactory.createLineBorder(new java.awt.Color(0, 0, 0)));

        jLabel_Transormation.setText("Phép Biến Đổi");

        jButton_TinhTien.setText("Tịnh Tiến");
        jButton_TinhTien.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton_TinhTienActionPerformed(evt);
            }
        });

        jButton_DoiXung.setText("Đối Xứng");
        jButton_DoiXung.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton_DoiXungActionPerformed(evt);
            }
        });

        jButton_Quay.setText("Quay");
        jButton_Quay.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton_QuayActionPerformed(evt);
            }
        });

        jButton_ThuPhong.setText("Thu Phóng");
        jButton_ThuPhong.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton_ThuPhongActionPerformed(evt);
            }
        });

        jLabel_Coor.setText("Tọa Độ");

        jPanel_Coor.setBorder(javax.swing.BorderFactory.createLineBorder(new java.awt.Color(0, 0, 0)));

        jLabel_X1.setText("x1:");

        jTextField_x1.setEnabled(false);

        jLabel_Y1.setText("y1:");

        jTextField_y1.setEnabled(false);

        jTextField_x2.setEnabled(false);

        jLabel_X2.setText("x2:");

        jTextField_y2.setEnabled(false);

        jLabel_Y2.setText("y2:");

        jLabel_xO.setText("xO:");

        jLabel_yO.setText("yO:");

        jTextField_xO.setEnabled(false);

        jTextField_yO.setEnabled(false);

        jLabel_r.setText("r:");

        jTextField_r.setEnabled(false);

        jLabel_h.setText("h:");

        jTextField_h.setEnabled(false);

        javax.swing.GroupLayout jPanel_CoorLayout = new javax.swing.GroupLayout(jPanel_Coor);
        jPanel_Coor.setLayout(jPanel_CoorLayout);
        jPanel_CoorLayout.setHorizontalGroup(
            jPanel_CoorLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel_CoorLayout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jPanel_CoorLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jTextField_x1, javax.swing.GroupLayout.Alignment.TRAILING)
                    .addComponent(jTextField_y1)
                    .addComponent(jTextField_x2)
                    .addComponent(jTextField_y2)
                    .addComponent(jTextField_xO)
                    .addComponent(jTextField_yO)
                    .addComponent(jTextField_r)
                    .addComponent(jLabel_h, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(jLabel_r, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addGroup(jPanel_CoorLayout.createSequentialGroup()
                        .addGroup(jPanel_CoorLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(jLabel_X1)
                            .addComponent(jLabel_Y1)
                            .addComponent(jLabel_X2)
                            .addComponent(jLabel_Y2)
                            .addComponent(jLabel_xO)
                            .addComponent(jLabel_yO, javax.swing.GroupLayout.PREFERRED_SIZE, 126, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addGap(0, 0, Short.MAX_VALUE))
                    .addComponent(jTextField_h))
                .addContainerGap())
        );

        jPanel_CoorLayout.linkSize(javax.swing.SwingConstants.HORIZONTAL, new java.awt.Component[] {jLabel_X1, jLabel_X2, jLabel_Y1, jLabel_Y2, jLabel_xO, jLabel_yO});

        jPanel_CoorLayout.setVerticalGroup(
            jPanel_CoorLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel_CoorLayout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jLabel_X1)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jTextField_x1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jLabel_Y1)
                .addGap(4, 4, 4)
                .addComponent(jTextField_y1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(13, 13, 13)
                .addComponent(jLabel_X2)
                .addGap(4, 4, 4)
                .addComponent(jTextField_x2, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jLabel_Y2)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jTextField_y2, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(8, 8, 8)
                .addComponent(jLabel_xO)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jTextField_xO, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jLabel_yO)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jTextField_yO, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jLabel_r)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jTextField_r, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jLabel_h)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jTextField_h, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );

        javax.swing.GroupLayout jPanel_BienDoiVaThongSoLayout = new javax.swing.GroupLayout(jPanel_BienDoiVaThongSo);
        jPanel_BienDoiVaThongSo.setLayout(jPanel_BienDoiVaThongSoLayout);
        jPanel_BienDoiVaThongSoLayout.setHorizontalGroup(
            jPanel_BienDoiVaThongSoLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel_BienDoiVaThongSoLayout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jPanel_BienDoiVaThongSoLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jSeparator1)
                    .addGroup(jPanel_BienDoiVaThongSoLayout.createSequentialGroup()
                        .addGroup(jPanel_BienDoiVaThongSoLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(jLabel_Transormation)
                            .addComponent(jLabel_Coor)
                            .addComponent(jPanel_Coor, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addGap(0, 0, Short.MAX_VALUE))
                    .addComponent(jButton_TinhTien, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(jButton_DoiXung, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(jButton_Quay, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(jButton_ThuPhong, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                .addContainerGap())
        );
        jPanel_BienDoiVaThongSoLayout.setVerticalGroup(
            jPanel_BienDoiVaThongSoLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel_BienDoiVaThongSoLayout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jLabel_Transormation)
                .addGap(18, 18, 18)
                .addComponent(jButton_TinhTien)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jButton_DoiXung)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jButton_Quay)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jButton_ThuPhong)
                .addGap(18, 18, 18)
                .addComponent(jSeparator1, javax.swing.GroupLayout.PREFERRED_SIZE, 10, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jLabel_Coor)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jPanel_Coor, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addContainerGap())
        );

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jTabbedPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 229, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addComponent(jPanel_Graph, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addComponent(jPanel_BienDoiVaThongSo, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jTabbedPane1)
                    .addComponent(jPanel_BienDoiVaThongSo, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(jPanel_Graph, javax.swing.GroupLayout.DEFAULT_SIZE, 620, Short.MAX_VALUE))
                .addContainerGap())
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents
    DoanThang doanThang;
    DuongTron duongTron;
    HinhChuNhat hinhChuNhat;
    Diem2D diem;
    HinhTamGiacCan hinhTamGiacCan;
    CayThong cayThong;
    BienBao bienBao;
    Oto oto;
    New_Oto new_Oto;
    ArrayList<DoanThang> listDoanThang = new ArrayList<>();
    ArrayList<HinhChuNhat> listHinhChuNhat = new ArrayList<>();
    ArrayList<DuongTron> listDuongTron = new ArrayList<>();
    ArrayList<Diem2D> listDiem2D = new ArrayList<>();
    ArrayList<HinhTamGiacCan> listHinhTamGiacCan = new ArrayList<>();
    ArrayList<CayThong> listCayThong = new ArrayList<>();
    ArrayList<BienBao> listBienBao = new ArrayList<>();
    ArrayList<Oto> listOto = new ArrayList<>();
    ArrayList<New_Oto> listNew_Oto = new ArrayList<>();
    
    Sao sao;
    ArrayList<Sao> listSao = new ArrayList<>();
    private void jCheckBox_VeLuoiActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jCheckBox_VeLuoiActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_jCheckBox_VeLuoiActionPerformed

    private void jCheckBox_VeLuoiItemStateChanged(java.awt.event.ItemEvent evt) {//GEN-FIRST:event_jCheckBox_VeLuoiItemStateChanged
        // TODO add your handling code here:
        jPanel_Graph.repaint();
    }//GEN-LAST:event_jCheckBox_VeLuoiItemStateChanged

    private void jCheckBox_VeTrucToaDoItemStateChanged(java.awt.event.ItemEvent evt) {//GEN-FIRST:event_jCheckBox_VeTrucToaDoItemStateChanged
        // TODO add your handling code here:
        jPanel_Graph.repaint();
    }//GEN-LAST:event_jCheckBox_VeTrucToaDoItemStateChanged

    private void jButton_carActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton_carActionPerformed
        // TODO add your handling code here:
        new CarAnimation().setVisible(true);
    }//GEN-LAST:event_jButton_carActionPerformed

    private void jPanel_GraphMousePressed(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_jPanel_GraphMousePressed
        // TODO add your handling code here:
        x1 = evt.getX();
        y1 = evt.getY();
        
        if (drawMode.indexOf("Diem") != -1) {
            diem = new Diem2D(x1, y1);
            diem.veDiem2D((Graphics2D) g);
            listDiem2D.add(diem);
        }
        System.out.println(x1 + ",  " + y1);
    }//GEN-LAST:event_jPanel_GraphMousePressed

    private void jPanel_GraphMouseDragged(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_jPanel_GraphMouseDragged
        // TODO add your handling code here:

        x2 = evt.getX();
        y2 = evt.getY();

        System.out.println(x2 + ", " + y2);

        if (drawMode.equals("DoanThangNetLien")) {
            g.setColor(Color.red);
            doanThang = new DoanThang(x1, y1, x2, y2);
            doanThang.veDoanThang((Graphics2D) g);
        }
        if (drawMode.equals("DoanThangNetDut")) {
            doanThang = new DoanThang(x1, y1, x2, y2);
            doanThang.veDoanThangNetDut((Graphics2D) g);
        }

        if (drawMode.equals("DoanThang2ChamGach")) {
            doanThang = new DoanThang(x1, y1, x2, y2);
            doanThang.veDoan2ChamGach((Graphics2D) g);
        }
        if (drawMode.equals("HinhChuNhat")) {
            hinhChuNhat = new HinhChuNhat(x1, y1, x2, y2);
            hinhChuNhat.veHinhChuNhat((Graphics2D) g);
        }
        if (drawMode.equals("DuongTronNetLien")) {
            duongTron = new DuongTron(x1, y1, (int) Math.sqrt((x2 - x1) * (x2 - x1) + (y2 - y1) * (y2 - y1)));
            duongTron.veDuongTronNetLien((Graphics2D) g);
        }
        if (drawMode.equals("DuongTronNetDut")) {
            duongTron = new DuongTron(x1, y1, (int) Math.sqrt((x2 - x1) * (x2 - x1) + (y2 - y1) * (y2 - y1)));
            duongTron.veDuongTronNetDut((Graphics2D) g);
        }
        if (drawMode.equals("HinhTamGiacCan")) {
            hinhTamGiacCan = new HinhTamGiacCan(x1, y1, x2, y2);
            hinhTamGiacCan.veHinhTamGiacCan((Graphics2D) g);
        }
        if (drawMode.equals("CayThong")) {
            g.setColor(Color.green);
            cayThong = new CayThong(x1, y1, (int) Math.sqrt((x2 - x1) * (x2 - x1) + (y2 - y1) * (y2 - y1)));
            cayThong.veCayThong((Graphics2D) g);
        }
        if (drawMode.equals("BienBao")) {

            bienBao = new BienBao(x1, y1, (int) Math.sqrt((x2 - x1) * (x2 - x1) + (y2 - y1) * (y2 - y1)),"BienBao");
//            bienBao.setDrawMode("BienBao");
            bienBao.veBienBao((Graphics2D) g);
        }
        //
        if (drawMode.equals("Sao")) {

            sao = new Sao(x1, y1, (int) Math.sqrt((x2 - x1) * (x2 - x1) + (y2 - y1) * (y2 - y1)));
            sao.veSao((Graphics2D) g);
        }
        if (drawMode.equals("New_Oto")) {

            new_Oto = new New_Oto(x1, y1, x2, y2);
            new_Oto.veNewOto((Graphics2D) g);
        }
        g.setColor(Color.red);
        repaint();

    }//GEN-LAST:event_jPanel_GraphMouseDragged

    private void jPanel_GraphMouseReleased(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_jPanel_GraphMouseReleased
        // TODO add your handling code here:

        if (drawMode.equals("DoanThangNetLien")) {
            doanThang.setDrawMode(drawMode);
            doanThang.veDoanThang((Graphics2D) g);
            listDoanThang.add(doanThang);
        }
        if (drawMode.equals("DoanThangNetDut")) {
            doanThang.setDrawMode(drawMode);
            doanThang.veDoanThangNetDut((Graphics2D) g);
            listDoanThang.add(doanThang);
        }

        if (drawMode.equals("DoanThang2ChamGach")) {
            doanThang.setDrawMode(drawMode);
            doanThang.veDoan2ChamGach((Graphics2D) g);
            listDoanThang.add(doanThang);
        }
        if (drawMode.equals("HinhChuNhat")) {
            hinhChuNhat.veHinhChuNhat((Graphics2D) g);
            listHinhChuNhat.add(hinhChuNhat);
        }
        if (drawMode.equals("DuongTronNetLien")) {
            duongTron.setDrawMode("DuongTronNetLien");
            duongTron.veDuongTronNetLien((Graphics2D) g);
            listDuongTron.add(duongTron);
        }
        if (drawMode.equals("DuongTronNetDut")) {
            duongTron.setDrawMode("DuongTronNetDut");
            duongTron.veDuongTronNetDut((Graphics2D) g);
            listDuongTron.add(duongTron);
        }
        if (drawMode.equals("HinhTamGiacCan")) {
            hinhTamGiacCan.veHinhTamGiacCan((Graphics2D) g);
            listHinhTamGiacCan.add(hinhTamGiacCan);
        }
        if (drawMode.equals("CayThong")) {

            cayThong.veCayThong((Graphics2D) g);
            listCayThong.add(cayThong);
//            listHinhTamGiacDeu.add(hinhTamGiacDeu);       
        }
        if (drawMode.equals("BienBao")) {
            bienBao.setDrawMode(drawMode);
            bienBao.veBienBao((Graphics2D) g);
            listBienBao.add(bienBao);
//            listHinhTamGiacDeu.add(hinhTamGiacDeu);       
        }
        ///
        if (drawMode.equals("Sao")) {

            sao.veSao((Graphics2D) g);
            listSao.add(sao);
        }
        if (drawMode.equals("New_Oto")) {
            new_Oto.veNewOto((Graphics2D) g);
            listNew_Oto.add(new_Oto);
        }
        repaint();
    }//GEN-LAST:event_jPanel_GraphMouseReleased

    private void jButton_VeDoanThangNetLienActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton_VeDoanThangNetLienActionPerformed
        // TODO add your handling code here:
        drawMode = "DoanThangNetLien";
    }//GEN-LAST:event_jButton_VeDoanThangNetLienActionPerformed

    private void jButton_VeDoanThangNetDutActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton_VeDoanThangNetDutActionPerformed
        // TODO add your handling code here:
        drawMode = "DoanThangNetDut";
    }//GEN-LAST:event_jButton_VeDoanThangNetDutActionPerformed
// private void jButton_VeDoanThangChamGachActionPerformed(java.awt.event.ActionEvent evt) {                                                            
//        // TODO add your handling code here:
//        drawMode = "DoanThangChamGach";
//    }       
    private void jButton_VeDoanThang2ChamGachActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton_VeDoanThang2ChamGachActionPerformed
        // TODO add your handling code here:
        drawMode = "DoanThang2ChamGach";
    }//GEN-LAST:event_jButton_VeDoanThang2ChamGachActionPerformed

    private void jButton_VeDuongTronActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton_VeDuongTronActionPerformed
        // TODO add your handling code here:
        drawMode = "DuongTronNetLien";
    }//GEN-LAST:event_jButton_VeDuongTronActionPerformed

    private void jButton_VeDuongTronNetDutActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton_VeDuongTronNetDutActionPerformed
        // TODO add your handling code here:
        drawMode = "DuongTronNetDut";
    }//GEN-LAST:event_jButton_VeDuongTronNetDutActionPerformed

    private void jButton_VeHinhChuNhatActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton_VeHinhChuNhatActionPerformed
        // TODO add your handling code here:
        drawMode = "HinhChuNhat";
    }//GEN-LAST:event_jButton_VeHinhChuNhatActionPerformed

    private void jButton_VeDiemActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton_VeDiemActionPerformed
        // TODO add your handling code here:
        drawMode = "Diem";
    }//GEN-LAST:event_jButton_VeDiemActionPerformed

    private void jButton_VeHinhTamGiacCanActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton_VeHinhTamGiacCanActionPerformed
        // TODO add your handling code here:
        drawMode = "HinhTamGiacCan";
    }//GEN-LAST:event_jButton_VeHinhTamGiacCanActionPerformed
//    private void jButton_VeElipActionPerformed(java.awt.event.ActionEvent evt) {                                               
//        // TODO add your handling code here:
//        drawMode = "Elip";
//    } 
    private void jButton_XoaTatCaActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton_XoaTatCaActionPerformed
        // TODO add your handling code here:
        listDiem2D.removeAll(listDiem2D);
        listDoanThang.removeAll(listDoanThang);
        listDuongTron.removeAll(listDuongTron);
        listHinhChuNhat.removeAll(listHinhChuNhat);
        listHinhTamGiacCan.removeAll(listHinhTamGiacCan);
        listCayThong.removeAll(listCayThong);
        listBienBao.removeAll(listBienBao);
        listOto.removeAll(listOto);
        listSao.removeAll(listSao);
        listNew_Oto.removeAll(listNew_Oto);
        repaint();
        clear_jTextField();
        
    }//GEN-LAST:event_jButton_XoaTatCaActionPerformed

    private void jButton_VeCayThongActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton_VeCayThongActionPerformed
        // TODO add your handling code here:
        drawMode = "CayThong";
    }//GEN-LAST:event_jButton_VeCayThongActionPerformed

    private void jButton_VeBienBaoActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton_VeBienBaoActionPerformed
        // TODO add your handling code here:
        drawMode = "BienBao";
    }//GEN-LAST:event_jButton_VeBienBaoActionPerformed

    private void jButton_TinhTienActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton_TinhTienActionPerformed
        // TODO add your handling code here:
        String dx = "dx";
        String dy = "dy";
        JTextField jTextField_Dx = new JTextField("0");
        JTextField jTextField_Dy = new JTextField("0");
        Object[] message = new Object[]{dx, jTextField_Dx, dy, jTextField_Dy
        };
        int choice = JOptionPane.showConfirmDialog(rootPane, message, "Tịnh tiến hình vẽ gần đây nhất", JOptionPane.OK_CANCEL_OPTION);
        if (choice == JOptionPane.OK_OPTION) {
            if (drawMode.equals("Diem")) {

                Diem2D diem2d = new TinhTien(listDiem2D.get(listDiem2D.size() - 1),
                        Integer.parseInt(jTextField_Dx.getText()) * step, Integer.parseInt(jTextField_Dy.getText()) * step).tinhTienDiem();
                listDiem2D.get(listDiem2D.size() - 1).setX(diem2d.getX());
                listDiem2D.get(listDiem2D.size() - 1).setY(diem2d.getY());

            }
            if (drawMode.equals("DoanThangNetLien")) {
                Diem2D diem1 = new Diem2D(listDoanThang.get(listDoanThang.size() - 1).getX1(), listDoanThang.get(listDoanThang.size() - 1).getY1());
                Diem2D diem2 = new Diem2D(listDoanThang.get(listDoanThang.size() - 1).getX2(), listDoanThang.get(listDoanThang.size() - 1).getY2());

                Diem2D diem2d = new TinhTien(diem1,
                        Integer.parseInt(jTextField_Dx.getText()) * step, Integer.parseInt(jTextField_Dy.getText()) * step).tinhTienDiem();
                listDoanThang.get(listDoanThang.size() - 1).setX1(diem2d.getX());
                listDoanThang.get(listDoanThang.size() - 1).setY1(diem2d.getY());

                diem2d = new TinhTien(diem2,
                        Integer.parseInt(jTextField_Dx.getText()) * step, Integer.parseInt(jTextField_Dy.getText()) * step).tinhTienDiem();
                listDoanThang.get(listDoanThang.size() - 1).setX2(diem2d.getX());
                listDoanThang.get(listDoanThang.size() - 1).setY2(diem2d.getY());
            }
            if (drawMode.equals("DoanThangNetDut")) {
                Diem2D diem1 = new Diem2D(listDoanThang.get(listDoanThang.size() - 1).getX1(), listDoanThang.get(listDoanThang.size() - 1).getY1());
                Diem2D diem2 = new Diem2D(listDoanThang.get(listDoanThang.size() - 1).getX2(), listDoanThang.get(listDoanThang.size() - 1).getY2());

                Diem2D diem2d = new TinhTien(diem1,
                        Integer.parseInt(jTextField_Dx.getText()) * step, Integer.parseInt(jTextField_Dy.getText()) * step).tinhTienDiem();
                listDoanThang.get(listDoanThang.size() - 1).setX1(diem2d.getX());
                listDoanThang.get(listDoanThang.size() - 1).setY1(diem2d.getY());

                diem2d = new TinhTien(diem2,
                        Integer.parseInt(jTextField_Dx.getText()) * step, Integer.parseInt(jTextField_Dy.getText()) * step).tinhTienDiem();
                listDoanThang.get(listDoanThang.size() - 1).setX2(diem2d.getX());
                listDoanThang.get(listDoanThang.size() - 1).setY2(diem2d.getY());
            }
            if (drawMode.equals("DoanThangChamGach")) {
                Diem2D diem1 = new Diem2D(listDoanThang.get(listDoanThang.size() - 1).getX1(), listDoanThang.get(listDoanThang.size() - 1).getY1());
                Diem2D diem2 = new Diem2D(listDoanThang.get(listDoanThang.size() - 1).getX2(), listDoanThang.get(listDoanThang.size() - 1).getY2());

                Diem2D diem2d = new TinhTien(diem1,
                        Integer.parseInt(jTextField_Dx.getText()) * step, Integer.parseInt(jTextField_Dy.getText()) * step).tinhTienDiem();
                listDoanThang.get(listDoanThang.size() - 1).setX1(diem2d.getX());
                listDoanThang.get(listDoanThang.size() - 1).setY1(diem2d.getY());

                diem2d = new TinhTien(diem2,
                        Integer.parseInt(jTextField_Dx.getText()) * step, Integer.parseInt(jTextField_Dy.getText()) * step).tinhTienDiem();
                listDoanThang.get(listDoanThang.size() - 1).setX2(diem2d.getX());
                listDoanThang.get(listDoanThang.size() - 1).setY2(diem2d.getY());
            }
            if (drawMode.equals("DoanThang2ChamGach")) {
                Diem2D diem1 = new Diem2D(listDoanThang.get(listDoanThang.size() - 1).getX1(), listDoanThang.get(listDoanThang.size() - 1).getY1());
                Diem2D diem2 = new Diem2D(listDoanThang.get(listDoanThang.size() - 1).getX2(), listDoanThang.get(listDoanThang.size() - 1).getY2());

                Diem2D diem2d = new TinhTien(diem1,
                        Integer.parseInt(jTextField_Dx.getText()) * step, Integer.parseInt(jTextField_Dy.getText()) * step).tinhTienDiem();
                listDoanThang.get(listDoanThang.size() - 1).setX1(diem2d.getX());
                listDoanThang.get(listDoanThang.size() - 1).setY1(diem2d.getY());

                diem2d = new TinhTien(diem2,
                        Integer.parseInt(jTextField_Dx.getText()) * step, Integer.parseInt(jTextField_Dy.getText()) * step).tinhTienDiem();
                listDoanThang.get(listDoanThang.size() - 1).setX2(diem2d.getX());
                listDoanThang.get(listDoanThang.size() - 1).setY2(diem2d.getY());
            }
            if (drawMode.equals("HinhChuNhat")) {
                Diem2D diem1 = new Diem2D(listHinhChuNhat.get(listHinhChuNhat.size() - 1).getX1(), listHinhChuNhat.get(listHinhChuNhat.size() - 1).getY1());
                Diem2D diem2 = new Diem2D(listHinhChuNhat.get(listHinhChuNhat.size() - 1).getX2(), listHinhChuNhat.get(listHinhChuNhat.size() - 1).getY2());
                Diem2D diem3 = new Diem2D(listHinhChuNhat.get(listHinhChuNhat.size() - 1).getX3(), listHinhChuNhat.get(listHinhChuNhat.size() - 1).getY3());
                Diem2D diem4 = new Diem2D(listHinhChuNhat.get(listHinhChuNhat.size() - 1).getX4(), listHinhChuNhat.get(listHinhChuNhat.size() - 1).getY4());

                Diem2D diem2d = new TinhTien(diem1, Integer.parseInt(jTextField_Dx.getText()) * step, Integer.parseInt(jTextField_Dy.getText()) * step).tinhTienDiem();

                listHinhChuNhat.get(listHinhChuNhat.size() - 1).setX1(diem2d.getX());
                listHinhChuNhat.get(listHinhChuNhat.size() - 1).setY1(diem2d.getY());

                diem2d = new TinhTien(diem2, Integer.parseInt(jTextField_Dx.getText()) * step, Integer.parseInt(jTextField_Dy.getText()) * step).tinhTienDiem();
                listHinhChuNhat.get(listHinhChuNhat.size() - 1).setX2(diem2d.getX());
                listHinhChuNhat.get(listHinhChuNhat.size() - 1).setY2(diem2d.getY());

                diem2d = new TinhTien(diem3, Integer.parseInt(jTextField_Dx.getText()) * step, Integer.parseInt(jTextField_Dy.getText()) * step).tinhTienDiem();
                listHinhChuNhat.get(listHinhChuNhat.size() - 1).setX3(diem2d.getX());
                listHinhChuNhat.get(listHinhChuNhat.size() - 1).setY3(diem2d.getY());

                diem2d = new TinhTien(diem4, Integer.parseInt(jTextField_Dx.getText()) * step, Integer.parseInt(jTextField_Dy.getText()) * step).tinhTienDiem();
                listHinhChuNhat.get(listHinhChuNhat.size() - 1).setX4(diem2d.getX());
                listHinhChuNhat.get(listHinhChuNhat.size() - 1).setY4(diem2d.getY());
            }
            if (drawMode.equals("DuongTronNetLien")) {
                Diem2D diem1 = new Diem2D(listDuongTron.get(listDuongTron.size() - 1).getxO(), listDuongTron.get(listDuongTron.size() - 1).getyO());
                Diem2D diem2d = new TinhTien(diem1,
                        Integer.parseInt(jTextField_Dx.getText()) * step, Integer.parseInt(jTextField_Dy.getText()) * step).tinhTienDiem();
                listDuongTron.get(listDuongTron.size() - 1).setxO(diem2d.getX());
                listDuongTron.get(listDuongTron.size() - 1).setyO(diem2d.getY());
            }
            if (drawMode.equals("DuongTronNetDut")) {
                Diem2D diem1 = new Diem2D(listDuongTron.get(listDuongTron.size() - 1).getxO(), listDuongTron.get(listDuongTron.size() - 1).getyO());
                Diem2D diem2d = new TinhTien(diem1,
                        Integer.parseInt(jTextField_Dx.getText()) * step, Integer.parseInt(jTextField_Dy.getText()) * step).tinhTienDiem();
                listDuongTron.get(listDuongTron.size() - 1).setxO(diem2d.getX());
                listDuongTron.get(listDuongTron.size() - 1).setyO(diem2d.getY());
            }
            if (drawMode.equals("HinhTamGiacCan")) {
                Diem2D diem1 = new Diem2D(listHinhTamGiacCan.get(listHinhTamGiacCan.size() - 1).getxDinh(), listHinhTamGiacCan.get(listHinhTamGiacCan.size() - 1).getyDinh());
                Diem2D diem2d = new TinhTien(diem1,
                        Integer.parseInt(jTextField_Dx.getText()) * step, Integer.parseInt(jTextField_Dy.getText()) * step).tinhTienDiem();
                listHinhTamGiacCan.get(listHinhTamGiacCan.size() - 1).setxDinh(diem2d.getX());
                listHinhTamGiacCan.get(listHinhTamGiacCan.size() - 1).setyDinh(diem2d.getY());
            }
            if (drawMode.equals("CayThong")) {
                Diem2D diemO = new Diem2D(listCayThong.get(listCayThong.size() - 1).getxDinh(), listCayThong.get(listCayThong.size() - 1).getyDinh());
                Diem2D diem2d = new TinhTien(diemO,
                        Integer.parseInt(jTextField_Dx.getText()) * step, Integer.parseInt(jTextField_Dy.getText()) * step).tinhTienDiem();
                listCayThong.get(listCayThong.size() - 1).setxDinh(diem2d.getX());
                listCayThong.get(listCayThong.size() - 1).setyDinh(diem2d.getY());

                Diem2D diem1 = new Diem2D(listCayThong.get(listCayThong.size() - 1).getHinhTamGiacCan1().getxDinh(), listCayThong.get(listCayThong.size() - 1).getHinhTamGiacCan1().getyDinh());
                Diem2D diem2 = new Diem2D(listCayThong.get(listCayThong.size() - 1).getHinhTamGiacCan1().getX2(), listCayThong.get(listCayThong.size() - 1).getHinhTamGiacCan1().getY2());
                Diem2D diem3 = new Diem2D(listCayThong.get(listCayThong.size() - 1).getHinhTamGiacCan1().getX3(), listCayThong.get(listCayThong.size() - 1).getHinhTamGiacCan1().getY3());

                diem2d = new TinhTien(diem1,
                        Integer.parseInt(jTextField_Dx.getText()) * step, Integer.parseInt(jTextField_Dy.getText()) * step).tinhTienDiem();
                listCayThong.get(listCayThong.size() - 1).getHinhTamGiacCan1().setxDinh(diem2d.getX());
                listCayThong.get(listCayThong.size() - 1).getHinhTamGiacCan1().setyDinh(diem2d.getY());

                diem2d = new TinhTien(diem2,
                        Integer.parseInt(jTextField_Dx.getText()) * step, Integer.parseInt(jTextField_Dy.getText()) * step).tinhTienDiem();
                listCayThong.get(listCayThong.size() - 1).getHinhTamGiacCan1().setX2(diem2d.getX());
                listCayThong.get(listCayThong.size() - 1).getHinhTamGiacCan1().setY2(diem2d.getY());

                diem2d = new TinhTien(diem3,
                        Integer.parseInt(jTextField_Dx.getText()) * step, Integer.parseInt(jTextField_Dy.getText()) * step).tinhTienDiem();
                listCayThong.get(listCayThong.size() - 1).getHinhTamGiacCan1().setX3(diem2d.getX());
                listCayThong.get(listCayThong.size() - 1).getHinhTamGiacCan1().setY3(diem2d.getY());

                //quay hinh tam Giac thu 2
                diem1 = new Diem2D(listCayThong.get(listCayThong.size() - 1).getHinhTamGiacCan2().getxDinh(), listCayThong.get(listCayThong.size() - 1).getHinhTamGiacCan2().getyDinh());
                diem2 = new Diem2D(listCayThong.get(listCayThong.size() - 1).getHinhTamGiacCan2().getX2(), listCayThong.get(listCayThong.size() - 1).getHinhTamGiacCan2().getY2());
                diem3 = new Diem2D(listCayThong.get(listCayThong.size() - 1).getHinhTamGiacCan2().getX3(), listCayThong.get(listCayThong.size() - 1).getHinhTamGiacCan2().getY3());

                diem2d = new TinhTien(diem1,
                        Integer.parseInt(jTextField_Dx.getText()) * step, Integer.parseInt(jTextField_Dy.getText()) * step).tinhTienDiem();
                listCayThong.get(listCayThong.size() - 1).getHinhTamGiacCan2().setxDinh(diem2d.getX());
                listCayThong.get(listCayThong.size() - 1).getHinhTamGiacCan2().setyDinh(diem2d.getY());

                diem2d = new TinhTien(diem2,
                        Integer.parseInt(jTextField_Dx.getText()) * step, Integer.parseInt(jTextField_Dy.getText()) * step).tinhTienDiem();
                listCayThong.get(listCayThong.size() - 1).getHinhTamGiacCan2().setX2(diem2d.getX());
                listCayThong.get(listCayThong.size() - 1).getHinhTamGiacCan2().setY2(diem2d.getY());

                diem2d = new TinhTien(diem3,
                        Integer.parseInt(jTextField_Dx.getText()) * step, Integer.parseInt(jTextField_Dy.getText()) * step).tinhTienDiem();
                listCayThong.get(listCayThong.size() - 1).getHinhTamGiacCan2().setX3(diem2d.getX());
                listCayThong.get(listCayThong.size() - 1).getHinhTamGiacCan2().setY3(diem2d.getY());

                //quay hinh tam Giac thu 3
                diem1 = new Diem2D(listCayThong.get(listCayThong.size() - 1).getHinhTamGiacCan3().getxDinh(), listCayThong.get(listCayThong.size() - 1).getHinhTamGiacCan3().getyDinh());
                diem2 = new Diem2D(listCayThong.get(listCayThong.size() - 1).getHinhTamGiacCan3().getX2(), listCayThong.get(listCayThong.size() - 1).getHinhTamGiacCan3().getY2());
                diem3 = new Diem2D(listCayThong.get(listCayThong.size() - 1).getHinhTamGiacCan3().getX3(), listCayThong.get(listCayThong.size() - 1).getHinhTamGiacCan3().getY3());

                diem2d = new TinhTien(diem1,
                        Integer.parseInt(jTextField_Dx.getText()) * step, Integer.parseInt(jTextField_Dy.getText()) * step).tinhTienDiem();
                listCayThong.get(listCayThong.size() - 1).getHinhTamGiacCan3().setxDinh(diem2d.getX());
                listCayThong.get(listCayThong.size() - 1).getHinhTamGiacCan3().setyDinh(diem2d.getY());

                diem2d = new TinhTien(diem2,
                        Integer.parseInt(jTextField_Dx.getText()) * step, Integer.parseInt(jTextField_Dy.getText()) * step).tinhTienDiem();
                listCayThong.get(listCayThong.size() - 1).getHinhTamGiacCan3().setX2(diem2d.getX());
                listCayThong.get(listCayThong.size() - 1).getHinhTamGiacCan3().setY2(diem2d.getY());

                diem2d = new TinhTien(diem3,
                        Integer.parseInt(jTextField_Dx.getText()) * step, Integer.parseInt(jTextField_Dy.getText()) * step).tinhTienDiem();
                listCayThong.get(listCayThong.size() - 1).getHinhTamGiacCan3().setX3(diem2d.getX());
                listCayThong.get(listCayThong.size() - 1).getHinhTamGiacCan3().setY3(diem2d.getY());

                //quay hcn
                diem1 = new Diem2D(listCayThong.get(listCayThong.size() - 1).getHinhChuNhat().getX1(), listCayThong.get(listCayThong.size() - 1).getHinhChuNhat().getY1());
                diem2 = new Diem2D(listCayThong.get(listCayThong.size() - 1).getHinhChuNhat().getX2(), listCayThong.get(listCayThong.size() - 1).getHinhChuNhat().getY2());
                diem3 = new Diem2D(listCayThong.get(listCayThong.size() - 1).getHinhChuNhat().getX3(), listCayThong.get(listCayThong.size() - 1).getHinhChuNhat().getY3());
                Diem2D diem4 = new Diem2D(listCayThong.get(listCayThong.size() - 1).getHinhChuNhat().getX4(), listCayThong.get(listCayThong.size() - 1).getHinhChuNhat().getY4());

                diem2d = new TinhTien(diem1,
                        Integer.parseInt(jTextField_Dx.getText()) * step, Integer.parseInt(jTextField_Dy.getText()) * step).tinhTienDiem();

                listCayThong.get(listCayThong.size() - 1).getHinhChuNhat().setX1(diem2d.getX());
                listCayThong.get(listCayThong.size() - 1).getHinhChuNhat().setY1(diem2d.getY());

                diem2d = new TinhTien(diem2,
                        Integer.parseInt(jTextField_Dx.getText()) * step, Integer.parseInt(jTextField_Dy.getText()) * step).tinhTienDiem();
                listCayThong.get(listCayThong.size() - 1).getHinhChuNhat().setX2(diem2d.getX());
                listCayThong.get(listCayThong.size() - 1).getHinhChuNhat().setY2(diem2d.getY());

                diem2d = new TinhTien(diem3,
                        Integer.parseInt(jTextField_Dx.getText()) * step, Integer.parseInt(jTextField_Dy.getText()) * step).tinhTienDiem();
                listCayThong.get(listCayThong.size() - 1).getHinhChuNhat().setX3(diem2d.getX());
                listCayThong.get(listCayThong.size() - 1).getHinhChuNhat().setY3(diem2d.getY());

                diem2d = new TinhTien(diem4,
                        Integer.parseInt(jTextField_Dx.getText()) * step, Integer.parseInt(jTextField_Dy.getText()) * step).tinhTienDiem();
                listCayThong.get(listCayThong.size() - 1).getHinhChuNhat().setX4(diem2d.getX());
                listCayThong.get(listCayThong.size() - 1).getHinhChuNhat().setY4(diem2d.getY());

            }
            if (drawMode.equals("BienBao")) {
                Diem2D diemO = new Diem2D(listBienBao.get(listBienBao.size() - 1).getxTamBienBao(), listBienBao.get(listBienBao.size() - 1).getyTamBienBao());
                Diem2D diem2d = new TinhTien(diemO,
                        Integer.parseInt(jTextField_Dx.getText()) * step, Integer.parseInt(jTextField_Dy.getText()) * step).tinhTienDiem();
                listBienBao.get(listBienBao.size() - 1).setxTamBienBao(diem2d.getX());
                listBienBao.get(listBienBao.size() - 1).setyTamBienBao(diem2d.getY());

                Diem2D diem1 = new Diem2D(listBienBao.get(listBienBao.size() - 1).getHinhChuNhat().getX1(), listBienBao.get(listBienBao.size() - 1).getHinhChuNhat().getY1());
                Diem2D diem2 = new Diem2D(listBienBao.get(listBienBao.size() - 1).getHinhChuNhat().getX2(), listBienBao.get(listBienBao.size() - 1).getHinhChuNhat().getY2());
                Diem2D diem3 = new Diem2D(listBienBao.get(listBienBao.size() - 1).getHinhChuNhat().getX3(), listBienBao.get(listBienBao.size() - 1).getHinhChuNhat().getY3());
                Diem2D diem4 = new Diem2D(listBienBao.get(listBienBao.size() - 1).getHinhChuNhat().getX4(), listBienBao.get(listBienBao.size() - 1).getHinhChuNhat().getY4());

                diem2d = new TinhTien(diem1, Integer.parseInt(jTextField_Dx.getText()) * step, Integer.parseInt(jTextField_Dy.getText()) * step).tinhTienDiem();

                listBienBao.get(listBienBao.size() - 1).getHinhChuNhat().setX1(diem2d.getX());
                listBienBao.get(listBienBao.size() - 1).getHinhChuNhat().setY1(diem2d.getY());

                diem2d = new TinhTien(diem2, Integer.parseInt(jTextField_Dx.getText()) * step, Integer.parseInt(jTextField_Dy.getText()) * step).tinhTienDiem();
                listBienBao.get(listBienBao.size() - 1).getHinhChuNhat().setX2(diem2d.getX());
                listBienBao.get(listBienBao.size() - 1).getHinhChuNhat().setY2(diem2d.getY());

                diem2d = new TinhTien(diem3, Integer.parseInt(jTextField_Dx.getText()) * step, Integer.parseInt(jTextField_Dy.getText()) * step).tinhTienDiem();
                listBienBao.get(listBienBao.size() - 1).getHinhChuNhat().setX3(diem2d.getX());
                listBienBao.get(listBienBao.size() - 1).getHinhChuNhat().setY3(diem2d.getY());

                diem2d = new TinhTien(diem4, Integer.parseInt(jTextField_Dx.getText()) * step, Integer.parseInt(jTextField_Dy.getText()) * step).tinhTienDiem();
                listBienBao.get(listBienBao.size() - 1).getHinhChuNhat().setX4(diem2d.getX());
                listBienBao.get(listBienBao.size() - 1).getHinhChuNhat().setY4(diem2d.getY());
//            listHinhTamGiacDeu.add(hinhTamGiacDeu);       
            }
            if(drawMode.equals("Sao")){
                Diem2D diemO = new Diem2D(listSao.get(listSao.size() - 1).getxO(), listSao.get(listSao.size() - 1).getyO());
                Diem2D diem2d = new TinhTien(diemO, Integer.parseInt(jTextField_Dx.getText()) * step, Integer.parseInt(jTextField_Dy.getText()) * step).tinhTienDiem();

                listSao.get(listSao.size() - 1).setxO(diem2d.getX());
                listSao.get(listSao.size() - 1).setyO(diem2d.getY());
              
                Diem2D diemTren = new Diem2D(listSao.get(listSao.size() - 1).getxTren(), listSao.get(listSao.size() - 1).getyTren());
                Diem2D diemDuoi = new Diem2D(listSao.get(listSao.size() - 1).getxDuoi(), listSao.get(listSao.size() - 1).getyDuoi());
                Diem2D diemTrai = new Diem2D(listSao.get(listSao.size() - 1).getxTrai(), listSao.get(listSao.size() - 1).getyTrai());
                Diem2D diemPhai = new Diem2D(listSao.get(listSao.size() - 1).getxPhai(), listSao.get(listSao.size() - 1).getyPhai());
                
                Diem2D diemTrenDuongTron = new Diem2D(listSao.get(listSao.size() - 1).getxTrenDuongTron(), listSao.get(listSao.size() - 1).getyTrenDuongTron());
                Diem2D diemDuoiDuongTron = new Diem2D(listSao.get(listSao.size() - 1).getxDuoiDuongTron(), listSao.get(listSao.size() - 1).getyDuoiDuongTron());
                Diem2D diemTraiDuongTron = new Diem2D(listSao.get(listSao.size() - 1).getxTraiDuongTron(), listSao.get(listSao.size() - 1).getyTraiDuongTron());
                Diem2D diemPhaiDuongTron = new Diem2D(listSao.get(listSao.size() - 1).getxPhaiDuongTron(), listSao.get(listSao.size() - 1).getyPhaiDuongTron());
                
                diem2d = new TinhTien(diemTren, Integer.parseInt(jTextField_Dx.getText()) * step, Integer.parseInt(jTextField_Dy.getText()) * step).tinhTienDiem();
                listSao.get(listSao.size()-1).setxTren(diem2d.getX());
                listSao.get(listSao.size()-1).setyTren(diem2d.getY());
                
                diem2d = new TinhTien(diemDuoi, Integer.parseInt(jTextField_Dx.getText()) * step, Integer.parseInt(jTextField_Dy.getText()) * step).tinhTienDiem();
                listSao.get(listSao.size()-1).setxDuoi(diem2d.getX());
                listSao.get(listSao.size()-1).setyDuoi(diem2d.getY());
                
                diem2d = new TinhTien(diemTrai, Integer.parseInt(jTextField_Dx.getText()) * step, Integer.parseInt(jTextField_Dy.getText()) * step).tinhTienDiem();
                listSao.get(listSao.size()-1).setxTrai(diem2d.getX());
                listSao.get(listSao.size()-1).setyTrai(diem2d.getY());
                
                diem2d = new TinhTien(diemPhai, Integer.parseInt(jTextField_Dx.getText()) * step, Integer.parseInt(jTextField_Dy.getText()) * step).tinhTienDiem();
                listSao.get(listSao.size()-1).setxPhai(diem2d.getX());
                listSao.get(listSao.size()-1).setyPhai(diem2d.getY());
                
                //
                diem2d = new TinhTien(diemTrenDuongTron, Integer.parseInt(jTextField_Dx.getText()) * step, Integer.parseInt(jTextField_Dy.getText()) * step).tinhTienDiem();
                listSao.get(listSao.size()-1).setxTrenDuongTron(diem2d.getX());
                listSao.get(listSao.size()-1).setyTrenDuongTron(diem2d.getY());
                
                diem2d = new TinhTien(diemDuoiDuongTron, Integer.parseInt(jTextField_Dx.getText()) * step, Integer.parseInt(jTextField_Dy.getText()) * step).tinhTienDiem();
                listSao.get(listSao.size()-1).setxDuoiDuongTron(diem2d.getX());
                listSao.get(listSao.size()-1).setyDuoiDuongTron(diem2d.getY());
                
                diem2d = new TinhTien(diemTraiDuongTron, Integer.parseInt(jTextField_Dx.getText()) * step, Integer.parseInt(jTextField_Dy.getText()) * step).tinhTienDiem();
                listSao.get(listSao.size()-1).setxTraiDuongTron(diem2d.getX());
                listSao.get(listSao.size()-1).setyTraiDuongTron(diem2d.getY());
                
                diem2d = new TinhTien(diemPhaiDuongTron, Integer.parseInt(jTextField_Dx.getText()) * step, Integer.parseInt(jTextField_Dy.getText()) * step).tinhTienDiem();
                listSao.get(listSao.size()-1).setxPhaiDuongTron(diem2d.getX());
                listSao.get(listSao.size()-1).setyPhaiDuongTron(diem2d.getY());
            }
            if(drawMode.equals("New_Oto")){
            Diem2D diem1 = new Diem2D(listNew_Oto.get(listNew_Oto.size()-1).getxMuiXeDuoi(), listNew_Oto.get(listNew_Oto.size()-1).getyMuiXeDuoi());
            Diem2D diem2 = new Diem2D(listNew_Oto.get(listNew_Oto.size()-1).getxMuiXeGiua(), listNew_Oto.get(listNew_Oto.size()-1).getyMuiXeGiua());
            Diem2D diem3 = new Diem2D(listNew_Oto.get(listNew_Oto.size()-1).getxMuiXeTren(), listNew_Oto.get(listNew_Oto.size()-1).getyMuiXeTren());

            Diem2D diem2d;

            diem2d = new TinhTien(diem1, Integer.parseInt(jTextField_Dx.getText()) * step, Integer.parseInt(jTextField_Dy.getText()) * step).tinhTienDiem();

            listNew_Oto.get(listNew_Oto.size()-1).setxMuiXeDuoi(diem2d.getX());
            listNew_Oto.get(listNew_Oto.size()-1).setyMuiXeDuoi(diem2d.getY());

           diem2d = new TinhTien(diem2, Integer.parseInt(jTextField_Dx.getText()) * step, Integer.parseInt(jTextField_Dy.getText()) * step).tinhTienDiem();

            listNew_Oto.get(listNew_Oto.size()-1).setxMuiXeGiua(diem2d.getX());
            listNew_Oto.get(listNew_Oto.size()-1).setyMuiXeGiua(diem2d.getY());

diem2d = new TinhTien(diem3, Integer.parseInt(jTextField_Dx.getText()) * step, Integer.parseInt(jTextField_Dy.getText()) * step).tinhTienDiem();

            listNew_Oto.get(listNew_Oto.size()-1).setxMuiXeTren(diem2d.getX());
            listNew_Oto.get(listNew_Oto.size()-1).setyMuiXeTren(diem2d.getY());

            diem1 = new Diem2D(listNew_Oto.get(listNew_Oto.size()-1).getxNocXe1(), listNew_Oto.get(listNew_Oto.size()-1).getyNocXe1());
            diem2 = new Diem2D(listNew_Oto.get(listNew_Oto.size()-1).getxNocXe2(), listNew_Oto.get(listNew_Oto.size()-1).getyNocXe2());
            diem3 = new Diem2D(listNew_Oto.get(listNew_Oto.size()-1).getxNocXe3(), listNew_Oto.get(listNew_Oto.size()-1).getyNocXe3());

           diem2d = new TinhTien(diem1, Integer.parseInt(jTextField_Dx.getText()) * step, Integer.parseInt(jTextField_Dy.getText()) * step).tinhTienDiem();

            listNew_Oto.get(listNew_Oto.size()-1).setxNocXe1(diem2d.getX());
            listNew_Oto.get(listNew_Oto.size()-1).setyNocXe1(diem2d.getY());

            diem2d = new TinhTien(diem2, Integer.parseInt(jTextField_Dx.getText()) * step, Integer.parseInt(jTextField_Dy.getText()) * step).tinhTienDiem();

            listNew_Oto.get(listNew_Oto.size()-1).setxNocXe2(diem2d.getX());
            listNew_Oto.get(listNew_Oto.size()-1).setyNocXe2(diem2d.getY());

            diem2d = new TinhTien(diem3, Integer.parseInt(jTextField_Dx.getText()) * step, Integer.parseInt(jTextField_Dy.getText()) * step).tinhTienDiem();

            listNew_Oto.get(listNew_Oto.size()-1).setxNocXe3(diem2d.getX());
            listNew_Oto.get(listNew_Oto.size()-1).setyNocXe3(diem2d.getY());
            //
            diem1 = new Diem2D(listNew_Oto.get(listNew_Oto.size()-1).getxDuoiXe1(), listNew_Oto.get(listNew_Oto.size()-1).getyDuoiXe1());
            diem2 = new Diem2D(listNew_Oto.get(listNew_Oto.size()-1).getxDuoiXe2(), listNew_Oto.get(listNew_Oto.size()-1).getyDuoiXe2());
            diem3 = new Diem2D(listNew_Oto.get(listNew_Oto.size()-1).getxDuoiXe3(), listNew_Oto.get(listNew_Oto.size()-1).getyDuoiXe3());

            diem2d = new TinhTien(diem1, Integer.parseInt(jTextField_Dx.getText()) * step, Integer.parseInt(jTextField_Dy.getText()) * step).tinhTienDiem();

            listNew_Oto.get(listNew_Oto.size()-1).setxDuoiXe1(diem2d.getX());
            listNew_Oto.get(listNew_Oto.size()-1).setyDuoiXe1(diem2d.getY());

            diem2d = new TinhTien(diem2, Integer.parseInt(jTextField_Dx.getText()) * step, Integer.parseInt(jTextField_Dy.getText()) * step).tinhTienDiem();

            listNew_Oto.get(listNew_Oto.size()-1).setxDuoiXe2(diem2d.getX());
            listNew_Oto.get(listNew_Oto.size()-1).setyDuoiXe2(diem2d.getY());

diem2d = new TinhTien(diem3, Integer.parseInt(jTextField_Dx.getText()) * step, Integer.parseInt(jTextField_Dy.getText()) * step).tinhTienDiem();

            listNew_Oto.get(listNew_Oto.size()-1).setxDuoiXe3(diem2d.getX());
            listNew_Oto.get(listNew_Oto.size()-1).setyDuoiXe3(diem2d.getY());
            //
            diem1 = new Diem2D(listNew_Oto.get(listNew_Oto.size()-1).getxDuoiXe4(), listNew_Oto.get(listNew_Oto.size()-1).getyDuoiXe4());
            diem2 = new Diem2D(listNew_Oto.get(listNew_Oto.size()-1).getxDuoiXe5(), listNew_Oto.get(listNew_Oto.size()-1).getyDuoiXe5());
            diem3 = new Diem2D(listNew_Oto.get(listNew_Oto.size()-1).getxDuoiXeDuoi(), listNew_Oto.get(listNew_Oto.size()-1).getyDuoiXeDuoi());

            diem2d = new TinhTien(diem1, Integer.parseInt(jTextField_Dx.getText()) * step, Integer.parseInt(jTextField_Dy.getText()) * step).tinhTienDiem();

            listNew_Oto.get(listNew_Oto.size()-1).setxDuoiXe4(diem2d.getX());
            listNew_Oto.get(listNew_Oto.size()-1).setyDuoiXe4(diem2d.getY());

            diem2d = new TinhTien(diem2, Integer.parseInt(jTextField_Dx.getText()) * step, Integer.parseInt(jTextField_Dy.getText()) * step).tinhTienDiem();

            listNew_Oto.get(listNew_Oto.size()-1).setxDuoiXe5(diem2d.getX());
            listNew_Oto.get(listNew_Oto.size()-1).setyDuoiXe5(diem2d.getY());

            diem2d = new TinhTien(diem3, Integer.parseInt(jTextField_Dx.getText()) * step, Integer.parseInt(jTextField_Dy.getText()) * step).tinhTienDiem();

            listNew_Oto.get(listNew_Oto.size()-1).setxDuoiXeDuoi(diem2d.getX());
            listNew_Oto.get(listNew_Oto.size()-1).setyDuoiXeDuoi(diem2d.getY());
            //
            diem1 = new Diem2D(listNew_Oto.get(listNew_Oto.size()-1).getxBanhXeTruoc(), listNew_Oto.get(listNew_Oto.size()-1).getyBanhXeTruoc());
            diem2 = new Diem2D(listNew_Oto.get(listNew_Oto.size()-1).getxBanhXeSau(), listNew_Oto.get(listNew_Oto.size()-1).getyBanhXeSau());

            diem2d = new TinhTien(diem1, Integer.parseInt(jTextField_Dx.getText()) * step, Integer.parseInt(jTextField_Dy.getText()) * step).tinhTienDiem();

            listNew_Oto.get(listNew_Oto.size()-1).setxBanhXeTruoc(diem2d.getX());
            listNew_Oto.get(listNew_Oto.size()-1).setyBanhXeTruoc(diem2d.getY());

            diem2d = new TinhTien(diem2, Integer.parseInt(jTextField_Dx.getText()) * step, Integer.parseInt(jTextField_Dy.getText()) * step).tinhTienDiem();

            listNew_Oto.get(listNew_Oto.size()-1).setxBanhXeSau(diem2d.getX());
            listNew_Oto.get(listNew_Oto.size()-1).setyBanhXeSau(diem2d.getY());
            //
            diem1 = new Diem2D(listNew_Oto.get(listNew_Oto.size()-1).getxKinh1(), listNew_Oto.get(listNew_Oto.size()-1).getyKinh1());
            diem2 = new Diem2D(listNew_Oto.get(listNew_Oto.size()-1).getxKinh2(), listNew_Oto.get(listNew_Oto.size()-1).getyKinh2());
            diem3 = new Diem2D(listNew_Oto.get(listNew_Oto.size()-1).getxKinh3(), listNew_Oto.get(listNew_Oto.size()-1).getyKinh3());

           diem2d = new TinhTien(diem1, Integer.parseInt(jTextField_Dx.getText()) * step, Integer.parseInt(jTextField_Dy.getText()) * step).tinhTienDiem();

            listNew_Oto.get(listNew_Oto.size()-1).setxKinh1(diem2d.getX());
            listNew_Oto.get(listNew_Oto.size()-1).setyKinh1(diem2d.getY());

            diem2d = new TinhTien(diem2, Integer.parseInt(jTextField_Dx.getText()) * step, Integer.parseInt(jTextField_Dy.getText()) * step).tinhTienDiem();

            listNew_Oto.get(listNew_Oto.size()-1).setxKinh2(diem2d.getX());
            listNew_Oto.get(listNew_Oto.size()-1).setyKinh2(diem2d.getY());

            diem2d = new TinhTien(diem3, Integer.parseInt(jTextField_Dx.getText()) * step, Integer.parseInt(jTextField_Dy.getText()) * step).tinhTienDiem();

            listNew_Oto.get(listNew_Oto.size()-1).setxKinh3(diem2d.getX());
            listNew_Oto.get(listNew_Oto.size()-1).setyKinh3(diem2d.getY());
            //
            diem1 = new Diem2D(listNew_Oto.get(listNew_Oto.size()-1).getxKinh4(), listNew_Oto.get(listNew_Oto.size()-1).getyKinh4());
            diem2 = new Diem2D(listNew_Oto.get(listNew_Oto.size()-1).getxKinh5(), listNew_Oto.get(listNew_Oto.size()-1).getyKinh5());
            diem3 = new Diem2D(listNew_Oto.get(listNew_Oto.size()-1).getxKinh6(), listNew_Oto.get(listNew_Oto.size()-1).getyKinh6());

            diem2d = new TinhTien(diem1, Integer.parseInt(jTextField_Dx.getText()) * step, Integer.parseInt(jTextField_Dy.getText()) * step).tinhTienDiem();

            listNew_Oto.get(listNew_Oto.size()-1).setxKinh4(diem2d.getX());
            listNew_Oto.get(listNew_Oto.size()-1).setyKinh4(diem2d.getY());

            diem2d = new TinhTien(diem2, Integer.parseInt(jTextField_Dx.getText()) * step, Integer.parseInt(jTextField_Dy.getText()) * step).tinhTienDiem();

            listNew_Oto.get(listNew_Oto.size()-1).setxKinh5(diem2d.getX());
            listNew_Oto.get(listNew_Oto.size()-1).setyKinh5(diem2d.getY());

            diem2d = new TinhTien(diem3, Integer.parseInt(jTextField_Dx.getText()) * step, Integer.parseInt(jTextField_Dy.getText()) * step).tinhTienDiem();

            listNew_Oto.get(listNew_Oto.size()-1).setxKinh6(diem2d.getX());
            listNew_Oto.get(listNew_Oto.size()-1).setyKinh6(diem2d.getY());
            //
            diem1 = new Diem2D(listNew_Oto.get(listNew_Oto.size()-1).getxKinh7(), listNew_Oto.get(listNew_Oto.size()-1).getyKinh7());
            diem2 = new Diem2D(listNew_Oto.get(listNew_Oto.size()-1).getxKinh8(), listNew_Oto.get(listNew_Oto.size()-1).getyKinh8());
            diem3 = new Diem2D(listNew_Oto.get(listNew_Oto.size()-1).getxKinh9(), listNew_Oto.get(listNew_Oto.size()-1).getyKinh9());

            diem2d = new TinhTien(diem1, Integer.parseInt(jTextField_Dx.getText()) * step, Integer.parseInt(jTextField_Dy.getText()) * step).tinhTienDiem();

            listNew_Oto.get(listNew_Oto.size()-1).setxKinh7(diem2d.getX());
            listNew_Oto.get(listNew_Oto.size()-1).setyKinh7(diem2d.getY());

            diem2d = new TinhTien(diem2, Integer.parseInt(jTextField_Dx.getText()) * step, Integer.parseInt(jTextField_Dy.getText()) * step).tinhTienDiem();

            listNew_Oto.get(listNew_Oto.size()-1).setxKinh8(diem2d.getX());
            listNew_Oto.get(listNew_Oto.size()-1).setyKinh8(diem2d.getY());

            diem2d = new TinhTien(diem3, Integer.parseInt(jTextField_Dx.getText()) * step, Integer.parseInt(jTextField_Dy.getText()) * step).tinhTienDiem();

            listNew_Oto.get(listNew_Oto.size()-1).setxKinh9(diem2d.getX());
            listNew_Oto.get(listNew_Oto.size()-1).setyKinh9(diem2d.getY());
            //
            diem1 = new Diem2D(listNew_Oto.get(listNew_Oto.size()-1).getxChiTiet1(), listNew_Oto.get(listNew_Oto.size()-1).getyChiTiet1());
            diem2 = new Diem2D(listNew_Oto.get(listNew_Oto.size()-1).getxChiTiet2(), listNew_Oto.get(listNew_Oto.size()-1).getyChiTiet2());

            diem2d = new TinhTien(diem1, Integer.parseInt(jTextField_Dx.getText()) * step, Integer.parseInt(jTextField_Dy.getText()) * step).tinhTienDiem();

            listNew_Oto.get(listNew_Oto.size()-1).setxChiTiet1(diem2d.getX());
            listNew_Oto.get(listNew_Oto.size()-1).setyChiTiet1(diem2d.getY());

            diem2d = new TinhTien(diem2, Integer.parseInt(jTextField_Dx.getText()) * step, Integer.parseInt(jTextField_Dy.getText()) * step).tinhTienDiem();

            listNew_Oto.get(listNew_Oto.size()-1).setxChiTiet2(diem2d.getX());
            listNew_Oto.get(listNew_Oto.size()-1).setyChiTiet2(diem2d.getY());
            }
            repaint();
        }
    }//GEN-LAST:event_jButton_TinhTienActionPerformed

    private void jButton_QuayActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton_QuayActionPerformed
        // TODO add your handling code here:
        String dx = "Quay góc:";
//        JComboBox jComboBox_CheDo= new JComboBox(new Object[]{"Ox","Oy"});
        JTextField jTextField_GocQuay = new JTextField("0");
        Object[] message = new Object[]{dx, jTextField_GocQuay
        };
        int choice = JOptionPane.showConfirmDialog(rootPane, message, "Quay hình vẽ gần đây nhất", JOptionPane.OK_CANCEL_OPTION);
        if (choice == JOptionPane.OK_OPTION) {
            int gocQuay = Integer.parseInt(jTextField_GocQuay.getText());
//            String mode = jComboBox_CheDo.getSelectedItem().toString();
            if (drawMode.equals("Diem")) {

                Diem2D diem2d = new Quay(listDiem2D.get(listDiem2D.size() - 1), gocQuay).quayTheoTamO();
                listDiem2D.get(listDiem2D.size() - 1).setX(diem2d.getX());
                listDiem2D.get(listDiem2D.size() - 1).setY(diem2d.getY());

            }
            if (drawMode.equals("DoanThangNetLien")) {
                Diem2D diem1 = new Diem2D(listDoanThang.get(listDoanThang.size() - 1).getX1(), listDoanThang.get(listDoanThang.size() - 1).getY1());
                Diem2D diem2 = new Diem2D(listDoanThang.get(listDoanThang.size() - 1).getX2(), listDoanThang.get(listDoanThang.size() - 1).getY2());

                Diem2D diem2d = new Quay(diem1, gocQuay).quayTheoTamO();

                listDoanThang.get(listDoanThang.size() - 1).setX1(diem2d.getX());
                listDoanThang.get(listDoanThang.size() - 1).setY1(diem2d.getY());

                diem2d = new Quay(diem2, gocQuay).quayTheoTamO();
                listDoanThang.get(listDoanThang.size() - 1).setX2(diem2d.getX());
                listDoanThang.get(listDoanThang.size() - 1).setY2(diem2d.getY());
            }
            if (drawMode.equals("DoanThangNetDut")) {
                Diem2D diem1 = new Diem2D(listDoanThang.get(listDoanThang.size() - 1).getX1(), listDoanThang.get(listDoanThang.size() - 1).getY1());
                Diem2D diem2 = new Diem2D(listDoanThang.get(listDoanThang.size() - 1).getX2(), listDoanThang.get(listDoanThang.size() - 1).getY2());

                Diem2D diem2d = new Quay(diem1, gocQuay).quayTheoTamO();

                listDoanThang.get(listDoanThang.size() - 1).setX1(diem2d.getX());
                listDoanThang.get(listDoanThang.size() - 1).setY1(diem2d.getY());

                diem2d = new Quay(diem2, gocQuay).quayTheoTamO();
                listDoanThang.get(listDoanThang.size() - 1).setX2(diem2d.getX());
                listDoanThang.get(listDoanThang.size() - 1).setY2(diem2d.getY());
            }
            if (drawMode.equals("DoanThangChamGach")) {
                Diem2D diem1 = new Diem2D(listDoanThang.get(listDoanThang.size() - 1).getX1(), listDoanThang.get(listDoanThang.size() - 1).getY1());
                Diem2D diem2 = new Diem2D(listDoanThang.get(listDoanThang.size() - 1).getX2(), listDoanThang.get(listDoanThang.size() - 1).getY2());

                Diem2D diem2d = new Quay(diem1, gocQuay).quayTheoTamO();

                listDoanThang.get(listDoanThang.size() - 1).setX1(diem2d.getX());
                listDoanThang.get(listDoanThang.size() - 1).setY1(diem2d.getY());

                diem2d = new Quay(diem2, gocQuay).quayTheoTamO();
                listDoanThang.get(listDoanThang.size() - 1).setX2(diem2d.getX());
                listDoanThang.get(listDoanThang.size() - 1).setY2(diem2d.getY());
            }
            if (drawMode.equals("DoanThang2ChamGach")) {
                Diem2D diem1 = new Diem2D(listDoanThang.get(listDoanThang.size() - 1).getX1(), listDoanThang.get(listDoanThang.size() - 1).getY1());
                Diem2D diem2 = new Diem2D(listDoanThang.get(listDoanThang.size() - 1).getX2(), listDoanThang.get(listDoanThang.size() - 1).getY2());

                Diem2D diem2d = new Quay(diem1, gocQuay).quayTheoTamO();

                listDoanThang.get(listDoanThang.size() - 1).setX1(diem2d.getX());
                listDoanThang.get(listDoanThang.size() - 1).setY1(diem2d.getY());

                diem2d = new Quay(diem2, gocQuay).quayTheoTamO();
                listDoanThang.get(listDoanThang.size() - 1).setX2(diem2d.getX());
                listDoanThang.get(listDoanThang.size() - 1).setY2(diem2d.getY());
            }
            if (drawMode.equals("HinhChuNhat")) {
                Diem2D diem1 = new Diem2D(listHinhChuNhat.get(listHinhChuNhat.size() - 1).getX1(), listHinhChuNhat.get(listHinhChuNhat.size() - 1).getY1());
                Diem2D diem2 = new Diem2D(listHinhChuNhat.get(listHinhChuNhat.size() - 1).getX2(), listHinhChuNhat.get(listHinhChuNhat.size() - 1).getY2());
                Diem2D diem3 = new Diem2D(listHinhChuNhat.get(listHinhChuNhat.size() - 1).getX3(), listHinhChuNhat.get(listHinhChuNhat.size() - 1).getY3());
                Diem2D diem4 = new Diem2D(listHinhChuNhat.get(listHinhChuNhat.size() - 1).getX4(), listHinhChuNhat.get(listHinhChuNhat.size() - 1).getY4());

                Diem2D diem2d = new Quay(diem1, gocQuay).quayTheoTamO();

                listHinhChuNhat.get(listHinhChuNhat.size() - 1).setX1(diem2d.getX());
                listHinhChuNhat.get(listHinhChuNhat.size() - 1).setY1(diem2d.getY());

                diem2d = new Quay(diem2, gocQuay).quayTheoTamO();
                listHinhChuNhat.get(listHinhChuNhat.size() - 1).setX2(diem2d.getX());
                listHinhChuNhat.get(listHinhChuNhat.size() - 1).setY2(diem2d.getY());

                diem2d = new Quay(diem3, gocQuay).quayTheoTamO();
                listHinhChuNhat.get(listHinhChuNhat.size() - 1).setX3(diem2d.getX());
                listHinhChuNhat.get(listHinhChuNhat.size() - 1).setY3(diem2d.getY());

                diem2d = new Quay(diem4, gocQuay).quayTheoTamO();
                listHinhChuNhat.get(listHinhChuNhat.size() - 1).setX4(diem2d.getX());
                listHinhChuNhat.get(listHinhChuNhat.size() - 1).setY4(diem2d.getY());
            }
            if (drawMode.equals("DuongTronNetLien")) {
                Diem2D diem1 = new Diem2D(listDuongTron.get(listDuongTron.size() - 1).getxO(), listDuongTron.get(listDuongTron.size() - 1).getyO());
                Diem2D diem2d = new Quay(diem1, gocQuay).quayTheoTamO();
                listDuongTron.get(listDuongTron.size() - 1).setxO(diem2d.getX());
                listDuongTron.get(listDuongTron.size() - 1).setyO(diem2d.getY());
            }
            if (drawMode.equals("DuongTronNetDut")) {
                Diem2D diem1 = new Diem2D(listDuongTron.get(listDuongTron.size() - 1).getxO(), listDuongTron.get(listDuongTron.size() - 1).getyO());
                Diem2D diem2d = new Quay(diem1, gocQuay).quayTheoTamO();
                listDuongTron.get(listDuongTron.size() - 1).setxO(diem2d.getX());
                listDuongTron.get(listDuongTron.size() - 1).setyO(diem2d.getY());
            }
            if (drawMode.equals("HinhTamGiacCan")) {
                Diem2D diem1 = new Diem2D(listHinhTamGiacCan.get(listHinhTamGiacCan.size() - 1).getxDinh(), listHinhTamGiacCan.get(listHinhTamGiacCan.size() - 1).getyDinh());
                Diem2D diem2 = new Diem2D(listHinhTamGiacCan.get(listHinhTamGiacCan.size() - 1).getX2(), listHinhTamGiacCan.get(listHinhTamGiacCan.size() - 1).getY2());
                Diem2D diem3 = new Diem2D(listHinhTamGiacCan.get(listHinhTamGiacCan.size() - 1).getX3(), listHinhTamGiacCan.get(listHinhTamGiacCan.size() - 1).getY3());

                Diem2D diem2d = new Quay(diem1, gocQuay).quayTheoTamO();
                listHinhTamGiacCan.get(listHinhTamGiacCan.size() - 1).setxDinh(diem2d.getX());
                listHinhTamGiacCan.get(listHinhTamGiacCan.size() - 1).setyDinh(diem2d.getY());

                diem2d = new Quay(diem2, gocQuay).quayTheoTamO();
                listHinhTamGiacCan.get(listHinhTamGiacCan.size() - 1).setX2(diem2d.getX());
                listHinhTamGiacCan.get(listHinhTamGiacCan.size() - 1).setY2(diem2d.getY());

                diem2d = new Quay(diem3, gocQuay).quayTheoTamO();
                listHinhTamGiacCan.get(listHinhTamGiacCan.size() - 1).setX3(diem2d.getX());
                listHinhTamGiacCan.get(listHinhTamGiacCan.size() - 1).setY3(diem2d.getY());
            }
            if (drawMode.equals("CayThong")) {
                Diem2D diemO = new Diem2D(listCayThong.get(listCayThong.size() - 1).getxDinh(), listCayThong.get(listCayThong.size() - 1).getyDinh());
                Diem2D diem2d = new Quay(diemO, gocQuay).quayTheoTamO();
                listCayThong.get(listCayThong.size() - 1).setxDinh(diem2d.getX());
                listCayThong.get(listCayThong.size() - 1).setyDinh(diem2d.getY());

                Diem2D diem1 = new Diem2D(listCayThong.get(listCayThong.size() - 1).getHinhTamGiacCan1().getxDinh(), listCayThong.get(listCayThong.size() - 1).getHinhTamGiacCan1().getyDinh());
                Diem2D diem2 = new Diem2D(listCayThong.get(listCayThong.size() - 1).getHinhTamGiacCan1().getX2(), listCayThong.get(listCayThong.size() - 1).getHinhTamGiacCan1().getY2());
                Diem2D diem3 = new Diem2D(listCayThong.get(listCayThong.size() - 1).getHinhTamGiacCan1().getX3(), listCayThong.get(listCayThong.size() - 1).getHinhTamGiacCan1().getY3());

                diem2d = new Quay(diem1, gocQuay).quayTheoTamO();
                listCayThong.get(listCayThong.size() - 1).getHinhTamGiacCan1().setxDinh(diem2d.getX());
                listCayThong.get(listCayThong.size() - 1).getHinhTamGiacCan1().setyDinh(diem2d.getY());

                diem2d = new Quay(diem2, gocQuay).quayTheoTamO();
                listCayThong.get(listCayThong.size() - 1).getHinhTamGiacCan1().setX2(diem2d.getX());
                listCayThong.get(listCayThong.size() - 1).getHinhTamGiacCan1().setY2(diem2d.getY());

                diem2d = new Quay(diem3, gocQuay).quayTheoTamO();
                listCayThong.get(listCayThong.size() - 1).getHinhTamGiacCan1().setX3(diem2d.getX());
                listCayThong.get(listCayThong.size() - 1).getHinhTamGiacCan1().setY3(diem2d.getY());

                //quay hinh tam Giac thu 2
                diem1 = new Diem2D(listCayThong.get(listCayThong.size() - 1).getHinhTamGiacCan2().getxDinh(), listCayThong.get(listCayThong.size() - 1).getHinhTamGiacCan2().getyDinh());
                diem2 = new Diem2D(listCayThong.get(listCayThong.size() - 1).getHinhTamGiacCan2().getX2(), listCayThong.get(listCayThong.size() - 1).getHinhTamGiacCan2().getY2());
                diem3 = new Diem2D(listCayThong.get(listCayThong.size() - 1).getHinhTamGiacCan2().getX3(), listCayThong.get(listCayThong.size() - 1).getHinhTamGiacCan2().getY3());

                diem2d = new Quay(diem1, gocQuay).quayTheoTamO();
                listCayThong.get(listCayThong.size() - 1).getHinhTamGiacCan2().setxDinh(diem2d.getX());
                listCayThong.get(listCayThong.size() - 1).getHinhTamGiacCan2().setyDinh(diem2d.getY());

                diem2d = new Quay(diem2, gocQuay).quayTheoTamO();
                listCayThong.get(listCayThong.size() - 1).getHinhTamGiacCan2().setX2(diem2d.getX());
                listCayThong.get(listCayThong.size() - 1).getHinhTamGiacCan2().setY2(diem2d.getY());

                diem2d = new Quay(diem3, gocQuay).quayTheoTamO();
                listCayThong.get(listCayThong.size() - 1).getHinhTamGiacCan2().setX3(diem2d.getX());
                listCayThong.get(listCayThong.size() - 1).getHinhTamGiacCan2().setY3(diem2d.getY());

                //quay hinh tam Giac thu 3
                diem1 = new Diem2D(listCayThong.get(listCayThong.size() - 1).getHinhTamGiacCan3().getxDinh(), listCayThong.get(listCayThong.size() - 1).getHinhTamGiacCan3().getyDinh());
                diem2 = new Diem2D(listCayThong.get(listCayThong.size() - 1).getHinhTamGiacCan3().getX2(), listCayThong.get(listCayThong.size() - 1).getHinhTamGiacCan3().getY2());
                diem3 = new Diem2D(listCayThong.get(listCayThong.size() - 1).getHinhTamGiacCan3().getX3(), listCayThong.get(listCayThong.size() - 1).getHinhTamGiacCan3().getY3());

                diem2d = new Quay(diem1, gocQuay).quayTheoTamO();
                listCayThong.get(listCayThong.size() - 1).getHinhTamGiacCan3().setxDinh(diem2d.getX());
                listCayThong.get(listCayThong.size() - 1).getHinhTamGiacCan3().setyDinh(diem2d.getY());

                diem2d = new Quay(diem2, gocQuay).quayTheoTamO();
                listCayThong.get(listCayThong.size() - 1).getHinhTamGiacCan3().setX2(diem2d.getX());
                listCayThong.get(listCayThong.size() - 1).getHinhTamGiacCan3().setY2(diem2d.getY());

                diem2d = new Quay(diem3, gocQuay).quayTheoTamO();
                listCayThong.get(listCayThong.size() - 1).getHinhTamGiacCan3().setX3(diem2d.getX());
                listCayThong.get(listCayThong.size() - 1).getHinhTamGiacCan3().setY3(diem2d.getY());

                //quay hcn
                diem1 = new Diem2D(listCayThong.get(listCayThong.size() - 1).getHinhChuNhat().getX1(), listCayThong.get(listCayThong.size() - 1).getHinhChuNhat().getY1());
                diem2 = new Diem2D(listCayThong.get(listCayThong.size() - 1).getHinhChuNhat().getX2(), listCayThong.get(listCayThong.size() - 1).getHinhChuNhat().getY2());
                diem3 = new Diem2D(listCayThong.get(listCayThong.size() - 1).getHinhChuNhat().getX3(), listCayThong.get(listCayThong.size() - 1).getHinhChuNhat().getY3());
                Diem2D diem4 = new Diem2D(listCayThong.get(listCayThong.size() - 1).getHinhChuNhat().getX4(), listCayThong.get(listCayThong.size() - 1).getHinhChuNhat().getY4());

                diem2d = new Quay(diem1, gocQuay).quayTheoTamO();

                listCayThong.get(listCayThong.size() - 1).getHinhChuNhat().setX1(diem2d.getX());
                listCayThong.get(listCayThong.size() - 1).getHinhChuNhat().setY1(diem2d.getY());

                diem2d = new Quay(diem2, gocQuay).quayTheoTamO();
                listCayThong.get(listCayThong.size() - 1).getHinhChuNhat().setX2(diem2d.getX());
                listCayThong.get(listCayThong.size() - 1).getHinhChuNhat().setY2(diem2d.getY());

                diem2d = new Quay(diem3, gocQuay).quayTheoTamO();
                listCayThong.get(listCayThong.size() - 1).getHinhChuNhat().setX3(diem2d.getX());
                listCayThong.get(listCayThong.size() - 1).getHinhChuNhat().setY3(diem2d.getY());

                diem2d = new Quay(diem4, gocQuay).quayTheoTamO();
                listCayThong.get(listCayThong.size() - 1).getHinhChuNhat().setX4(diem2d.getX());
                listCayThong.get(listCayThong.size() - 1).getHinhChuNhat().setY4(diem2d.getY());

            }
            if (drawMode.equals("BienBao")) {
                Diem2D diemO = new Diem2D(listBienBao.get(listBienBao.size() - 1).getxTamBienBao(), listBienBao.get(listBienBao.size() - 1).getyTamBienBao());
                Diem2D diem2d = new Quay(diemO, gocQuay).quayTheoTamO();
                listBienBao.get(listBienBao.size() - 1).setxTamBienBao(diem2d.getX());
                listBienBao.get(listBienBao.size() - 1).setyTamBienBao(diem2d.getY());

                // quay hình chữ nhật
                Diem2D diem1 = new Diem2D(listBienBao.get(listBienBao.size() - 1).getHinhChuNhat().getX1(), listBienBao.get(listBienBao.size() - 1).getHinhChuNhat().getY1());
                Diem2D diem2 = new Diem2D(listBienBao.get(listBienBao.size() - 1).getHinhChuNhat().getX2(), listBienBao.get(listBienBao.size() - 1).getHinhChuNhat().getY2());
                Diem2D diem3 = new Diem2D(listBienBao.get(listBienBao.size() - 1).getHinhChuNhat().getX3(), listBienBao.get(listBienBao.size() - 1).getHinhChuNhat().getY3());
                Diem2D diem4 = new Diem2D(listBienBao.get(listBienBao.size() - 1).getHinhChuNhat().getX4(), listBienBao.get(listBienBao.size() - 1).getHinhChuNhat().getY4());

                diem2d = new Quay(diem1, gocQuay).quayTheoTamO();

                listBienBao.get(listBienBao.size() - 1).getHinhChuNhat().setX1(diem2d.getX());
                listBienBao.get(listBienBao.size() - 1).getHinhChuNhat().setY1(diem2d.getY());

                diem2d = new Quay(diem2, gocQuay).quayTheoTamO();
                listBienBao.get(listBienBao.size() - 1).getHinhChuNhat().setX2(diem2d.getX());
                listBienBao.get(listBienBao.size() - 1).getHinhChuNhat().setY2(diem2d.getY());

                diem2d = new Quay(diem3, gocQuay).quayTheoTamO();
                listBienBao.get(listBienBao.size() - 1).getHinhChuNhat().setX3(diem2d.getX());
                listBienBao.get(listBienBao.size() - 1).getHinhChuNhat().setY3(diem2d.getY());

                diem2d = new Quay(diem4, gocQuay).quayTheoTamO();
                listBienBao.get(listBienBao.size() - 1).getHinhChuNhat().setX4(diem2d.getX());
                listBienBao.get(listBienBao.size() - 1).getHinhChuNhat().setY4(diem2d.getY());

//            listHinhTamGiacDeu.add(hinhTamGiacDeu);       
            }
            if(drawMode.equals("Sao")){
                Diem2D diemO = new Diem2D(listSao.get(listSao.size() - 1).getxO(), listSao.get(listSao.size() - 1).getyO());
                Diem2D diem2d = new Quay(diemO, gocQuay).quayTheoTamO();

                listSao.get(listSao.size() - 1).setxO(diem2d.getX());
                listSao.get(listSao.size() - 1).setyO(diem2d.getY());
              
                Diem2D diemTren = new Diem2D(listSao.get(listSao.size() - 1).getxTren(), listSao.get(listSao.size() - 1).getyTren());
                Diem2D diemDuoi = new Diem2D(listSao.get(listSao.size() - 1).getxDuoi(), listSao.get(listSao.size() - 1).getyDuoi());
                Diem2D diemTrai = new Diem2D(listSao.get(listSao.size() - 1).getxTrai(), listSao.get(listSao.size() - 1).getyTrai());
                Diem2D diemPhai = new Diem2D(listSao.get(listSao.size() - 1).getxPhai(), listSao.get(listSao.size() - 1).getyPhai());
                
                Diem2D diemTrenDuongTron = new Diem2D(listSao.get(listSao.size() - 1).getxTrenDuongTron(), listSao.get(listSao.size() - 1).getyTrenDuongTron());
                Diem2D diemDuoiDuongTron = new Diem2D(listSao.get(listSao.size() - 1).getxDuoiDuongTron(), listSao.get(listSao.size() - 1).getyDuoiDuongTron());
                Diem2D diemTraiDuongTron = new Diem2D(listSao.get(listSao.size() - 1).getxTraiDuongTron(), listSao.get(listSao.size() - 1).getyTraiDuongTron());
                Diem2D diemPhaiDuongTron = new Diem2D(listSao.get(listSao.size() - 1).getxPhaiDuongTron(), listSao.get(listSao.size() - 1).getyPhaiDuongTron());
                
                diem2d = new Quay(diemTren, gocQuay).quayTheoTamO();
                listSao.get(listSao.size()-1).setxTren(diem2d.getX());
                listSao.get(listSao.size()-1).setyTren(diem2d.getY());
                
                diem2d = new Quay(diemDuoi, gocQuay).quayTheoTamO();
                listSao.get(listSao.size()-1).setxDuoi(diem2d.getX());
                listSao.get(listSao.size()-1).setyDuoi(diem2d.getY());
                
                diem2d = new Quay(diemTrai, gocQuay).quayTheoTamO();
                listSao.get(listSao.size()-1).setxTrai(diem2d.getX());
                listSao.get(listSao.size()-1).setyTrai(diem2d.getY());
                
                diem2d = new Quay(diemPhai, gocQuay).quayTheoTamO();
                listSao.get(listSao.size()-1).setxPhai(diem2d.getX());
                listSao.get(listSao.size()-1).setyPhai(diem2d.getY());
                
                //
                diem2d = new Quay(diemTrenDuongTron, gocQuay).quayTheoTamO();
                listSao.get(listSao.size()-1).setxTrenDuongTron(diem2d.getX());
                listSao.get(listSao.size()-1).setyTrenDuongTron(diem2d.getY());
                
                diem2d = new Quay(diemDuoiDuongTron, gocQuay).quayTheoTamO();
                listSao.get(listSao.size()-1).setxDuoiDuongTron(diem2d.getX());
                listSao.get(listSao.size()-1).setyDuoiDuongTron(diem2d.getY());
                
                diem2d = new Quay(diemTraiDuongTron, gocQuay).quayTheoTamO();
                listSao.get(listSao.size()-1).setxTraiDuongTron(diem2d.getX());
                listSao.get(listSao.size()-1).setyTraiDuongTron(diem2d.getY());
                
                diem2d = new Quay(diemPhaiDuongTron, gocQuay).quayTheoTamO();
                listSao.get(listSao.size()-1).setxPhaiDuongTron(diem2d.getX());
                listSao.get(listSao.size()-1).setyPhaiDuongTron(diem2d.getY());
            }
            if(drawMode.equals("New_Oto")){
                
            Diem2D diem1 = new Diem2D(listNew_Oto.get(listNew_Oto.size()-1).getxMuiXeDuoi(), listNew_Oto.get(listNew_Oto.size()-1).getyMuiXeDuoi());
            Diem2D diem2 = new Diem2D(listNew_Oto.get(listNew_Oto.size()-1).getxMuiXeGiua(), listNew_Oto.get(listNew_Oto.size()-1).getyMuiXeGiua());
            Diem2D diem3 = new Diem2D(listNew_Oto.get(listNew_Oto.size()-1).getxMuiXeTren(), listNew_Oto.get(listNew_Oto.size()-1).getyMuiXeTren());

            Diem2D diem2d;

            diem2d = new Quay(diem1, gocQuay).quayTheoTamO();

            listNew_Oto.get(listNew_Oto.size()-1).setxMuiXeDuoi(diem2d.getX());
            listNew_Oto.get(listNew_Oto.size()-1).setyMuiXeDuoi(diem2d.getY());

            diem2d = new Quay(diem2, gocQuay).quayTheoTamO();

            listNew_Oto.get(listNew_Oto.size()-1).setxMuiXeGiua(diem2d.getX());
            listNew_Oto.get(listNew_Oto.size()-1).setyMuiXeGiua(diem2d.getY());

            diem2d = new Quay(diem3, gocQuay).quayTheoTamO();

            listNew_Oto.get(listNew_Oto.size()-1).setxMuiXeTren(diem2d.getX());
            listNew_Oto.get(listNew_Oto.size()-1).setyMuiXeTren(diem2d.getY());

            diem1 = new Diem2D(listNew_Oto.get(listNew_Oto.size()-1).getxNocXe1(), listNew_Oto.get(listNew_Oto.size()-1).getyNocXe1());
            diem2 = new Diem2D(listNew_Oto.get(listNew_Oto.size()-1).getxNocXe2(), listNew_Oto.get(listNew_Oto.size()-1).getyNocXe2());
            diem3 = new Diem2D(listNew_Oto.get(listNew_Oto.size()-1).getxNocXe3(), listNew_Oto.get(listNew_Oto.size()-1).getyNocXe3());

            diem2d = new Quay(diem1, gocQuay).quayTheoTamO();

            listNew_Oto.get(listNew_Oto.size()-1).setxNocXe1(diem2d.getX());
            listNew_Oto.get(listNew_Oto.size()-1).setyNocXe1(diem2d.getY());

            diem2d = new Quay(diem2, gocQuay).quayTheoTamO();

            listNew_Oto.get(listNew_Oto.size()-1).setxNocXe2(diem2d.getX());
            listNew_Oto.get(listNew_Oto.size()-1).setyNocXe2(diem2d.getY());

            diem2d = new Quay(diem3, gocQuay).quayTheoTamO();

            listNew_Oto.get(listNew_Oto.size()-1).setxNocXe3(diem2d.getX());
            listNew_Oto.get(listNew_Oto.size()-1).setyNocXe3(diem2d.getY());
            //
            diem1 = new Diem2D(listNew_Oto.get(listNew_Oto.size()-1).getxDuoiXe1(), listNew_Oto.get(listNew_Oto.size()-1).getyDuoiXe1());
            diem2 = new Diem2D(listNew_Oto.get(listNew_Oto.size()-1).getxDuoiXe2(), listNew_Oto.get(listNew_Oto.size()-1).getyDuoiXe2());
            diem3 = new Diem2D(listNew_Oto.get(listNew_Oto.size()-1).getxDuoiXe3(), listNew_Oto.get(listNew_Oto.size()-1).getyDuoiXe3());

            diem2d = new Quay(diem1, gocQuay).quayTheoTamO();

            listNew_Oto.get(listNew_Oto.size()-1).setxDuoiXe1(diem2d.getX());
            listNew_Oto.get(listNew_Oto.size()-1).setyDuoiXe1(diem2d.getY());

            diem2d = new Quay(diem2, gocQuay).quayTheoTamO();

            listNew_Oto.get(listNew_Oto.size()-1).setxDuoiXe2(diem2d.getX());
            listNew_Oto.get(listNew_Oto.size()-1).setyDuoiXe2(diem2d.getY());

            diem2d = new Quay(diem3, gocQuay).quayTheoTamO();

            listNew_Oto.get(listNew_Oto.size()-1).setxDuoiXe3(diem2d.getX());
            listNew_Oto.get(listNew_Oto.size()-1).setyDuoiXe3(diem2d.getY());
            //
            diem1 = new Diem2D(listNew_Oto.get(listNew_Oto.size()-1).getxDuoiXe4(), listNew_Oto.get(listNew_Oto.size()-1).getyDuoiXe4());
            diem2 = new Diem2D(listNew_Oto.get(listNew_Oto.size()-1).getxDuoiXe5(), listNew_Oto.get(listNew_Oto.size()-1).getyDuoiXe5());
            diem3 = new Diem2D(listNew_Oto.get(listNew_Oto.size()-1).getxDuoiXeDuoi(), listNew_Oto.get(listNew_Oto.size()-1).getyDuoiXeDuoi());

            diem2d = new Quay(diem1, gocQuay).quayTheoTamO();

            listNew_Oto.get(listNew_Oto.size()-1).setxDuoiXe4(diem2d.getX());
            listNew_Oto.get(listNew_Oto.size()-1).setyDuoiXe4(diem2d.getY());

            diem2d = new Quay(diem2, gocQuay).quayTheoTamO();

            listNew_Oto.get(listNew_Oto.size()-1).setxDuoiXe5(diem2d.getX());
            listNew_Oto.get(listNew_Oto.size()-1).setyDuoiXe5(diem2d.getY());

            diem2d = new Quay(diem3, gocQuay).quayTheoTamO();

            listNew_Oto.get(listNew_Oto.size()-1).setxDuoiXeDuoi(diem2d.getX());
            listNew_Oto.get(listNew_Oto.size()-1).setyDuoiXeDuoi(diem2d.getY());
            //
            diem1 = new Diem2D(listNew_Oto.get(listNew_Oto.size()-1).getxBanhXeTruoc(), listNew_Oto.get(listNew_Oto.size()-1).getyBanhXeTruoc());
            diem2 = new Diem2D(listNew_Oto.get(listNew_Oto.size()-1).getxBanhXeSau(), listNew_Oto.get(listNew_Oto.size()-1).getyBanhXeSau());

            diem2d = new Quay(diem1, gocQuay).quayTheoTamO();

            listNew_Oto.get(listNew_Oto.size()-1).setxBanhXeTruoc(diem2d.getX());
            listNew_Oto.get(listNew_Oto.size()-1).setyBanhXeTruoc(diem2d.getY());

            diem2d = new Quay(diem2, gocQuay).quayTheoTamO();

            listNew_Oto.get(listNew_Oto.size()-1).setxBanhXeSau(diem2d.getX());
            listNew_Oto.get(listNew_Oto.size()-1).setyBanhXeSau(diem2d.getY());
            //
            diem1 = new Diem2D(listNew_Oto.get(listNew_Oto.size()-1).getxKinh1(), listNew_Oto.get(listNew_Oto.size()-1).getyKinh1());
            diem2 = new Diem2D(listNew_Oto.get(listNew_Oto.size()-1).getxKinh2(), listNew_Oto.get(listNew_Oto.size()-1).getyKinh2());
            diem3 = new Diem2D(listNew_Oto.get(listNew_Oto.size()-1).getxKinh3(), listNew_Oto.get(listNew_Oto.size()-1).getyKinh3());

            diem2d = new Quay(diem1, gocQuay).quayTheoTamO();

            listNew_Oto.get(listNew_Oto.size()-1).setxKinh1(diem2d.getX());
            listNew_Oto.get(listNew_Oto.size()-1).setyKinh1(diem2d.getY());

            diem2d = new Quay(diem2, gocQuay).quayTheoTamO();

            listNew_Oto.get(listNew_Oto.size()-1).setxKinh2(diem2d.getX());
            listNew_Oto.get(listNew_Oto.size()-1).setyKinh2(diem2d.getY());

            diem2d = new Quay(diem3, gocQuay).quayTheoTamO();

            listNew_Oto.get(listNew_Oto.size()-1).setxKinh3(diem2d.getX());
            listNew_Oto.get(listNew_Oto.size()-1).setyKinh3(diem2d.getY());
            //
            diem1 = new Diem2D(listNew_Oto.get(listNew_Oto.size()-1).getxKinh4(), listNew_Oto.get(listNew_Oto.size()-1).getyKinh4());
            diem2 = new Diem2D(listNew_Oto.get(listNew_Oto.size()-1).getxKinh5(), listNew_Oto.get(listNew_Oto.size()-1).getyKinh5());
            diem3 = new Diem2D(listNew_Oto.get(listNew_Oto.size()-1).getxKinh6(), listNew_Oto.get(listNew_Oto.size()-1).getyKinh6());

            diem2d = new Quay(diem1, gocQuay).quayTheoTamO();

            listNew_Oto.get(listNew_Oto.size()-1).setxKinh4(diem2d.getX());
            listNew_Oto.get(listNew_Oto.size()-1).setyKinh4(diem2d.getY());

            diem2d = new Quay(diem2, gocQuay).quayTheoTamO();

            listNew_Oto.get(listNew_Oto.size()-1).setxKinh5(diem2d.getX());
            listNew_Oto.get(listNew_Oto.size()-1).setyKinh5(diem2d.getY());

            diem2d = new Quay(diem3, gocQuay).quayTheoTamO();

            listNew_Oto.get(listNew_Oto.size()-1).setxKinh6(diem2d.getX());
            listNew_Oto.get(listNew_Oto.size()-1).setyKinh6(diem2d.getY());
            //
            diem1 = new Diem2D(listNew_Oto.get(listNew_Oto.size()-1).getxKinh7(), listNew_Oto.get(listNew_Oto.size()-1).getyKinh7());
            diem2 = new Diem2D(listNew_Oto.get(listNew_Oto.size()-1).getxKinh8(), listNew_Oto.get(listNew_Oto.size()-1).getyKinh8());
            diem3 = new Diem2D(listNew_Oto.get(listNew_Oto.size()-1).getxKinh9(), listNew_Oto.get(listNew_Oto.size()-1).getyKinh9());

            diem2d = new Quay(diem1, gocQuay).quayTheoTamO();

            listNew_Oto.get(listNew_Oto.size()-1).setxKinh7(diem2d.getX());
            listNew_Oto.get(listNew_Oto.size()-1).setyKinh7(diem2d.getY());

            diem2d = new Quay(diem2, gocQuay).quayTheoTamO();

            listNew_Oto.get(listNew_Oto.size()-1).setxKinh8(diem2d.getX());
            listNew_Oto.get(listNew_Oto.size()-1).setyKinh8(diem2d.getY());

            diem2d = new Quay(diem3, gocQuay).quayTheoTamO();

            listNew_Oto.get(listNew_Oto.size()-1).setxKinh9(diem2d.getX());
            listNew_Oto.get(listNew_Oto.size()-1).setyKinh9(diem2d.getY());
            //
            diem1 = new Diem2D(listNew_Oto.get(listNew_Oto.size()-1).getxChiTiet1(), listNew_Oto.get(listNew_Oto.size()-1).getyChiTiet1());
            diem2 = new Diem2D(listNew_Oto.get(listNew_Oto.size()-1).getxChiTiet2(), listNew_Oto.get(listNew_Oto.size()-1).getyChiTiet2());

            diem2d = new Quay(diem1, gocQuay).quayTheoTamO();

            listNew_Oto.get(listNew_Oto.size()-1).setxChiTiet1(diem2d.getX());
            listNew_Oto.get(listNew_Oto.size()-1).setyChiTiet1(diem2d.getY());

            diem2d = new Quay(diem2, gocQuay).quayTheoTamO();

            listNew_Oto.get(listNew_Oto.size()-1).setxChiTiet2(diem2d.getX());
            listNew_Oto.get(listNew_Oto.size()-1).setyChiTiet2(diem2d.getY());
            }
            repaint();
        }
    }//GEN-LAST:event_jButton_QuayActionPerformed

    private void jTabbedPane1MousePressed(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_jTabbedPane1MousePressed
        if (jTabbedPane1.getSelectedIndex() == 1) {
            jPanel_BienDoiVaThongSo.setVisible(false);
            drawMode="";
            repaint();
        }        // TODO add your handling code here:
        if (jTabbedPane1.getSelectedIndex() == 0) {
            jPanel_BienDoiVaThongSo.setVisible(true);
            repaint();
        }
    }//GEN-LAST:event_jTabbedPane1MousePressed

    private void openCuboidDialogActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_openCuboidDialogActionPerformed
        // TODO add your handling code here:
        cudboidDialog.pack();
        cudboidDialog.setLocationRelativeTo(null);
        cudboidDialog.setVisible(true);
    }//GEN-LAST:event_openCuboidDialogActionPerformed

    private void openSphereDialogActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_openSphereDialogActionPerformed
        // TODO add your handling code here:
        sphereDialog.setVisible(true);
        sphereDialog.pack();
        sphereDialog.setLocationRelativeTo(null);
    }//GEN-LAST:event_openSphereDialogActionPerformed

    private void openCylinderDialogActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_openCylinderDialogActionPerformed
        // TODO add your handling code here:
        CylinderDialog.pack();
        CylinderDialog.setLocationRelativeTo(null);
        CylinderDialog.setVisible(true);
    }//GEN-LAST:event_openCylinderDialogActionPerformed

    private void openConeDialogActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_openConeDialogActionPerformed
        // TODO add your handling code here:
        ConeDialog.pack();
        ConeDialog.setLocationRelativeTo(null);
        ConeDialog.setVisible(true);
    }//GEN-LAST:event_openConeDialogActionPerformed

    private void reset_cuboidActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_reset_cuboidActionPerformed
        // TODO add your handling code here:
        x_cuboid.setText(null);
        y_cuboid.setText(null);
        z_cuboid.setText(null);

        height_cuboid.setText(null);
        width_cuboid.setText(null);
        length_cuboid.setText(null);
    }//GEN-LAST:event_reset_cuboidActionPerformed

    private void drawCuboidActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_drawCuboidActionPerformed
        // TODO add your handling code here:
        int x = Integer.parseInt(x_cuboid.getText());
        int y = Integer.parseInt(y_cuboid.getText());
        int z = Integer.parseInt(z_cuboid.getText());

        int width = Integer.parseInt(width_cuboid.getText());
        int length = Integer.parseInt(length_cuboid.getText());
        int height = Integer.parseInt(height_cuboid.getText());
 resetField();
        g.setColor(shape3DColor);
        Shape3D cuboid = new Cuboid(x, y, z, length, width, height);
        cuboid.draw(g);

        list.add(cuboid);
        reset_cuboid.doClick();
        cudboidDialog.dispose();

    }//GEN-LAST:event_drawCuboidActionPerformed

    private void reset_sphereActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_reset_sphereActionPerformed
        // TODO add your handling code here:
        x_sphere.setText(null);
        y_sphere.setText(null);
        z_sphere.setText(null);

        r_sphere.setText(null);
    }//GEN-LAST:event_reset_sphereActionPerformed

    private void drawSphereActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_drawSphereActionPerformed
        // TODO add your handling code here:
        int x = Integer.parseInt(x_sphere.getText());
        int y = Integer.parseInt(y_sphere.getText());
        int z = Integer.parseInt(z_sphere.getText());

        int r = Integer.parseInt(r_sphere.getText());
 resetField();
        g.setColor(shape3DColor);
        Sphere sphere = new Sphere(x, y, z, r);
        sphere.draw(g);

        list.add(sphere);
        reset_sphere.doClick();
        sphereDialog.dispose();
    }//GEN-LAST:event_drawSphereActionPerformed

    private void reset_cylinderActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_reset_cylinderActionPerformed
        // TODO add your handling code here:
        x_cylinder.setText(null);
        y_cylinder.setText(null);
        z_cylinder.setText(null);

        r_cylinder.setText(null);
        h_cylinder.setText(null);
    }//GEN-LAST:event_reset_cylinderActionPerformed

    private void drawCylinderActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_drawCylinderActionPerformed
        // TODO add your handling code here:
        int x = Integer.parseInt(x_cylinder.getText());
        int y = Integer.parseInt(y_cylinder.getText());
        int z = Integer.parseInt(z_cylinder.getText());

        int r = Integer.parseInt(r_cylinder.getText());
        int h = Integer.parseInt(h_cylinder.getText());
 resetField();
        g.setColor(shape3DColor);
        Shape3D cylinder = new Cylinder(x, y, z, r, h);
        cylinder.draw(g);

        list.add(cylinder);
        reset_cylinder.doClick();
        CylinderDialog.dispose();
    }//GEN-LAST:event_drawCylinderActionPerformed

    private void reset_coneActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_reset_coneActionPerformed
        // TODO add your handling code here:
        x_cone.setText(null);
        y_cone.setText(null);
        z_cone.setText(null);

        r_cone.setText(null);
        h_cone.setText(null);
    }//GEN-LAST:event_reset_coneActionPerformed

    private void drawConeActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_drawConeActionPerformed
        // TODO add your handling code here:
        int x = Integer.parseInt(x_cone.getText());
        int y = Integer.parseInt(y_cone.getText());
        int z = Integer.parseInt(z_cone.getText());

        int r = Integer.parseInt(r_cone.getText());
        int h = Integer.parseInt(h_cone.getText());
        resetField();
        g.setColor(shape3DColor);
        Shape3D cone = new Cone(new Point3D(x, y, z), r, h);
        cone.draw(g);

        list.add(cone);
        reset_cone.doClick();
        ConeDialog.dispose();
    }//GEN-LAST:event_drawConeActionPerformed

    private void jButton_DoiXungActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton_DoiXungActionPerformed
        // TODO add your handling code here:
        String dx = "Đối xứng qua:";
        JComboBox jComboBox_CheDo = new JComboBox(new Object[]{"Ox", "Oy"});
        Object[] message = new Object[]{dx, jComboBox_CheDo
        };
        int choice = JOptionPane.showConfirmDialog(rootPane, message, "Đối xứng hình vẽ gần đây nhất", JOptionPane.OK_CANCEL_OPTION);
        if (choice == JOptionPane.OK_OPTION) {
            String mode = jComboBox_CheDo.getSelectedItem().toString();
            if (drawMode.equals("Diem")) {

                Diem2D diem2d = new DoiXung(listDiem2D.get(listDiem2D.size() - 1), mode).doiXungDiem();
                listDiem2D.get(listDiem2D.size() - 1).setX(diem2d.getX());
                listDiem2D.get(listDiem2D.size() - 1).setY(diem2d.getY());

            }
            if (drawMode.equals("DoanThangNetLien")) {
                Diem2D diem1 = new Diem2D(listDoanThang.get(listDoanThang.size() - 1).getX1(), listDoanThang.get(listDoanThang.size() - 1).getY1());
                Diem2D diem2 = new Diem2D(listDoanThang.get(listDoanThang.size() - 1).getX2(), listDoanThang.get(listDoanThang.size() - 1).getY2());

                Diem2D diem2d = new DoiXung(diem1, mode).doiXungDiem();

                listDoanThang.get(listDoanThang.size() - 1).setX1(diem2d.getX());
                listDoanThang.get(listDoanThang.size() - 1).setY1(diem2d.getY());

                diem2d = new DoiXung(diem2, mode).doiXungDiem();
                listDoanThang.get(listDoanThang.size() - 1).setX2(diem2d.getX());
                listDoanThang.get(listDoanThang.size() - 1).setY2(diem2d.getY());
            }
            if (drawMode.equals("DoanThangNetDut")) {
                Diem2D diem1 = new Diem2D(listDoanThang.get(listDoanThang.size() - 1).getX1(), listDoanThang.get(listDoanThang.size() - 1).getY1());
                Diem2D diem2 = new Diem2D(listDoanThang.get(listDoanThang.size() - 1).getX2(), listDoanThang.get(listDoanThang.size() - 1).getY2());

                Diem2D diem2d = new DoiXung(diem1, mode).doiXungDiem();

                listDoanThang.get(listDoanThang.size() - 1).setX1(diem2d.getX());
                listDoanThang.get(listDoanThang.size() - 1).setY1(diem2d.getY());

                diem2d = new DoiXung(diem2, mode).doiXungDiem();
                listDoanThang.get(listDoanThang.size() - 1).setX2(diem2d.getX());
                listDoanThang.get(listDoanThang.size() - 1).setY2(diem2d.getY());
            }
            if (drawMode.equals("DoanThangChamGach")) {
                Diem2D diem1 = new Diem2D(listDoanThang.get(listDoanThang.size() - 1).getX1(), listDoanThang.get(listDoanThang.size() - 1).getY1());
                Diem2D diem2 = new Diem2D(listDoanThang.get(listDoanThang.size() - 1).getX2(), listDoanThang.get(listDoanThang.size() - 1).getY2());

                Diem2D diem2d = new DoiXung(diem1, mode).doiXungDiem();

                listDoanThang.get(listDoanThang.size() - 1).setX1(diem2d.getX());
                listDoanThang.get(listDoanThang.size() - 1).setY1(diem2d.getY());

                diem2d = new DoiXung(diem2, mode).doiXungDiem();
                listDoanThang.get(listDoanThang.size() - 1).setX2(diem2d.getX());
                listDoanThang.get(listDoanThang.size() - 1).setY2(diem2d.getY());
            }
            if (drawMode.equals("DoanThang2ChamGach")) {
                Diem2D diem1 = new Diem2D(listDoanThang.get(listDoanThang.size() - 1).getX1(), listDoanThang.get(listDoanThang.size() - 1).getY1());
                Diem2D diem2 = new Diem2D(listDoanThang.get(listDoanThang.size() - 1).getX2(), listDoanThang.get(listDoanThang.size() - 1).getY2());

                Diem2D diem2d = new DoiXung(diem1, mode).doiXungDiem();

                listDoanThang.get(listDoanThang.size() - 1).setX1(diem2d.getX());
                listDoanThang.get(listDoanThang.size() - 1).setY1(diem2d.getY());

                diem2d = new DoiXung(diem2, mode).doiXungDiem();
                listDoanThang.get(listDoanThang.size() - 1).setX2(diem2d.getX());
                listDoanThang.get(listDoanThang.size() - 1).setY2(diem2d.getY());
            }
            if (drawMode.equals("HinhChuNhat")) {
                Diem2D diem1 = new Diem2D(listHinhChuNhat.get(listHinhChuNhat.size() - 1).getX1(), listHinhChuNhat.get(listHinhChuNhat.size() - 1).getY1());
                Diem2D diem2 = new Diem2D(listHinhChuNhat.get(listHinhChuNhat.size() - 1).getX2(), listHinhChuNhat.get(listHinhChuNhat.size() - 1).getY2());

                Diem2D diem3 = new Diem2D(listHinhChuNhat.get(listHinhChuNhat.size() - 1).getX3(), listHinhChuNhat.get(listHinhChuNhat.size() - 1).getY3());
                Diem2D diem4 = new Diem2D(listHinhChuNhat.get(listHinhChuNhat.size() - 1).getX4(), listHinhChuNhat.get(listHinhChuNhat.size() - 1).getY4());

                Diem2D diem2d = new DoiXung(diem1, mode).doiXungDiem();

                listHinhChuNhat.get(listHinhChuNhat.size() - 1).setX1(diem2d.getX());
                listHinhChuNhat.get(listHinhChuNhat.size() - 1).setY1(diem2d.getY());

                diem2d = new DoiXung(diem2, mode).doiXungDiem();
                listHinhChuNhat.get(listHinhChuNhat.size() - 1).setX2(diem2d.getX());
                listHinhChuNhat.get(listHinhChuNhat.size() - 1).setY2(diem2d.getY());

                diem2d = new DoiXung(diem3, mode).doiXungDiem();
                listHinhChuNhat.get(listHinhChuNhat.size() - 1).setX3(diem2d.getX());
                listHinhChuNhat.get(listHinhChuNhat.size() - 1).setY3(diem2d.getY());

                diem2d = new DoiXung(diem4, mode).doiXungDiem();
                listHinhChuNhat.get(listHinhChuNhat.size() - 1).setX4(diem2d.getX());
                listHinhChuNhat.get(listHinhChuNhat.size() - 1).setY4(diem2d.getY());
            }
            if (drawMode.equals("DuongTronNetLien")) {
                Diem2D diem1 = new Diem2D(listDuongTron.get(listDuongTron.size() - 1).getxO(), listDuongTron.get(listDuongTron.size() - 1).getyO());
                Diem2D diem2d = new DoiXung(diem1, mode).doiXungDiem();
                listDuongTron.get(listDuongTron.size() - 1).setxO(diem2d.getX());
                listDuongTron.get(listDuongTron.size() - 1).setyO(diem2d.getY());
            }
            if (drawMode.equals("DuongTronNetDut")) {
                Diem2D diem1 = new Diem2D(listDuongTron.get(listDuongTron.size() - 1).getxO(), listDuongTron.get(listDuongTron.size() - 1).getyO());
                Diem2D diem2d = new DoiXung(diem1, mode).doiXungDiem();
                listDuongTron.get(listDuongTron.size() - 1).setxO(diem2d.getX());
                listDuongTron.get(listDuongTron.size() - 1).setyO(diem2d.getY());
            }
            if (drawMode.equals("HinhTamGiacCan")) {
                Diem2D diem1 = new Diem2D(listHinhTamGiacCan.get(listHinhTamGiacCan.size() - 1).getxDinh(), listHinhTamGiacCan.get(listHinhTamGiacCan.size() - 1).getyDinh());
                Diem2D diem2 = new Diem2D(listHinhTamGiacCan.get(listHinhTamGiacCan.size() - 1).getX2(), listHinhTamGiacCan.get(listHinhTamGiacCan.size() - 1).getY2());
                Diem2D diem3 = new Diem2D(listHinhTamGiacCan.get(listHinhTamGiacCan.size() - 1).getX3(), listHinhTamGiacCan.get(listHinhTamGiacCan.size() - 1).getY3());

                Diem2D diem2d = new DoiXung(diem1, mode).doiXungDiem();
                listHinhTamGiacCan.get(listHinhTamGiacCan.size() - 1).setxDinh(diem2d.getX());
                listHinhTamGiacCan.get(listHinhTamGiacCan.size() - 1).setyDinh(diem2d.getY());

                diem2d = new DoiXung(diem2, mode).doiXungDiem();
                listHinhTamGiacCan.get(listHinhTamGiacCan.size() - 1).setX2(diem2d.getX());
                listHinhTamGiacCan.get(listHinhTamGiacCan.size() - 1).setY2(diem2d.getY());

                diem2d = new DoiXung(diem3, mode).doiXungDiem();
                listHinhTamGiacCan.get(listHinhTamGiacCan.size() - 1).setX3(diem2d.getX());
                listHinhTamGiacCan.get(listHinhTamGiacCan.size() - 1).setY3(diem2d.getY());
            }
            if (drawMode.equals("CayThong")) {
                Diem2D diemO = new Diem2D(listCayThong.get(listCayThong.size() - 1).getxDinh(), listCayThong.get(listCayThong.size() - 1).getyDinh());
                Diem2D diem2d = new DoiXung(diemO, mode).doiXungDiem();
                listCayThong.get(listCayThong.size() - 1).setxDinh(diem2d.getX());
                listCayThong.get(listCayThong.size() - 1).setyDinh(diem2d.getY());

                Diem2D diem1 = new Diem2D(listCayThong.get(listCayThong.size() - 1).getHinhTamGiacCan1().getxDinh(), listCayThong.get(listCayThong.size() - 1).getHinhTamGiacCan1().getyDinh());
                Diem2D diem2 = new Diem2D(listCayThong.get(listCayThong.size() - 1).getHinhTamGiacCan1().getX2(), listCayThong.get(listCayThong.size() - 1).getHinhTamGiacCan1().getY2());
                Diem2D diem3 = new Diem2D(listCayThong.get(listCayThong.size() - 1).getHinhTamGiacCan1().getX3(), listCayThong.get(listCayThong.size() - 1).getHinhTamGiacCan1().getY3());

                diem2d = new DoiXung(diem1, mode).doiXungDiem();
                listCayThong.get(listCayThong.size() - 1).getHinhTamGiacCan1().setxDinh(diem2d.getX());
                listCayThong.get(listCayThong.size() - 1).getHinhTamGiacCan1().setyDinh(diem2d.getY());

                diem2d = new DoiXung(diem2, mode).doiXungDiem();
                listCayThong.get(listCayThong.size() - 1).getHinhTamGiacCan1().setX2(diem2d.getX());
                listCayThong.get(listCayThong.size() - 1).getHinhTamGiacCan1().setY2(diem2d.getY());

                diem2d = new DoiXung(diem3, mode).doiXungDiem();
                listCayThong.get(listCayThong.size() - 1).getHinhTamGiacCan1().setX3(diem2d.getX());
                listCayThong.get(listCayThong.size() - 1).getHinhTamGiacCan1().setY3(diem2d.getY());

                //quay hinh tam Giac thu 2
                diem1 = new Diem2D(listCayThong.get(listCayThong.size() - 1).getHinhTamGiacCan2().getxDinh(), listCayThong.get(listCayThong.size() - 1).getHinhTamGiacCan2().getyDinh());
                diem2 = new Diem2D(listCayThong.get(listCayThong.size() - 1).getHinhTamGiacCan2().getX2(), listCayThong.get(listCayThong.size() - 1).getHinhTamGiacCan2().getY2());
                diem3 = new Diem2D(listCayThong.get(listCayThong.size() - 1).getHinhTamGiacCan2().getX3(), listCayThong.get(listCayThong.size() - 1).getHinhTamGiacCan2().getY3());

                diem2d = new DoiXung(diem1, mode).doiXungDiem();
                listCayThong.get(listCayThong.size() - 1).getHinhTamGiacCan2().setxDinh(diem2d.getX());
                listCayThong.get(listCayThong.size() - 1).getHinhTamGiacCan2().setyDinh(diem2d.getY());

                diem2d = new DoiXung(diem2, mode).doiXungDiem();
                listCayThong.get(listCayThong.size() - 1).getHinhTamGiacCan2().setX2(diem2d.getX());
                listCayThong.get(listCayThong.size() - 1).getHinhTamGiacCan2().setY2(diem2d.getY());

                diem2d = new DoiXung(diem3, mode).doiXungDiem();
                listCayThong.get(listCayThong.size() - 1).getHinhTamGiacCan2().setX3(diem2d.getX());
                listCayThong.get(listCayThong.size() - 1).getHinhTamGiacCan2().setY3(diem2d.getY());

                //quay hinh tam Giac thu 3
                diem1 = new Diem2D(listCayThong.get(listCayThong.size() - 1).getHinhTamGiacCan3().getxDinh(), listCayThong.get(listCayThong.size() - 1).getHinhTamGiacCan3().getyDinh());
                diem2 = new Diem2D(listCayThong.get(listCayThong.size() - 1).getHinhTamGiacCan3().getX2(), listCayThong.get(listCayThong.size() - 1).getHinhTamGiacCan3().getY2());
                diem3 = new Diem2D(listCayThong.get(listCayThong.size() - 1).getHinhTamGiacCan3().getX3(), listCayThong.get(listCayThong.size() - 1).getHinhTamGiacCan3().getY3());

                diem2d = new DoiXung(diem1, mode).doiXungDiem();
                listCayThong.get(listCayThong.size() - 1).getHinhTamGiacCan3().setxDinh(diem2d.getX());
                listCayThong.get(listCayThong.size() - 1).getHinhTamGiacCan3().setyDinh(diem2d.getY());

                diem2d = new DoiXung(diem2, mode).doiXungDiem();
                listCayThong.get(listCayThong.size() - 1).getHinhTamGiacCan3().setX2(diem2d.getX());
                listCayThong.get(listCayThong.size() - 1).getHinhTamGiacCan3().setY2(diem2d.getY());

                diem2d = new DoiXung(diem3, mode).doiXungDiem();
                listCayThong.get(listCayThong.size() - 1).getHinhTamGiacCan3().setX3(diem2d.getX());
                listCayThong.get(listCayThong.size() - 1).getHinhTamGiacCan3().setY3(diem2d.getY());

                diem1 = new Diem2D(listCayThong.get(listCayThong.size() - 1).getHinhChuNhat().getX1(), listCayThong.get(listCayThong.size() - 1).getHinhChuNhat().getY1());
                diem2 = new Diem2D(listCayThong.get(listCayThong.size() - 1).getHinhChuNhat().getX2(), listCayThong.get(listCayThong.size() - 1).getHinhChuNhat().getY2());
                diem3 = new Diem2D(listCayThong.get(listCayThong.size() - 1).getHinhChuNhat().getX3(), listCayThong.get(listCayThong.size() - 1).getHinhChuNhat().getY3());
                Diem2D diem4 = new Diem2D(listCayThong.get(listCayThong.size() - 1).getHinhChuNhat().getX4(), listCayThong.get(listCayThong.size() - 1).getHinhChuNhat().getY4());

                diem2d = new DoiXung(diem1, mode).doiXungDiem();

                listCayThong.get(listCayThong.size() - 1).getHinhChuNhat().setX1(diem2d.getX());
                listCayThong.get(listCayThong.size() - 1).getHinhChuNhat().setY1(diem2d.getY());

                diem2d = new DoiXung(diem2, mode).doiXungDiem();
                listCayThong.get(listCayThong.size() - 1).getHinhChuNhat().setX2(diem2d.getX());
                listCayThong.get(listCayThong.size() - 1).getHinhChuNhat().setY2(diem2d.getY());

                diem2d = new DoiXung(diem3, mode).doiXungDiem();
                listCayThong.get(listCayThong.size() - 1).getHinhChuNhat().setX3(diem2d.getX());
                listCayThong.get(listCayThong.size() - 1).getHinhChuNhat().setY3(diem2d.getY());

                diem2d = new DoiXung(diem4, mode).doiXungDiem();
                listCayThong.get(listCayThong.size() - 1).getHinhChuNhat().setX4(diem2d.getX());
                listCayThong.get(listCayThong.size() - 1).getHinhChuNhat().setY4(diem2d.getY());
            }
            if (drawMode.equals("BienBao")) {
                Diem2D diemO = new Diem2D(listBienBao.get(listBienBao.size() - 1).getxTamBienBao(), listBienBao.get(listBienBao.size() - 1).getyTamBienBao());
                Diem2D diem2d = new DoiXung(diemO, mode).doiXungDiem();
                listBienBao.get(listBienBao.size() - 1).setxTamBienBao(diem2d.getX());
                listBienBao.get(listBienBao.size() - 1).setyTamBienBao(diem2d.getY());

                Diem2D diem1 = new Diem2D(listBienBao.get(listBienBao.size() - 1).getHinhChuNhat().getX1(), listBienBao.get(listBienBao.size() - 1).getHinhChuNhat().getY1());
                Diem2D diem2 = new Diem2D(listBienBao.get(listBienBao.size() - 1).getHinhChuNhat().getX2(), listBienBao.get(listBienBao.size() - 1).getHinhChuNhat().getY2());
                Diem2D diem3 = new Diem2D(listBienBao.get(listBienBao.size() - 1).getHinhChuNhat().getX3(), listBienBao.get(listBienBao.size() - 1).getHinhChuNhat().getY3());
                Diem2D diem4 = new Diem2D(listBienBao.get(listBienBao.size() - 1).getHinhChuNhat().getX4(), listBienBao.get(listBienBao.size() - 1).getHinhChuNhat().getY4());

                diem2d = new DoiXung(diem1, mode).doiXungDiem();

                listBienBao.get(listBienBao.size() - 1).getHinhChuNhat().setX1(diem2d.getX());
                listBienBao.get(listBienBao.size() - 1).getHinhChuNhat().setY1(diem2d.getY());

                diem2d = new DoiXung(diem2, mode).doiXungDiem();
                listBienBao.get(listBienBao.size() - 1).getHinhChuNhat().setX2(diem2d.getX());
                listBienBao.get(listBienBao.size() - 1).getHinhChuNhat().setY2(diem2d.getY());

                diem2d = new DoiXung(diem3, mode).doiXungDiem();
                listBienBao.get(listBienBao.size() - 1).getHinhChuNhat().setX3(diem2d.getX());
                listBienBao.get(listBienBao.size() - 1).getHinhChuNhat().setY3(diem2d.getY());

                diem2d = new DoiXung(diem4, mode).doiXungDiem();
                listBienBao.get(listBienBao.size() - 1).getHinhChuNhat().setX4(diem2d.getX());
                listBienBao.get(listBienBao.size() - 1).getHinhChuNhat().setY4(diem2d.getY());
            }
            if(drawMode.equals("Sao")){
                Diem2D diemO = new Diem2D(listSao.get(listSao.size() - 1).getxO(), listSao.get(listSao.size() - 1).getyO());
                Diem2D diem2d = new DoiXung(diemO, mode).doiXungDiem();

                listSao.get(listSao.size() - 1).setxO(diem2d.getX());
                listSao.get(listSao.size() - 1).setyO(diem2d.getY());
              
                Diem2D diemTren = new Diem2D(listSao.get(listSao.size() - 1).getxTren(), listSao.get(listSao.size() - 1).getyTren());
                Diem2D diemDuoi = new Diem2D(listSao.get(listSao.size() - 1).getxDuoi(), listSao.get(listSao.size() - 1).getyDuoi());
                Diem2D diemTrai = new Diem2D(listSao.get(listSao.size() - 1).getxTrai(), listSao.get(listSao.size() - 1).getyTrai());
                Diem2D diemPhai = new Diem2D(listSao.get(listSao.size() - 1).getxPhai(), listSao.get(listSao.size() - 1).getyPhai());
                
                Diem2D diemTrenDuongTron = new Diem2D(listSao.get(listSao.size() - 1).getxTrenDuongTron(), listSao.get(listSao.size() - 1).getyTrenDuongTron());
                Diem2D diemDuoiDuongTron = new Diem2D(listSao.get(listSao.size() - 1).getxDuoiDuongTron(), listSao.get(listSao.size() - 1).getyDuoiDuongTron());
                Diem2D diemTraiDuongTron = new Diem2D(listSao.get(listSao.size() - 1).getxTraiDuongTron(), listSao.get(listSao.size() - 1).getyTraiDuongTron());
                Diem2D diemPhaiDuongTron = new Diem2D(listSao.get(listSao.size() - 1).getxPhaiDuongTron(), listSao.get(listSao.size() - 1).getyPhaiDuongTron());
                
                diem2d = new DoiXung(diemTren, mode).doiXungDiem();
                listSao.get(listSao.size()-1).setxTren(diem2d.getX());
                listSao.get(listSao.size()-1).setyTren(diem2d.getY());
                
                diem2d = new DoiXung(diemDuoi, mode).doiXungDiem();
                listSao.get(listSao.size()-1).setxDuoi(diem2d.getX());
                listSao.get(listSao.size()-1).setyDuoi(diem2d.getY());
                
                diem2d = new DoiXung(diemTrai, mode).doiXungDiem();
                listSao.get(listSao.size()-1).setxTrai(diem2d.getX());
                listSao.get(listSao.size()-1).setyTrai(diem2d.getY());
                
                diem2d = new DoiXung(diemPhai, mode).doiXungDiem();
                listSao.get(listSao.size()-1).setxPhai(diem2d.getX());
                listSao.get(listSao.size()-1).setyPhai(diem2d.getY());
                
                //
                diem2d = new DoiXung(diemTrenDuongTron, mode).doiXungDiem();
                listSao.get(listSao.size()-1).setxTrenDuongTron(diem2d.getX());
                listSao.get(listSao.size()-1).setyTrenDuongTron(diem2d.getY());
                
                diem2d = new DoiXung(diemDuoiDuongTron, mode).doiXungDiem();
                listSao.get(listSao.size()-1).setxDuoiDuongTron(diem2d.getX());
                listSao.get(listSao.size()-1).setyDuoiDuongTron(diem2d.getY());
                
                diem2d = new DoiXung(diemTraiDuongTron, mode).doiXungDiem();
                listSao.get(listSao.size()-1).setxTraiDuongTron(diem2d.getX());
                listSao.get(listSao.size()-1).setyTraiDuongTron(diem2d.getY());
                
                diem2d = new DoiXung(diemPhaiDuongTron, mode).doiXungDiem();
                listSao.get(listSao.size()-1).setxPhaiDuongTron(diem2d.getX());
                listSao.get(listSao.size()-1).setyPhaiDuongTron(diem2d.getY());
            }
            if(drawMode.equals("New_Oto")){
            Diem2D diem1 = new Diem2D(listNew_Oto.get(listNew_Oto.size()-1).getxMuiXeDuoi(), listNew_Oto.get(listNew_Oto.size()-1).getyMuiXeDuoi());
            Diem2D diem2 = new Diem2D(listNew_Oto.get(listNew_Oto.size()-1).getxMuiXeGiua(), listNew_Oto.get(listNew_Oto.size()-1).getyMuiXeGiua());
            Diem2D diem3 = new Diem2D(listNew_Oto.get(listNew_Oto.size()-1).getxMuiXeTren(), listNew_Oto.get(listNew_Oto.size()-1).getyMuiXeTren());

            Diem2D diem2d;

            diem2d = new DoiXung(diem1, mode).doiXungDiem();

            listNew_Oto.get(listNew_Oto.size()-1).setxMuiXeDuoi(diem2d.getX());
            listNew_Oto.get(listNew_Oto.size()-1).setyMuiXeDuoi(diem2d.getY());

            diem2d = new DoiXung(diem2, mode).doiXungDiem();

            listNew_Oto.get(listNew_Oto.size()-1).setxMuiXeGiua(diem2d.getX());
            listNew_Oto.get(listNew_Oto.size()-1).setyMuiXeGiua(diem2d.getY());

            diem2d = new DoiXung(diem3, mode).doiXungDiem();

            listNew_Oto.get(listNew_Oto.size()-1).setxMuiXeTren(diem2d.getX());
            listNew_Oto.get(listNew_Oto.size()-1).setyMuiXeTren(diem2d.getY());

            diem1 = new Diem2D(listNew_Oto.get(listNew_Oto.size()-1).getxNocXe1(), listNew_Oto.get(listNew_Oto.size()-1).getyNocXe1());
            diem2 = new Diem2D(listNew_Oto.get(listNew_Oto.size()-1).getxNocXe2(), listNew_Oto.get(listNew_Oto.size()-1).getyNocXe2());
            diem3 = new Diem2D(listNew_Oto.get(listNew_Oto.size()-1).getxNocXe3(), listNew_Oto.get(listNew_Oto.size()-1).getyNocXe3());

            diem2d = new DoiXung(diem1, mode).doiXungDiem();

            listNew_Oto.get(listNew_Oto.size()-1).setxNocXe1(diem2d.getX());
            listNew_Oto.get(listNew_Oto.size()-1).setyNocXe1(diem2d.getY());

            diem2d = new DoiXung(diem2, mode).doiXungDiem();

            listNew_Oto.get(listNew_Oto.size()-1).setxNocXe2(diem2d.getX());
            listNew_Oto.get(listNew_Oto.size()-1).setyNocXe2(diem2d.getY());

            diem2d = new DoiXung(diem3, mode).doiXungDiem();

            listNew_Oto.get(listNew_Oto.size()-1).setxNocXe3(diem2d.getX());
            listNew_Oto.get(listNew_Oto.size()-1).setyNocXe3(diem2d.getY());
            //
            diem1 = new Diem2D(listNew_Oto.get(listNew_Oto.size()-1).getxDuoiXe1(), listNew_Oto.get(listNew_Oto.size()-1).getyDuoiXe1());
            diem2 = new Diem2D(listNew_Oto.get(listNew_Oto.size()-1).getxDuoiXe2(), listNew_Oto.get(listNew_Oto.size()-1).getyDuoiXe2());
            diem3 = new Diem2D(listNew_Oto.get(listNew_Oto.size()-1).getxDuoiXe3(), listNew_Oto.get(listNew_Oto.size()-1).getyDuoiXe3());

            diem2d = new DoiXung(diem1, mode).doiXungDiem();

            listNew_Oto.get(listNew_Oto.size()-1).setxDuoiXe1(diem2d.getX());
            listNew_Oto.get(listNew_Oto.size()-1).setyDuoiXe1(diem2d.getY());

            diem2d = new DoiXung(diem2, mode).doiXungDiem();

            listNew_Oto.get(listNew_Oto.size()-1).setxDuoiXe2(diem2d.getX());
            listNew_Oto.get(listNew_Oto.size()-1).setyDuoiXe2(diem2d.getY());

            diem2d = new DoiXung(diem3, mode).doiXungDiem();

            listNew_Oto.get(listNew_Oto.size()-1).setxDuoiXe3(diem2d.getX());
            listNew_Oto.get(listNew_Oto.size()-1).setyDuoiXe3(diem2d.getY());
            //
            diem1 = new Diem2D(listNew_Oto.get(listNew_Oto.size()-1).getxDuoiXe4(), listNew_Oto.get(listNew_Oto.size()-1).getyDuoiXe4());
            diem2 = new Diem2D(listNew_Oto.get(listNew_Oto.size()-1).getxDuoiXe5(), listNew_Oto.get(listNew_Oto.size()-1).getyDuoiXe5());
            diem3 = new Diem2D(listNew_Oto.get(listNew_Oto.size()-1).getxDuoiXeDuoi(), listNew_Oto.get(listNew_Oto.size()-1).getyDuoiXeDuoi());

            diem2d = new DoiXung(diem1, mode).doiXungDiem();

            listNew_Oto.get(listNew_Oto.size()-1).setxDuoiXe4(diem2d.getX());
            listNew_Oto.get(listNew_Oto.size()-1).setyDuoiXe4(diem2d.getY());

            diem2d = new DoiXung(diem2, mode).doiXungDiem();

            listNew_Oto.get(listNew_Oto.size()-1).setxDuoiXe5(diem2d.getX());
            listNew_Oto.get(listNew_Oto.size()-1).setyDuoiXe5(diem2d.getY());

            diem2d = new DoiXung(diem3, mode).doiXungDiem();

            listNew_Oto.get(listNew_Oto.size()-1).setxDuoiXeDuoi(diem2d.getX());
            listNew_Oto.get(listNew_Oto.size()-1).setyDuoiXeDuoi(diem2d.getY());
            //
            diem1 = new Diem2D(listNew_Oto.get(listNew_Oto.size()-1).getxBanhXeTruoc(), listNew_Oto.get(listNew_Oto.size()-1).getyBanhXeTruoc());
            diem2 = new Diem2D(listNew_Oto.get(listNew_Oto.size()-1).getxBanhXeSau(), listNew_Oto.get(listNew_Oto.size()-1).getyBanhXeSau());

            diem2d = new DoiXung(diem1, mode).doiXungDiem();

            listNew_Oto.get(listNew_Oto.size()-1).setxBanhXeTruoc(diem2d.getX());
            listNew_Oto.get(listNew_Oto.size()-1).setyBanhXeTruoc(diem2d.getY());

            diem2d = new DoiXung(diem2, mode).doiXungDiem();

            listNew_Oto.get(listNew_Oto.size()-1).setxBanhXeSau(diem2d.getX());
            listNew_Oto.get(listNew_Oto.size()-1).setyBanhXeSau(diem2d.getY());
            //
            diem1 = new Diem2D(listNew_Oto.get(listNew_Oto.size()-1).getxKinh1(), listNew_Oto.get(listNew_Oto.size()-1).getyKinh1());
            diem2 = new Diem2D(listNew_Oto.get(listNew_Oto.size()-1).getxKinh2(), listNew_Oto.get(listNew_Oto.size()-1).getyKinh2());
            diem3 = new Diem2D(listNew_Oto.get(listNew_Oto.size()-1).getxKinh3(), listNew_Oto.get(listNew_Oto.size()-1).getyKinh3());

            diem2d = new DoiXung(diem1, mode).doiXungDiem();

            listNew_Oto.get(listNew_Oto.size()-1).setxKinh1(diem2d.getX());
            listNew_Oto.get(listNew_Oto.size()-1).setyKinh1(diem2d.getY());

            diem2d = new DoiXung(diem2, mode).doiXungDiem();

            listNew_Oto.get(listNew_Oto.size()-1).setxKinh2(diem2d.getX());
            listNew_Oto.get(listNew_Oto.size()-1).setyKinh2(diem2d.getY());

            diem2d = new DoiXung(diem3, mode).doiXungDiem();

            listNew_Oto.get(listNew_Oto.size()-1).setxKinh3(diem2d.getX());
            listNew_Oto.get(listNew_Oto.size()-1).setyKinh3(diem2d.getY());
            //
            diem1 = new Diem2D(listNew_Oto.get(listNew_Oto.size()-1).getxKinh4(), listNew_Oto.get(listNew_Oto.size()-1).getyKinh4());
            diem2 = new Diem2D(listNew_Oto.get(listNew_Oto.size()-1).getxKinh5(), listNew_Oto.get(listNew_Oto.size()-1).getyKinh5());
            diem3 = new Diem2D(listNew_Oto.get(listNew_Oto.size()-1).getxKinh6(), listNew_Oto.get(listNew_Oto.size()-1).getyKinh6());

            diem2d = new DoiXung(diem1, mode).doiXungDiem();

            listNew_Oto.get(listNew_Oto.size()-1).setxKinh4(diem2d.getX());
            listNew_Oto.get(listNew_Oto.size()-1).setyKinh4(diem2d.getY());

            diem2d = new DoiXung(diem2, mode).doiXungDiem();

            listNew_Oto.get(listNew_Oto.size()-1).setxKinh5(diem2d.getX());
            listNew_Oto.get(listNew_Oto.size()-1).setyKinh5(diem2d.getY());

            diem2d = new DoiXung(diem3, mode).doiXungDiem();

            listNew_Oto.get(listNew_Oto.size()-1).setxKinh6(diem2d.getX());
            listNew_Oto.get(listNew_Oto.size()-1).setyKinh6(diem2d.getY());
            //
            diem1 = new Diem2D(listNew_Oto.get(listNew_Oto.size()-1).getxKinh7(), listNew_Oto.get(listNew_Oto.size()-1).getyKinh7());
            diem2 = new Diem2D(listNew_Oto.get(listNew_Oto.size()-1).getxKinh8(), listNew_Oto.get(listNew_Oto.size()-1).getyKinh8());
            diem3 = new Diem2D(listNew_Oto.get(listNew_Oto.size()-1).getxKinh9(), listNew_Oto.get(listNew_Oto.size()-1).getyKinh9());

            diem2d = new DoiXung(diem1, mode).doiXungDiem();

            listNew_Oto.get(listNew_Oto.size()-1).setxKinh7(diem2d.getX());
            listNew_Oto.get(listNew_Oto.size()-1).setyKinh7(diem2d.getY());

            diem2d = new DoiXung(diem2, mode).doiXungDiem();

            listNew_Oto.get(listNew_Oto.size()-1).setxKinh8(diem2d.getX());
            listNew_Oto.get(listNew_Oto.size()-1).setyKinh8(diem2d.getY());

            diem2d = new DoiXung(diem3, mode).doiXungDiem();

            listNew_Oto.get(listNew_Oto.size()-1).setxKinh9(diem2d.getX());
            listNew_Oto.get(listNew_Oto.size()-1).setyKinh9(diem2d.getY());
            //
            diem1 = new Diem2D(listNew_Oto.get(listNew_Oto.size()-1).getxChiTiet1(), listNew_Oto.get(listNew_Oto.size()-1).getyChiTiet1());
            diem2 = new Diem2D(listNew_Oto.get(listNew_Oto.size()-1).getxChiTiet2(), listNew_Oto.get(listNew_Oto.size()-1).getyChiTiet2());

            diem2d = new DoiXung(diem1, mode).doiXungDiem();

            listNew_Oto.get(listNew_Oto.size()-1).setxChiTiet1(diem2d.getX());
            listNew_Oto.get(listNew_Oto.size()-1).setyChiTiet1(diem2d.getY());

            diem2d = new DoiXung(diem2, mode).doiXungDiem();

            listNew_Oto.get(listNew_Oto.size()-1).setxChiTiet2(diem2d.getX());
            listNew_Oto.get(listNew_Oto.size()-1).setyChiTiet2(diem2d.getY());
            }
            repaint();
        }
    }//GEN-LAST:event_jButton_DoiXungActionPerformed

    private void jButton_ThuPhongActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton_ThuPhongActionPerformed
        // TODO add your handling code here:
        String dx = "Tỉ lệ:";
        JComboBox jComboBox_CheDo = new JComboBox(new Object[]{"Phóng to", "Thu nhỏ"});
        JTextField jTextField_TyLe = new JTextField("0");
        Object[] message = new Object[]{jComboBox_CheDo, dx, jTextField_TyLe
        };
        int choice = JOptionPane.showConfirmDialog(rootPane, message, "Thu phóng hình vẽ gần đây nhất", JOptionPane.OK_CANCEL_OPTION);
        if (choice == JOptionPane.OK_OPTION) {
            double scale = 0;
            if (jComboBox_CheDo.getSelectedItem().toString().equals("Phóng to")) {
                scale = Double.parseDouble(jTextField_TyLe.getText());
                System.out.println(scale);
            }
            if (jComboBox_CheDo.getSelectedItem().toString().equals("Thu nhỏ")) {
                scale = Double.parseDouble(jTextField_TyLe.getText());
                scale = 1 / scale;
                System.out.println("sacle " + scale);
            }
//            String mode = jComboBox_CheDo.getSelectedItem().toString();
            if (drawMode.equals("Diem")) {
//                    JOptionPane.showMessageDialog(rootPane, "");
//                Diem2D diem2d = new Quay (listDiem2D.get(listDiem2D.size() - 1), scale).quayTheoTamO();
//                listDiem2D.get(listDiem2D.size() - 1).setX(diem2d.getX());
//                listDiem2D.get(listDiem2D.size() - 1).setY(diem2d.getY());

            }
            if (drawMode.equals("DoanThangNetLien")) {
                Diem2D diem1 = new Diem2D(listDoanThang.get(listDoanThang.size() - 1).getX1(), listDoanThang.get(listDoanThang.size() - 1).getY1());
                Diem2D diem2 = new Diem2D(listDoanThang.get(listDoanThang.size() - 1).getX2(), listDoanThang.get(listDoanThang.size() - 1).getY2());

                Diem2D diem2d = new ThuPhong(diem1, scale).ThuPhongDiem();
                int xtt = (int) diem2d.getX() - diem1.getX();// lấy điểm 1 làm gốc để tịnh tiến về sau thu phóng
                int ytt = (int) diem2d.getY() - diem1.getY();

//                diem2d = new TinhTien(diem2d, -xtt, -xtt).tinhTienDiem();
                listDoanThang.get(listDoanThang.size() - 1).setX1(diem2d.getX() - xtt);
                listDoanThang.get(listDoanThang.size() - 1).setY1(diem2d.getY() - ytt);

                diem2d = new ThuPhong(diem2, scale).ThuPhongDiem();
//                diem2d = new TinhTien(diem2d, -xtt, -ytt).tinhTienDiem();
                listDoanThang.get(listDoanThang.size() - 1).setX2(diem2d.getX() - xtt);
                listDoanThang.get(listDoanThang.size() - 1).setY2(diem2d.getY() - ytt);
            }
            if (drawMode.equals("DoanThangNetDut")) {
                Diem2D diem1 = new Diem2D(listDoanThang.get(listDoanThang.size() - 1).getX1(), listDoanThang.get(listDoanThang.size() - 1).getY1());
                Diem2D diem2 = new Diem2D(listDoanThang.get(listDoanThang.size() - 1).getX2(), listDoanThang.get(listDoanThang.size() - 1).getY2());

                Diem2D diem2d = new ThuPhong(diem1, scale).ThuPhongDiem();
                int xtt = (int) diem2d.getX() - diem1.getX();// lấy điểm 1 làm gốc để tịnh tiến về sau thu phóng
                int ytt = (int) diem2d.getY() - diem1.getY();

//                diem2d = new TinhTien(diem2d, -xtt, -xtt).tinhTienDiem();
                listDoanThang.get(listDoanThang.size() - 1).setX1(diem2d.getX() - xtt);
                listDoanThang.get(listDoanThang.size() - 1).setY1(diem2d.getY() - ytt);

                diem2d = new ThuPhong(diem2, scale).ThuPhongDiem();
//                diem2d = new TinhTien(diem2d, -xtt, -ytt).tinhTienDiem();
                listDoanThang.get(listDoanThang.size() - 1).setX2(diem2d.getX() - xtt);
                listDoanThang.get(listDoanThang.size() - 1).setY2(diem2d.getY() - ytt);
            }
            if (drawMode.equals("DoanThangChamGach")) {
                Diem2D diem1 = new Diem2D(listDoanThang.get(listDoanThang.size() - 1).getX1(), listDoanThang.get(listDoanThang.size() - 1).getY1());
                Diem2D diem2 = new Diem2D(listDoanThang.get(listDoanThang.size() - 1).getX2(), listDoanThang.get(listDoanThang.size() - 1).getY2());

                Diem2D diem2d = new ThuPhong(diem1, scale).ThuPhongDiem();
                int xtt = (int) diem2d.getX() - diem1.getX();// lấy điểm 1 làm gốc để tịnh tiến về sau thu phóng
                int ytt = (int) diem2d.getY() - diem1.getY();

//                diem2d = new TinhTien(diem2d, -xtt, -xtt).tinhTienDiem();
                listDoanThang.get(listDoanThang.size() - 1).setX1(diem2d.getX() - xtt);
                listDoanThang.get(listDoanThang.size() - 1).setY1(diem2d.getY() - ytt);

                diem2d = new ThuPhong(diem2, scale).ThuPhongDiem();
//                diem2d = new TinhTien(diem2d, -xtt, -ytt).tinhTienDiem();
                listDoanThang.get(listDoanThang.size() - 1).setX2(diem2d.getX() - xtt);
                listDoanThang.get(listDoanThang.size() - 1).setY2(diem2d.getY() - ytt);
            }
            if (drawMode.equals("DoanThang2ChamGach")) {
                Diem2D diem1 = new Diem2D(listDoanThang.get(listDoanThang.size() - 1).getX1(), listDoanThang.get(listDoanThang.size() - 1).getY1());
                Diem2D diem2 = new Diem2D(listDoanThang.get(listDoanThang.size() - 1).getX2(), listDoanThang.get(listDoanThang.size() - 1).getY2());

                Diem2D diem2d = new ThuPhong(diem1, scale).ThuPhongDiem();
                int xtt = (int) diem2d.getX() - diem1.getX();// lấy điểm 1 làm gốc để tịnh tiến về sau thu phóng
                int ytt = (int) diem2d.getY() - diem1.getY();

//                diem2d = new TinhTien(diem2d, -xtt, -xtt).tinhTienDiem();
                listDoanThang.get(listDoanThang.size() - 1).setX1(diem2d.getX() - xtt);
                listDoanThang.get(listDoanThang.size() - 1).setY1(diem2d.getY() - ytt);

                diem2d = new ThuPhong(diem2, scale).ThuPhongDiem();
//                diem2d = new TinhTien(diem2d, -xtt, -ytt).tinhTienDiem();
                listDoanThang.get(listDoanThang.size() - 1).setX2(diem2d.getX() - xtt);
                listDoanThang.get(listDoanThang.size() - 1).setY2(diem2d.getY() - ytt);
            }
            if (drawMode.equals("HinhChuNhat")) {
                Diem2D diem1 = new Diem2D(listHinhChuNhat.get(listHinhChuNhat.size() - 1).getX1(), listHinhChuNhat.get(listHinhChuNhat.size() - 1).getY1());
                Diem2D diem2 = new Diem2D(listHinhChuNhat.get(listHinhChuNhat.size() - 1).getX2(), listHinhChuNhat.get(listHinhChuNhat.size() - 1).getY2());
                Diem2D diem3 = new Diem2D(listHinhChuNhat.get(listHinhChuNhat.size() - 1).getX3(), listHinhChuNhat.get(listHinhChuNhat.size() - 1).getY3());
                Diem2D diem4 = new Diem2D(listHinhChuNhat.get(listHinhChuNhat.size() - 1).getX4(), listHinhChuNhat.get(listHinhChuNhat.size() - 1).getY4());

                Diem2D diem2d = new ThuPhong(diem1, scale).ThuPhongDiem();
                int xtt = (int) diem2d.getX() - diem1.getX();// lấy điểm 1 làm gốc để tịnh tiến về sau thu phóng
                int ytt = (int) diem2d.getY() - diem1.getY();

//                diem2d = new TinhTien(diem2d, -xtt, -xtt).tinhTienDiem();
                listHinhChuNhat.get(listHinhChuNhat.size() - 1).setX1(diem2d.getX() - xtt);
                listHinhChuNhat.get(listHinhChuNhat.size() - 1).setY1(diem2d.getY() - ytt);

                diem2d = new ThuPhong(diem2, scale).ThuPhongDiem();
//                diem2d = new TinhTien(diem2d, -xtt, -ytt).tinhTienDiem();
                listHinhChuNhat.get(listHinhChuNhat.size() - 1).setX2(diem2d.getX() - xtt);
                listHinhChuNhat.get(listHinhChuNhat.size() - 1).setY2(diem2d.getY() - ytt);

                diem2d = new ThuPhong(diem3, scale).ThuPhongDiem();
//                diem2d = new TinhTien(diem2d, -xtt, -ytt).tinhTienDiem();
                listHinhChuNhat.get(listHinhChuNhat.size() - 1).setX3(diem2d.getX() - xtt);
                listHinhChuNhat.get(listHinhChuNhat.size() - 1).setY3(diem2d.getY() - ytt);

                diem2d = new ThuPhong(diem4, scale).ThuPhongDiem();
//                diem2d = new TinhTien(diem2d, -xtt, -ytt).tinhTienDiem();
                listHinhChuNhat.get(listHinhChuNhat.size() - 1).setX4(diem2d.getX() - xtt);
                listHinhChuNhat.get(listHinhChuNhat.size() - 1).setY4(diem2d.getY() - ytt);
            }
            if (drawMode.equals("DuongTronNetLien")) {
                int newR = new ThuPhong(listDuongTron.get(listDuongTron.size() - 1).getR(), scale).ThuPhongSize();
                listDuongTron.get(listDuongTron.size() - 1).setR(newR);
            }
            if (drawMode.equals("DuongTronNetDut")) {
                int newR = new ThuPhong(listDuongTron.get(listDuongTron.size() - 1).getR(), scale).ThuPhongSize();
                listDuongTron.get(listDuongTron.size() - 1).setR(newR);
            }
            if (drawMode.equals("HinhTamGiacCan")) {
                Diem2D diem1 = new Diem2D(listHinhTamGiacCan.get(listHinhTamGiacCan.size() - 1).getxDinh(), listHinhTamGiacCan.get(listHinhTamGiacCan.size() - 1).getyDinh());
                Diem2D diem2 = new Diem2D(listHinhTamGiacCan.get(listHinhTamGiacCan.size() - 1).getX2(), listHinhTamGiacCan.get(listHinhTamGiacCan.size() - 1).getY2());
                Diem2D diem3 = new Diem2D(listHinhTamGiacCan.get(listHinhTamGiacCan.size() - 1).getX3(), listHinhTamGiacCan.get(listHinhTamGiacCan.size() - 1).getY3());

                Diem2D diem2d = new ThuPhong(diem1, scale).ThuPhongDiem();

                int xtt = (int) diem2d.getX() - diem1.getX();// lấy điểm 1 làm gốc để tịnh tiến về sau thu phóng
                int ytt = (int) diem2d.getY() - diem1.getY();

                listHinhTamGiacCan.get(listHinhTamGiacCan.size() - 1).setxDinh(diem2d.getX() - xtt);
                listHinhTamGiacCan.get(listHinhTamGiacCan.size() - 1).setyDinh(diem2d.getY() - ytt);

                diem2d = new ThuPhong(diem2, scale).ThuPhongDiem();
                listHinhTamGiacCan.get(listHinhTamGiacCan.size() - 1).setX2(diem2d.getX() - xtt);
                listHinhTamGiacCan.get(listHinhTamGiacCan.size() - 1).setY2(diem2d.getY() - ytt);

                diem2d = new ThuPhong(diem3, scale).ThuPhongDiem();
                listHinhTamGiacCan.get(listHinhTamGiacCan.size() - 1).setX3(diem2d.getX() - xtt);
                listHinhTamGiacCan.get(listHinhTamGiacCan.size() - 1).setY3(diem2d.getY() - ytt);

            }
            if (drawMode.equals("CayThong")) {
                Diem2D diemO = new Diem2D(listCayThong.get(listCayThong.size() - 1).getxDinh(), listCayThong.get(listCayThong.size() - 1).getyDinh());
                Diem2D diem2d = new ThuPhong(diemO, scale).ThuPhongDiem();
                int xtt = (int) diem2d.getX() - diemO.getX();// lấy điểm 1 làm gốc để tịnh tiến về sau thu phóng
                int ytt = (int) diem2d.getY() - diemO.getY();
                listCayThong.get(listCayThong.size() - 1).setxDinh(diem2d.getX() - xtt);
                listCayThong.get(listCayThong.size() - 1).setyDinh(diem2d.getY() - ytt);

                Diem2D diem1 = new Diem2D(listCayThong.get(listCayThong.size() - 1).getHinhTamGiacCan1().getxDinh(), listCayThong.get(listCayThong.size() - 1).getHinhTamGiacCan1().getyDinh());
                Diem2D diem2 = new Diem2D(listCayThong.get(listCayThong.size() - 1).getHinhTamGiacCan1().getX2(), listCayThong.get(listCayThong.size() - 1).getHinhTamGiacCan1().getY2());
                Diem2D diem3 = new Diem2D(listCayThong.get(listCayThong.size() - 1).getHinhTamGiacCan1().getX3(), listCayThong.get(listCayThong.size() - 1).getHinhTamGiacCan1().getY3());

                diem2d = new ThuPhong(diem1, scale).ThuPhongDiem();
                listCayThong.get(listCayThong.size() - 1).getHinhTamGiacCan1().setxDinh(diem2d.getX() - xtt);
                listCayThong.get(listCayThong.size() - 1).getHinhTamGiacCan1().setyDinh(diem2d.getY() - ytt);

                diem2d = new ThuPhong(diem2, scale).ThuPhongDiem();
                listCayThong.get(listCayThong.size() - 1).getHinhTamGiacCan1().setX2(diem2d.getX() - xtt);
                listCayThong.get(listCayThong.size() - 1).getHinhTamGiacCan1().setY2(diem2d.getY() - ytt);

                diem2d = new ThuPhong(diem3, scale).ThuPhongDiem();
                listCayThong.get(listCayThong.size() - 1).getHinhTamGiacCan1().setX3(diem2d.getX() - xtt);
                listCayThong.get(listCayThong.size() - 1).getHinhTamGiacCan1().setY3(diem2d.getY() - ytt);

                //quay hinh tam Giac thu 2
                diem1 = new Diem2D(listCayThong.get(listCayThong.size() - 1).getHinhTamGiacCan2().getxDinh(), listCayThong.get(listCayThong.size() - 1).getHinhTamGiacCan2().getyDinh());
                diem2 = new Diem2D(listCayThong.get(listCayThong.size() - 1).getHinhTamGiacCan2().getX2(), listCayThong.get(listCayThong.size() - 1).getHinhTamGiacCan2().getY2());
                diem3 = new Diem2D(listCayThong.get(listCayThong.size() - 1).getHinhTamGiacCan2().getX3(), listCayThong.get(listCayThong.size() - 1).getHinhTamGiacCan2().getY3());

                diem2d = new ThuPhong(diem1, scale).ThuPhongDiem();
                listCayThong.get(listCayThong.size() - 1).getHinhTamGiacCan2().setxDinh(diem2d.getX() - xtt);
                listCayThong.get(listCayThong.size() - 1).getHinhTamGiacCan2().setyDinh(diem2d.getY() - ytt);

                diem2d = new ThuPhong(diem2, scale).ThuPhongDiem();
                listCayThong.get(listCayThong.size() - 1).getHinhTamGiacCan2().setX2(diem2d.getX() - xtt);
                listCayThong.get(listCayThong.size() - 1).getHinhTamGiacCan2().setY2(diem2d.getY() - ytt);

                diem2d = new ThuPhong(diem3, scale).ThuPhongDiem();
                listCayThong.get(listCayThong.size() - 1).getHinhTamGiacCan2().setX3(diem2d.getX() - xtt);
                listCayThong.get(listCayThong.size() - 1).getHinhTamGiacCan2().setY3(diem2d.getY() - ytt);

                //quay hinh tam Giac thu 3
                diem1 = new Diem2D(listCayThong.get(listCayThong.size() - 1).getHinhTamGiacCan3().getxDinh(), listCayThong.get(listCayThong.size() - 1).getHinhTamGiacCan3().getyDinh());
                diem2 = new Diem2D(listCayThong.get(listCayThong.size() - 1).getHinhTamGiacCan3().getX2(), listCayThong.get(listCayThong.size() - 1).getHinhTamGiacCan3().getY2());
                diem3 = new Diem2D(listCayThong.get(listCayThong.size() - 1).getHinhTamGiacCan3().getX3(), listCayThong.get(listCayThong.size() - 1).getHinhTamGiacCan3().getY3());

                diem2d = new ThuPhong(diem1, scale).ThuPhongDiem();
                listCayThong.get(listCayThong.size() - 1).getHinhTamGiacCan3().setxDinh(diem2d.getX() - xtt);
                listCayThong.get(listCayThong.size() - 1).getHinhTamGiacCan3().setyDinh(diem2d.getY() - ytt);

                diem2d = new ThuPhong(diem2, scale).ThuPhongDiem();
                listCayThong.get(listCayThong.size() - 1).getHinhTamGiacCan3().setX2(diem2d.getX() - xtt);
                listCayThong.get(listCayThong.size() - 1).getHinhTamGiacCan3().setY2(diem2d.getY() - ytt);

                diem2d = new ThuPhong(diem3, scale).ThuPhongDiem();
                listCayThong.get(listCayThong.size() - 1).getHinhTamGiacCan3().setX3(diem2d.getX() - xtt);
                listCayThong.get(listCayThong.size() - 1).getHinhTamGiacCan3().setY3(diem2d.getY() - ytt);

                diem1 = new Diem2D(listCayThong.get(listCayThong.size() - 1).getHinhChuNhat().getX1(), listCayThong.get(listCayThong.size() - 1).getHinhChuNhat().getY1());
                diem2 = new Diem2D(listCayThong.get(listCayThong.size() - 1).getHinhChuNhat().getX2(), listCayThong.get(listCayThong.size() - 1).getHinhChuNhat().getY2());
                diem3 = new Diem2D(listCayThong.get(listCayThong.size() - 1).getHinhChuNhat().getX3(), listCayThong.get(listCayThong.size() - 1).getHinhChuNhat().getY3());
                Diem2D diem4 = new Diem2D(listCayThong.get(listCayThong.size() - 1).getHinhChuNhat().getX4(), listCayThong.get(listCayThong.size() - 1).getHinhChuNhat().getY4());

                diem2d = new ThuPhong(diem1, scale).ThuPhongDiem();

                listCayThong.get(listCayThong.size() - 1).getHinhChuNhat().setX1(diem2d.getX() - xtt);
                listCayThong.get(listCayThong.size() - 1).getHinhChuNhat().setY1(diem2d.getY() - ytt);

                diem2d = new ThuPhong(diem2, scale).ThuPhongDiem();
                listCayThong.get(listCayThong.size() - 1).getHinhChuNhat().setX2(diem2d.getX() - xtt);
                listCayThong.get(listCayThong.size() - 1).getHinhChuNhat().setY2(diem2d.getY() - ytt);

                diem2d = new ThuPhong(diem3, scale).ThuPhongDiem();
                listCayThong.get(listCayThong.size() - 1).getHinhChuNhat().setX3(diem2d.getX() - xtt);
                listCayThong.get(listCayThong.size() - 1).getHinhChuNhat().setY3(diem2d.getY() - ytt);

                diem2d = new ThuPhong(diem4, scale).ThuPhongDiem();
                listCayThong.get(listCayThong.size() - 1).getHinhChuNhat().setX4(diem2d.getX() - xtt);
                listCayThong.get(listCayThong.size() - 1).getHinhChuNhat().setY4(diem2d.getY() - ytt);
            }
            if (drawMode.equals("BienBao")) {
                int newR = new ThuPhong(listBienBao.get(listBienBao.size() - 1).getChieuCaoTinhTuTam(), scale).ThuPhongSize();
//int newH = (int) (listBienBao.get(listBienBao.size() - 1).getChieuCaoTinhTuTam()*scale);
//                System.out.println(listBienBao.get(listBienBao.size() - 1).getChieuCaoTinhTuTam() +"newH");
                System.out.println(newR + "newR");

                Diem2D diemO = new Diem2D(listBienBao.get(listBienBao.size() - 1).getxTamBienBao(), listBienBao.get(listBienBao.size() - 1).getyTamBienBao());
                Diem2D diem2d = new ThuPhong(diemO, scale).ThuPhongDiem();
                int xtt = (int) diem2d.getX() - diemO.getX();// lấy điểm 1 làm gốc để tịnh tiến về sau thu phóng
                int ytt = (int) diem2d.getY() - diemO.getY();

                listBienBao.get(listBienBao.size() - 1).setxTamBienBao(diem2d.getX() - xtt);
                listBienBao.get(listBienBao.size() - 1).setyTamBienBao(diem2d.getY() - ytt);

                listBienBao.get(listBienBao.size() - 1).setChieuCaoTinhTuTam(newR);

                Diem2D diem1 = new Diem2D(listBienBao.get(listBienBao.size() - 1).getHinhChuNhat().getX1(), listBienBao.get(listBienBao.size() - 1).getHinhChuNhat().getY1());
                Diem2D diem2 = new Diem2D(listBienBao.get(listBienBao.size() - 1).getHinhChuNhat().getX2(), listBienBao.get(listBienBao.size() - 1).getHinhChuNhat().getY2());
                Diem2D diem3 = new Diem2D(listBienBao.get(listBienBao.size() - 1).getHinhChuNhat().getX3(), listBienBao.get(listBienBao.size() - 1).getHinhChuNhat().getY3());
                Diem2D diem4 = new Diem2D(listBienBao.get(listBienBao.size() - 1).getHinhChuNhat().getX4(), listBienBao.get(listBienBao.size() - 1).getHinhChuNhat().getY4());

                diem2d = new ThuPhong(diem1, scale).ThuPhongDiem();

                listBienBao.get(listBienBao.size() - 1).getHinhChuNhat().setX1(diem2d.getX() - xtt);
                listBienBao.get(listBienBao.size() - 1).getHinhChuNhat().setY1(diem2d.getY() - ytt);

                diem2d = new ThuPhong(diem2, scale).ThuPhongDiem();
                listBienBao.get(listBienBao.size() - 1).getHinhChuNhat().setX2(diem2d.getX() - xtt);
                listBienBao.get(listBienBao.size() - 1).getHinhChuNhat().setY2(diem2d.getY() - ytt);

                diem2d = new ThuPhong(diem3, scale).ThuPhongDiem();
                listBienBao.get(listBienBao.size() - 1).getHinhChuNhat().setX3(diem2d.getX() - xtt);
                listBienBao.get(listBienBao.size() - 1).getHinhChuNhat().setY3(diem2d.getY() - ytt);

                diem2d = new ThuPhong(diem4, scale).ThuPhongDiem();
                listBienBao.get(listBienBao.size() - 1).getHinhChuNhat().setX4(diem2d.getX() - xtt);
                listBienBao.get(listBienBao.size() - 1).getHinhChuNhat().setY4(diem2d.getY() - ytt);
//            listHinhTamGiacDeu.add(hinhTamGiacDeu);       
            }
            if(drawMode.equals("Sao")){
                int newCD = new ThuPhong(listSao.get(listSao.size()-1).getChieuDaiCanh(), scale).ThuPhongSize();
                Diem2D diemO = new Diem2D(listSao.get(listSao.size() - 1).getxO(), listSao.get(listSao.size() - 1).getyO());
                Diem2D diem2d = new ThuPhong(diemO, scale).ThuPhongDiem();
                int xtt = (int) diem2d.getX() - diemO.getX();// lấy điểm 1 làm gốc để tịnh tiến về sau thu phóng
                int ytt = (int) diem2d.getY() - diemO.getY();

                listSao.get(listSao.size() - 1).setxO(diem2d.getX() - xtt);
                listSao.get(listSao.size() - 1).setyO(diem2d.getY() - ytt);

                listSao.get(listSao.size() - 1).setChieuDaiCanh(newCD);
                
                
                Diem2D diemTren = new Diem2D(listSao.get(listSao.size() - 1).getxTren(), listSao.get(listSao.size() - 1).getyTren());
                Diem2D diemDuoi = new Diem2D(listSao.get(listSao.size() - 1).getxDuoi(), listSao.get(listSao.size() - 1).getyDuoi());
                Diem2D diemTrai = new Diem2D(listSao.get(listSao.size() - 1).getxTrai(), listSao.get(listSao.size() - 1).getyTrai());
                Diem2D diemPhai = new Diem2D(listSao.get(listSao.size() - 1).getxPhai(), listSao.get(listSao.size() - 1).getyPhai());
                
                Diem2D diemTrenDuongTron = new Diem2D(listSao.get(listSao.size() - 1).getxTrenDuongTron(), listSao.get(listSao.size() - 1).getyTrenDuongTron());
                Diem2D diemDuoiDuongTron = new Diem2D(listSao.get(listSao.size() - 1).getxDuoiDuongTron(), listSao.get(listSao.size() - 1).getyDuoiDuongTron());
                Diem2D diemTraiDuongTron = new Diem2D(listSao.get(listSao.size() - 1).getxTraiDuongTron(), listSao.get(listSao.size() - 1).getyTraiDuongTron());
                Diem2D diemPhaiDuongTron = new Diem2D(listSao.get(listSao.size() - 1).getxPhaiDuongTron(), listSao.get(listSao.size() - 1).getyPhaiDuongTron());
                
                diem2d = new ThuPhong(diemTren, scale).ThuPhongDiem();
                listSao.get(listSao.size()-1).setxTren(diem2d.getX()-xtt);
                listSao.get(listSao.size()-1).setyTren(diem2d.getY()-ytt);
                
                diem2d = new ThuPhong(diemDuoi, scale).ThuPhongDiem();
                listSao.get(listSao.size()-1).setxDuoi(diem2d.getX()-xtt);
                listSao.get(listSao.size()-1).setyDuoi(diem2d.getY()-ytt);
                
                diem2d = new ThuPhong(diemTrai, scale).ThuPhongDiem();
                listSao.get(listSao.size()-1).setxTrai(diem2d.getX()-xtt);
                listSao.get(listSao.size()-1).setyTrai(diem2d.getY()-ytt);
                
                diem2d = new ThuPhong(diemPhai, scale).ThuPhongDiem();
                listSao.get(listSao.size()-1).setxPhai(diem2d.getX()-xtt);
                listSao.get(listSao.size()-1).setyPhai(diem2d.getY()-ytt);
                
                //
                diem2d = new ThuPhong(diemTrenDuongTron, scale).ThuPhongDiem();
                listSao.get(listSao.size()-1).setxTrenDuongTron(diem2d.getX()-xtt);
                listSao.get(listSao.size()-1).setyTrenDuongTron(diem2d.getY()-ytt);
                
                diem2d = new ThuPhong(diemDuoiDuongTron, scale).ThuPhongDiem();
                listSao.get(listSao.size()-1).setxDuoiDuongTron(diem2d.getX()-xtt);
                listSao.get(listSao.size()-1).setyDuoiDuongTron(diem2d.getY()-ytt);
                
                diem2d = new ThuPhong(diemTraiDuongTron, scale).ThuPhongDiem();
                listSao.get(listSao.size()-1).setxTraiDuongTron(diem2d.getX()-xtt);
                listSao.get(listSao.size()-1).setyTraiDuongTron(diem2d.getY()-ytt);
                
                diem2d = new ThuPhong(diemPhaiDuongTron, scale).ThuPhongDiem();
                listSao.get(listSao.size()-1).setxPhaiDuongTron(diem2d.getX()-xtt);
                listSao.get(listSao.size()-1).setyPhaiDuongTron(diem2d.getY()-ytt);
            }
            if(drawMode.equals("New_Oto")){
                int newRTruoc=0;
                int newRSau=0;
                
                
            Diem2D diem1 = new Diem2D(listNew_Oto.get(listNew_Oto.size()-1).getxMuiXeDuoi(), listNew_Oto.get(listNew_Oto.size()-1).getyMuiXeDuoi());
            Diem2D diem2 = new Diem2D(listNew_Oto.get(listNew_Oto.size()-1).getxMuiXeGiua(), listNew_Oto.get(listNew_Oto.size()-1).getyMuiXeGiua());
            Diem2D diem3 = new Diem2D(listNew_Oto.get(listNew_Oto.size()-1).getxMuiXeTren(), listNew_Oto.get(listNew_Oto.size()-1).getyMuiXeTren());

            Diem2D diem2d;

                Diem2D diemGoc = new ThuPhong(diem1, scale).ThuPhongDiem();
                int xtt = (int) diemGoc.getX() - diem1.getX();// lấy điểm 1 làm gốc để tịnh tiến về sau thu phóng
                int ytt = (int) diemGoc.getY() - diem1.getY();

            diem2d = new ThuPhong(diem1, scale).ThuPhongDiem();

            listNew_Oto.get(listNew_Oto.size()-1).setxMuiXeDuoi(diem2d.getX()-xtt);
            listNew_Oto.get(listNew_Oto.size()-1).setyMuiXeDuoi(diem2d.getY()-ytt);

            diem2d = new ThuPhong(diem2, scale).ThuPhongDiem();

            listNew_Oto.get(listNew_Oto.size()-1).setxMuiXeGiua(diem2d.getX() - xtt);
            listNew_Oto.get(listNew_Oto.size()-1).setyMuiXeGiua(diem2d.getY() - ytt);

            diem2d = new ThuPhong(diem3, scale).ThuPhongDiem();

            listNew_Oto.get(listNew_Oto.size()-1).setxMuiXeTren(diem2d.getX() - xtt);
            listNew_Oto.get(listNew_Oto.size()-1).setyMuiXeTren(diem2d.getY() - ytt);

            diem1 = new Diem2D(listNew_Oto.get(listNew_Oto.size()-1).getxNocXe1(), listNew_Oto.get(listNew_Oto.size()-1).getyNocXe1());
            diem2 = new Diem2D(listNew_Oto.get(listNew_Oto.size()-1).getxNocXe2(), listNew_Oto.get(listNew_Oto.size()-1).getyNocXe2());
            diem3 = new Diem2D(listNew_Oto.get(listNew_Oto.size()-1).getxNocXe3(), listNew_Oto.get(listNew_Oto.size()-1).getyNocXe3());

            diem2d = new ThuPhong(diem1, scale).ThuPhongDiem();

            listNew_Oto.get(listNew_Oto.size()-1).setxNocXe1(diem2d.getX() - xtt);
            listNew_Oto.get(listNew_Oto.size()-1).setyNocXe1(diem2d.getY() - ytt);

            diem2d = new ThuPhong(diem2, scale).ThuPhongDiem();

            listNew_Oto.get(listNew_Oto.size()-1).setxNocXe2(diem2d.getX() - xtt);
            listNew_Oto.get(listNew_Oto.size()-1).setyNocXe2(diem2d.getY() - ytt);

            diem2d = new ThuPhong(diem3, scale).ThuPhongDiem();

            listNew_Oto.get(listNew_Oto.size()-1).setxNocXe3(diem2d.getX() - xtt);
            listNew_Oto.get(listNew_Oto.size()-1).setyNocXe3(diem2d.getY() - ytt);
            //
            diem1 = new Diem2D(listNew_Oto.get(listNew_Oto.size()-1).getxDuoiXe1(), listNew_Oto.get(listNew_Oto.size()-1).getyDuoiXe1());
            diem2 = new Diem2D(listNew_Oto.get(listNew_Oto.size()-1).getxDuoiXe2(), listNew_Oto.get(listNew_Oto.size()-1).getyDuoiXe2());
            diem3 = new Diem2D(listNew_Oto.get(listNew_Oto.size()-1).getxDuoiXe3(), listNew_Oto.get(listNew_Oto.size()-1).getyDuoiXe3());

           diem2d = new ThuPhong(diem1, scale).ThuPhongDiem();

            listNew_Oto.get(listNew_Oto.size()-1).setxDuoiXe1(diem2d.getX() - xtt);
            listNew_Oto.get(listNew_Oto.size()-1).setyDuoiXe1(diem2d.getY() - ytt);

            diem2d = new ThuPhong(diem2, scale).ThuPhongDiem();

            listNew_Oto.get(listNew_Oto.size()-1).setxDuoiXe2(diem2d.getX() - xtt);
            listNew_Oto.get(listNew_Oto.size()-1).setyDuoiXe2(diem2d.getY() - ytt);

            diem2d = new ThuPhong(diem3, scale).ThuPhongDiem();

            listNew_Oto.get(listNew_Oto.size()-1).setxDuoiXe3(diem2d.getX() - xtt);
            listNew_Oto.get(listNew_Oto.size()-1).setyDuoiXe3(diem2d.getY() - ytt);
            //
            diem1 = new Diem2D(listNew_Oto.get(listNew_Oto.size()-1).getxDuoiXe4(), listNew_Oto.get(listNew_Oto.size()-1).getyDuoiXe4());
            diem2 = new Diem2D(listNew_Oto.get(listNew_Oto.size()-1).getxDuoiXe5(), listNew_Oto.get(listNew_Oto.size()-1).getyDuoiXe5());
            diem3 = new Diem2D(listNew_Oto.get(listNew_Oto.size()-1).getxDuoiXeDuoi(), listNew_Oto.get(listNew_Oto.size()-1).getyDuoiXeDuoi());

            diem2d = new ThuPhong(diem1, scale).ThuPhongDiem();

            listNew_Oto.get(listNew_Oto.size()-1).setxDuoiXe4(diem2d.getX() - xtt);
            listNew_Oto.get(listNew_Oto.size()-1).setyDuoiXe4(diem2d.getY() - ytt);

            diem2d = new ThuPhong(diem2, scale).ThuPhongDiem();

            listNew_Oto.get(listNew_Oto.size()-1).setxDuoiXe5(diem2d.getX() - xtt);
            listNew_Oto.get(listNew_Oto.size()-1).setyDuoiXe5(diem2d.getY() - ytt);

            diem2d = new ThuPhong(diem3, scale).ThuPhongDiem();

            listNew_Oto.get(listNew_Oto.size()-1).setxDuoiXeDuoi(diem2d.getX() - xtt);
            listNew_Oto.get(listNew_Oto.size()-1).setyDuoiXeDuoi(diem2d.getY() - ytt);
            //
            diem1 = new Diem2D(listNew_Oto.get(listNew_Oto.size()-1).getxBanhXeTruoc(), listNew_Oto.get(listNew_Oto.size()-1).getyBanhXeTruoc());
            diem2 = new Diem2D(listNew_Oto.get(listNew_Oto.size()-1).getxBanhXeSau(), listNew_Oto.get(listNew_Oto.size()-1).getyBanhXeSau());

            diem2d = new ThuPhong(diem1, scale).ThuPhongDiem();

            listNew_Oto.get(listNew_Oto.size()-1).setxBanhXeTruoc(diem2d.getX() - xtt);
            listNew_Oto.get(listNew_Oto.size()-1).setyBanhXeTruoc(diem2d.getY() - ytt);

            newRTruoc = new ThuPhong(listNew_Oto.get(listNew_Oto.size()-1).getrBanhTruoc(), scale).ThuPhongSize();
            listNew_Oto.get(listNew_Oto.size()-1).setrBanhTruoc(newRTruoc);
            
            diem2d = new ThuPhong(diem2, scale).ThuPhongDiem();

            listNew_Oto.get(listNew_Oto.size()-1).setxBanhXeSau(diem2d.getX() - xtt);
            listNew_Oto.get(listNew_Oto.size()-1).setyBanhXeSau(diem2d.getY() - ytt);
            
            newRSau = new ThuPhong(listNew_Oto.get(listNew_Oto.size()-1).getrBanhSau(), scale).ThuPhongSize();
            listNew_Oto.get(listNew_Oto.size()-1).setrBanhSau(newRSau);
            //
            diem1 = new Diem2D(listNew_Oto.get(listNew_Oto.size()-1).getxKinh1(), listNew_Oto.get(listNew_Oto.size()-1).getyKinh1());
            diem2 = new Diem2D(listNew_Oto.get(listNew_Oto.size()-1).getxKinh2(), listNew_Oto.get(listNew_Oto.size()-1).getyKinh2());
            diem3 = new Diem2D(listNew_Oto.get(listNew_Oto.size()-1).getxKinh3(), listNew_Oto.get(listNew_Oto.size()-1).getyKinh3());

            diem2d = new ThuPhong(diem1, scale).ThuPhongDiem();

            listNew_Oto.get(listNew_Oto.size()-1).setxKinh1(diem2d.getX() - xtt);
            listNew_Oto.get(listNew_Oto.size()-1).setyKinh1(diem2d.getY() - ytt);

            diem2d = new ThuPhong(diem2, scale).ThuPhongDiem();

            listNew_Oto.get(listNew_Oto.size()-1).setxKinh2(diem2d.getX() - xtt);
            listNew_Oto.get(listNew_Oto.size()-1).setyKinh2(diem2d.getY() - ytt);

            diem2d = new ThuPhong(diem3, scale).ThuPhongDiem();

            listNew_Oto.get(listNew_Oto.size()-1).setxKinh3(diem2d.getX() - xtt);
            listNew_Oto.get(listNew_Oto.size()-1).setyKinh3(diem2d.getY() - ytt);
            //
            diem1 = new Diem2D(listNew_Oto.get(listNew_Oto.size()-1).getxKinh4(), listNew_Oto.get(listNew_Oto.size()-1).getyKinh4());
            diem2 = new Diem2D(listNew_Oto.get(listNew_Oto.size()-1).getxKinh5(), listNew_Oto.get(listNew_Oto.size()-1).getyKinh5());
            diem3 = new Diem2D(listNew_Oto.get(listNew_Oto.size()-1).getxKinh6(), listNew_Oto.get(listNew_Oto.size()-1).getyKinh6());

            diem2d = new ThuPhong(diem1, scale).ThuPhongDiem();

            listNew_Oto.get(listNew_Oto.size()-1).setxKinh4(diem2d.getX() - xtt);
            listNew_Oto.get(listNew_Oto.size()-1).setyKinh4(diem2d.getY() - ytt);

            diem2d = new ThuPhong(diem2, scale).ThuPhongDiem();

            listNew_Oto.get(listNew_Oto.size()-1).setxKinh5(diem2d.getX() - xtt);
            listNew_Oto.get(listNew_Oto.size()-1).setyKinh5(diem2d.getY() - ytt);

            diem2d = new ThuPhong(diem3, scale).ThuPhongDiem();

            listNew_Oto.get(listNew_Oto.size()-1).setxKinh6(diem2d.getX() - xtt);
            listNew_Oto.get(listNew_Oto.size()-1).setyKinh6(diem2d.getY() - ytt);
            //
            diem1 = new Diem2D(listNew_Oto.get(listNew_Oto.size()-1).getxKinh7(), listNew_Oto.get(listNew_Oto.size()-1).getyKinh7());
            diem2 = new Diem2D(listNew_Oto.get(listNew_Oto.size()-1).getxKinh8(), listNew_Oto.get(listNew_Oto.size()-1).getyKinh8());
            diem3 = new Diem2D(listNew_Oto.get(listNew_Oto.size()-1).getxKinh9(), listNew_Oto.get(listNew_Oto.size()-1).getyKinh9());

            diem2d = new ThuPhong(diem1, scale).ThuPhongDiem();

            listNew_Oto.get(listNew_Oto.size()-1).setxKinh7(diem2d.getX() - xtt);
            listNew_Oto.get(listNew_Oto.size()-1).setyKinh7(diem2d.getY() - ytt);

            diem2d = new ThuPhong(diem2, scale).ThuPhongDiem();

            listNew_Oto.get(listNew_Oto.size()-1).setxKinh8(diem2d.getX() - xtt);
            listNew_Oto.get(listNew_Oto.size()-1).setyKinh8(diem2d.getY() - ytt);

            diem2d = new ThuPhong(diem3, scale).ThuPhongDiem();

            listNew_Oto.get(listNew_Oto.size()-1).setxKinh9(diem2d.getX() - xtt);
            listNew_Oto.get(listNew_Oto.size()-1).setyKinh9(diem2d.getY() - ytt);
            //
            diem1 = new Diem2D(listNew_Oto.get(listNew_Oto.size()-1).getxChiTiet1(), listNew_Oto.get(listNew_Oto.size()-1).getyChiTiet1());
            diem2 = new Diem2D(listNew_Oto.get(listNew_Oto.size()-1).getxChiTiet2(), listNew_Oto.get(listNew_Oto.size()-1).getyChiTiet2());

            diem2d = new ThuPhong(diem1, scale).ThuPhongDiem();

            listNew_Oto.get(listNew_Oto.size()-1).setxChiTiet1(diem2d.getX() - xtt);
            listNew_Oto.get(listNew_Oto.size()-1).setyChiTiet1(diem2d.getY() - ytt);

            diem2d = new ThuPhong(diem2, scale).ThuPhongDiem();

            listNew_Oto.get(listNew_Oto.size()-1).setxChiTiet2(diem2d.getX() - xtt);
            listNew_Oto.get(listNew_Oto.size()-1).setyChiTiet2(diem2d.getY() - ytt);
            }
            repaint();
        }
        
    }//GEN-LAST:event_jButton_ThuPhongActionPerformed

    private void jCheckBox_FillModeItemStateChanged(java.awt.event.ItemEvent evt) {//GEN-FIRST:event_jCheckBox_FillModeItemStateChanged
        // TODO add your handling code here:
        if (jCheckBox_FillMode.isSelected()) {
            DoanThang.unitsize = 5;
            DoanThang.fillValue = 5;
        } else {
            DoanThang.unitsize = 1;
            DoanThang.fillValue = 3;
        }
        repaint();
    }//GEN-LAST:event_jCheckBox_FillModeItemStateChanged

    private void setColor3DShapeMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_setColor3DShapeMouseClicked
        // TODO add your handling code here:
        Color c = JColorChooser.showDialog(null, "Chọn Màu cho hình 3D", Color.yellow);
        //        g.setColor(c);
        shape3DColor = c;
        System.out.println(shape3DColor);
        setColor3DShape.setBackground(c);
    }//GEN-LAST:event_setColor3DShapeMouseClicked

    private void undoActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_undoActionPerformed
        // TODO add your handling code here:
        Shape3D a = list.get(list.size() - 1);
        list.remove(list.size() - 1);

        jPanel_Graph.repaint();
        listRedo.add(a);
    }//GEN-LAST:event_undoActionPerformed

    private void redoActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_redoActionPerformed
        // TODO add your handling code here:

        Shape3D a = listRedo.get(listRedo.size() - 1);
        list.add(a);
        jPanel_Graph.repaint();
        listRedo.remove(listRedo.size() - 1);
    }//GEN-LAST:event_redoActionPerformed

    private void jButton_VeSaoActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton_VeSaoActionPerformed
        // TODO add your handling code here:
        drawMode="Sao";
    }//GEN-LAST:event_jButton_VeSaoActionPerformed

    private void jButton_VeNew_OtoActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton_VeNew_OtoActionPerformed
        // TODO add your handling code here:
        drawMode="New_Oto";
    }//GEN-LAST:event_jButton_VeNew_OtoActionPerformed
    public void resetField() {
        view.KTDH_Nhom8.title_3D.setText("");
        view.KTDH_Nhom8.a_3d.setText("");
        view.KTDH_Nhom8.b_3d.setText("");
        view.KTDH_Nhom8.c_3d.setText("");
        view.KTDH_Nhom8.d_3d.setText("");

        view.KTDH_Nhom8.a1_3d.setText("");
        view.KTDH_Nhom8.b1_3d.setText("");
        view.KTDH_Nhom8.c1_3d.setText("");
        view.KTDH_Nhom8.d1_3d.setText("");

        view.KTDH_Nhom8.o_3d.setText("");
        view.KTDH_Nhom8.o1_3d.setText("");

        view.KTDH_Nhom8.h_3d.setText("");
        view.KTDH_Nhom8.l_3d.setText("");
        view.KTDH_Nhom8.w_3d.setText("");
        view.KTDH_Nhom8.r_3d.setText("");
    }

    private void initGraph(Graphics g) {
        Graphics2D g2d = (Graphics2D) g;
        step = 5;
        graphHeight = jPanel_Graph.getBounds().height;
        graphWidth = jPanel_Graph.getBounds().width;

        //Vẽ lưới pixel
        g2d.setColor(new Color(238, 238, 238));
//            g2d.setColor(Color.lightGray);
        for (int i = 0; i < graphWidth; i += step) {
            g.drawLine(graphWidth / 2 - i, 0, graphWidth / 2 - i, graphHeight / 2 + graphHeight / 2);
            g.drawLine(graphWidth / 2 + i, 0, graphWidth / 2 + i, graphHeight / 2 + graphHeight / 2);
            g.drawLine(0, graphHeight / 2 - i, graphWidth / 2 + graphWidth / 2, graphHeight / 2 - i);
            g.drawLine(0, graphHeight / 2 + i, graphWidth / 2 + graphWidth / 2, graphHeight / 2 + i);
        }

        for (int i = 10; i < 100; i += 10) {
            g2d.setColor(new Color(253, 0, 84));
            //Vẽ gạch trục hoành bên dương
            g.drawLine(graphWidth / 2 + i * 5 + 2, graphHeight / 2 - 3 + 2, graphWidth / 2 + i * 5 + 2, graphHeight / 2 + 3 + 2);
            //Vẽ gạch trục tung bên dương
            g.drawLine(graphWidth / 2 - 3 + 2, graphHeight / 2 - i * 5 + 2, graphWidth / 2 + 3 + 2, graphHeight / 2 - i * 5 + 2);

            g2d.setColor(new Color(146, 154, 171));
            //Vẽ gạch trục hoành bên âm
            g.drawLine(graphWidth / 2 - i * 5 + 2, graphHeight / 2 - 3 + 2, graphWidth / 2 - i * 5 + 2, graphHeight / 2 + 3 + 2);
            //Vẽ gạch trục tung bên âm
            g.drawLine(graphWidth / 2 - 3 + 2, graphHeight / 2 + i * 5 + 2, graphWidth / 2 + 3 + 2, graphHeight / 2 + i * 5 + 2);

            //Vẽ đơn vị trục hoành bên dương
            g.drawString("" + i, graphWidth / 2 + i * 5 - 2, graphHeight / 2 + 20);
            //Vẽ đơn vị trục tung bên dương
            g.drawString("" + i, graphWidth / 2 - 20, graphHeight / 2 - i * 5 + 7);
        }

        g2d.setColor(new Color(253, 0, 84));
        //Vẽ nửa trục Ox dương
        g2d.drawLine(graphWidth / 2 + 2, graphHeight / 2 + 2, graphWidth + 2, graphHeight / 2 + 2);
        g2d.drawString("x", graphWidth - 10, graphHeight / 2 - 10); // Vẽ tên trục x
        g2d.drawLine(graphWidth - 5 + 2, graphHeight / 2 - 5 + 2, graphWidth + 2, graphHeight / 2 + 2); //Vẽ mũi tên
        g2d.drawLine(graphWidth - 5 + 2, graphHeight / 2 + 5 + 2, graphWidth + 2, graphHeight / 2 + 2); //Vẽ mũi tên

        //Vẽ nửa trục Oz dương
        g2d.drawLine(graphWidth / 2 + 2, 0 + 2, graphWidth / 2 + 2, graphHeight / 2 + 2);
        g2d.drawString("z", graphWidth / 2 + 11, 0 + 10); //Vẽ tên trục z
        g2d.drawLine(graphWidth / 2 - 5 + 2, 5 + 2, graphWidth / 2 + 2, 0 + 2); //Vẽ mũi tên
        g2d.drawLine(graphWidth / 2 + 5 + 2, 5 + 2, graphWidth / 2 + 2, 0 + 2); //Vẽ múi tên

        //Vẽ tâm O
        g2d.drawString("0", graphWidth / 2 - 15, graphHeight / 2 + 15);

        //Vẽ nửa trục Oy dương 
        Point2D a = Rotation.rotateAroundO(-graphHeight / 8 - 12, 0, 45 * Math.PI / 180);
        g2d.drawLine(graphWidth / 2 + 2, graphHeight / 2 + 2, a.getNewX(), a.getNewY());

        g2d.drawString("y", a.getNewX() - 3, a.getNewY() - 15); //Vẽ tên trục y
        g2d.drawLine(a.getNewX() - 1, a.getNewY() - 7, a.getNewX(), a.getNewY()); //Vẽ mũi tên
        g2d.drawLine(a.getNewX() + 11, a.getNewY() - 3, a.getNewX(), a.getNewY()); //Vẽ mũi tên

        //Vẽ nét đứt từ đây ---------------------
        float[] dashingPattern2 = {10f, 4f};
        Stroke dashed = new BasicStroke(1f, BasicStroke.CAP_BUTT, BasicStroke.JOIN_MITER, 1.0f, dashingPattern2, 0.0f);
        g2d.setStroke(dashed);

        g2d.setColor(new Color(146, 154, 171));

        g2d.drawLine(graphWidth / 2 + 2, graphHeight / 2 + 2, graphWidth / 2 + 2, graphHeight + 2); //Vẽ nửa trục Oz âm 
        g2d.drawLine(0 + 2, graphHeight / 2 + 2, graphWidth / 2 + 2, graphHeight / 2 + 2); //Vẽ nửa trục Ox âm 

        //Vẽ nửa trục Oz âm
        Point2D b = Rotation.rotateAroundO(graphHeight, 0, 45 * Math.PI / 180);
        g2d.drawLine(graphWidth / 2 + 2, graphHeight / 2 + 2, b.getNewX(), b.getNewY());

        g.setColor(shape3DColor);
        if (!list.isEmpty()) {
            list.forEach(shape3D -> {
                shape3D.draw(g);
            });
        } else {
            resetField();
        }
    }

    public void default_jLabels() {
        jLabel_X1.setText("x1:");
        jLabel_Y1.setText("y1:");
        jLabel_X2.setText("x2:");
        jLabel_Y2.setText("y2:");
        jLabel_xO.setText("xO:");
        jLabel_yO.setText("yO:");
        jLabel_r.setText("r:");
        jLabel_h.setText("h:");
    }

    public void clear_jTextField() {
        jTextField_x1.setText("");
        jTextField_y1.setText("");
        jTextField_x2.setText("");
        jTextField_y2.setText("");
        jTextField_xO.setText("");
        jTextField_yO.setText("");
        jTextField_r.setText("");
        jTextField_h.setText("");
    }

    public void hienToaDo() {
        if (drawMode.equals("Diem")) {
            if (diem != null) {
                default_jLabels();
                clear_jTextField();
                jTextField_x1.setText((diem.getX() - KTDH_Nhom8.graphWidth / 2) / KTDH_Nhom8.step + "");
                jTextField_y1.setText((diem.getY() - KTDH_Nhom8.graphHeight / 2) / -KTDH_Nhom8.step + "");
            }

        }
        if (drawMode.equals("DoanThangNetLien")) {
            if (doanThang != null) {
                default_jLabels();
                clear_jTextField();
                jTextField_x1.setText((doanThang.getX1() - KTDH_Nhom8.graphWidth / 2) / KTDH_Nhom8.step + "");
                jTextField_y1.setText((doanThang.getY1() - KTDH_Nhom8.graphHeight / 2) / -KTDH_Nhom8.step + "");
                jTextField_x2.setText((doanThang.getX2() - KTDH_Nhom8.graphWidth / 2) / KTDH_Nhom8.step + "");
                jTextField_y2.setText((doanThang.getY2() - KTDH_Nhom8.graphHeight / 2) / -KTDH_Nhom8.step + "");
            }

        }
        if (drawMode.equals("DoanThangNetDut")) {
            if (doanThang != null) {
                default_jLabels();
                clear_jTextField();
                jTextField_x1.setText((doanThang.getX1() - KTDH_Nhom8.graphWidth / 2) / KTDH_Nhom8.step + "");
                jTextField_y1.setText((doanThang.getY1() - KTDH_Nhom8.graphHeight / 2) / -KTDH_Nhom8.step + "");
                jTextField_x2.setText((doanThang.getX2() - KTDH_Nhom8.graphWidth / 2) / KTDH_Nhom8.step + "");
                jTextField_y2.setText((doanThang.getY2() - KTDH_Nhom8.graphHeight / 2) / -KTDH_Nhom8.step + "");
            }
        }
        if (drawMode.equals("DoanThangChamGach")) {
            if (doanThang != null) {
                default_jLabels();
                clear_jTextField();
                jTextField_x1.setText((doanThang.getX1() - KTDH_Nhom8.graphWidth / 2) / KTDH_Nhom8.step + "");
                jTextField_y1.setText((doanThang.getY1() - KTDH_Nhom8.graphHeight / 2) / -KTDH_Nhom8.step + "");
                jTextField_x2.setText((doanThang.getX2() - KTDH_Nhom8.graphWidth / 2) / KTDH_Nhom8.step + "");
                jTextField_y2.setText((doanThang.getY2() - KTDH_Nhom8.graphHeight / 2) / -KTDH_Nhom8.step + "");
            }
        }
        if (drawMode.equals("DoanThang2ChamGach")) {
            if (doanThang != null) {
                default_jLabels();
                clear_jTextField();
                jTextField_x1.setText((doanThang.getX1() - KTDH_Nhom8.graphWidth / 2) / KTDH_Nhom8.step + "");
                jTextField_y1.setText((doanThang.getY1() - KTDH_Nhom8.graphHeight / 2) / -KTDH_Nhom8.step + "");
                jTextField_x2.setText((doanThang.getX2() - KTDH_Nhom8.graphWidth / 2) / KTDH_Nhom8.step + "");
                jTextField_y2.setText((doanThang.getY2() - KTDH_Nhom8.graphHeight / 2) / -KTDH_Nhom8.step + "");
            }
        }
        if (drawMode.equals("HinhChuNhat")) {
            if (hinhChuNhat != null) {
                clear_jTextField();
                jLabel_X1.setText("x1:");
                jLabel_Y1.setText("y1:");
                jLabel_X2.setText("x2:");
                jLabel_Y2.setText("y2:");
                jLabel_xO.setText("x3:");
                jLabel_yO.setText("y3:");
                jLabel_r.setText("x4:");
                jLabel_h.setText("y4:");

                jTextField_x1.setText((hinhChuNhat.getX1() - KTDH_Nhom8.graphWidth / 2) / KTDH_Nhom8.step + "");
                jTextField_y1.setText((hinhChuNhat.getY1() - KTDH_Nhom8.graphHeight / 2) / -KTDH_Nhom8.step + "");
                jTextField_x2.setText((hinhChuNhat.getX2() - KTDH_Nhom8.graphWidth / 2) / KTDH_Nhom8.step + "");
                jTextField_y2.setText((hinhChuNhat.getY2() - KTDH_Nhom8.graphHeight / 2) / -KTDH_Nhom8.step + "");
                jTextField_xO.setText((hinhChuNhat.getX3() - KTDH_Nhom8.graphWidth / 2) / KTDH_Nhom8.step + "");
                jTextField_yO.setText((hinhChuNhat.getY3() - KTDH_Nhom8.graphHeight / 2) / -KTDH_Nhom8.step + "");
                jTextField_r.setText((hinhChuNhat.getX4() - KTDH_Nhom8.graphWidth / 2) / KTDH_Nhom8.step + "");
                jTextField_h.setText((hinhChuNhat.getY4() - KTDH_Nhom8.graphHeight / 2) / -KTDH_Nhom8.step + "");
            }

        }
        if (drawMode.equals("DuongTronNetLien")) {
            if (duongTron != null) {
                default_jLabels();
                clear_jTextField();
                jTextField_xO.setText((duongTron.getxO() - KTDH_Nhom8.graphWidth / 2) / KTDH_Nhom8.step + "");
                jTextField_yO.setText((duongTron.getyO() - KTDH_Nhom8.graphHeight / 2) / -KTDH_Nhom8.step + "");
                jTextField_r.setText(duongTron.getR() / KTDH_Nhom8.step + "");
            }

        }
        if (drawMode.equals("DuongTronNetDut")) {
            if (duongTron != null) {
                default_jLabels();
                clear_jTextField();
                jTextField_xO.setText((duongTron.getxO() - KTDH_Nhom8.graphWidth / 2) / KTDH_Nhom8.step + "");
                jTextField_yO.setText((duongTron.getyO() - KTDH_Nhom8.graphHeight / 2) / -KTDH_Nhom8.step + "");
                jTextField_r.setText(duongTron.getR() / KTDH_Nhom8.step + "");
            }

        }
        if (drawMode.equals("HinhTamGiacCan")) {
            if (hinhTamGiacCan != null) {
                clear_jTextField();

                jLabel_X1.setText("x Đỉnh:");
                jLabel_Y1.setText("y Đỉnh:");
                jLabel_X2.setText("x2:");
                jLabel_Y2.setText("y2:");
                jLabel_xO.setText("x3:");
                jLabel_yO.setText("y3:");
                jLabel_r.setText("r:");
                jLabel_h.setText("h:");

                jTextField_x1.setText((hinhTamGiacCan.getxDinh() - KTDH_Nhom8.graphWidth / 2) / KTDH_Nhom8.step + "");
                jTextField_y1.setText((hinhTamGiacCan.getyDinh() - KTDH_Nhom8.graphHeight / 2) / -KTDH_Nhom8.step + "");
                jTextField_x2.setText((hinhTamGiacCan.getX2() - KTDH_Nhom8.graphWidth / 2) / KTDH_Nhom8.step + "");
                jTextField_y2.setText((hinhTamGiacCan.getY2() - KTDH_Nhom8.graphHeight / 2) / -KTDH_Nhom8.step + "");
                jTextField_xO.setText((hinhTamGiacCan.getX3() - KTDH_Nhom8.graphWidth / 2) / KTDH_Nhom8.step + "");
                jTextField_yO.setText((hinhTamGiacCan.getY3() - KTDH_Nhom8.graphHeight / 2) / -KTDH_Nhom8.step + "");
//                jTextField_h.setText((int) Math.sqrt(hinhTamGiacCan.getCanh()*hinhTamGiacCan.getCanh() - hinhTamGiacCan.getCanh()*hinhTamGiacCan.getCanh()/4) / KTDH_Nhom8.step+"");
                jTextField_h.setText(Math.abs(hinhTamGiacCan.getyDinh() - hinhTamGiacCan.getY3()) / KTDH_Nhom8.step + "");
            }

        }
        if (drawMode.equals("CayThong")) {
            if (cayThong != null) {
                clear_jTextField();

                jLabel_X1.setText("x Đỉnh:");
                jLabel_Y1.setText("y Đỉnh:");
                jLabel_X2.setText("x2:");
                jLabel_Y2.setText("y2:");
                jLabel_xO.setText("xO:");
                jLabel_yO.setText("yO:");
                jLabel_r.setText("r:");
                jLabel_h.setText("h:");

                jTextField_x1.setText((cayThong.getxDinh() - KTDH_Nhom8.graphWidth / 2) / KTDH_Nhom8.step + "");
                jTextField_y1.setText((cayThong.getyDinh() - KTDH_Nhom8.graphHeight / 2) / -KTDH_Nhom8.step + "");

//                jTextField_h.setText((int) Math.sqrt(hinhTamGiacCan.getCanh()*hinhTamGiacCan.getCanh() - hinhTamGiacCan.getCanh()*hinhTamGiacCan.getCanh()/4) / KTDH_Nhom8.step+"");
                jTextField_h.setText(cayThong.getChieuCao() / KTDH_Nhom8.step + "");

            }

        }
        if (drawMode.equals("BienBao")) {
            if (bienBao != null) {
                jTextField_x1.setText("");
                jTextField_y1.setText("");
                jTextField_x2.setText("");
                jTextField_y2.setText("");
                jTextField_xO.setText((bienBao.getxTamBienBao() - KTDH_Nhom8.graphWidth / 2) / KTDH_Nhom8.step + "");
                jTextField_yO.setText((bienBao.getyTamBienBao() - KTDH_Nhom8.graphHeight / 2) / -KTDH_Nhom8.step + "");
                jTextField_r.setText(bienBao.getChieuCaoTinhTuTam() / KTDH_Nhom8.step + "");
                jTextField_h.setText("");
            }
        }
        if(drawMode.equals("Sao")){
            if(sao!=null){
                jLabel_r.setText("kc tâm đến cánh:");
                clear_jTextField();
                jTextField_x1.setText("");
                jTextField_y1.setText("");
                jTextField_x2.setText("");
                jTextField_y2.setText("");
                jTextField_xO.setText((sao.getxO()- KTDH_Nhom8.graphWidth / 2) / KTDH_Nhom8.step + "");
                jTextField_yO.setText((sao.getyO() - KTDH_Nhom8.graphHeight / 2) / -KTDH_Nhom8.step + "");
                jTextField_r.setText(sao.getChieuDaiCanh()/ KTDH_Nhom8.step + "");
                jTextField_h.setText("");
            }
        }
        if(drawMode.equals("New_Oto")){
            if(new_Oto!=null){
                default_jLabels();
                jLabel_X1.setText("x Mũi Xe:");
                jLabel_Y1.setText("y Mũi Xe:");
                jLabel_X2.setText("x Đuôi Xe:");
                jLabel_Y2.setText("y Đuôi Xe:");
                clear_jTextField();
                jTextField_x1.setText((new_Oto.getxMuiXeDuoi()- KTDH_Nhom8.graphWidth / 2) / KTDH_Nhom8.step + "");
                jTextField_y1.setText((new_Oto.getyMuiXeDuoi() - KTDH_Nhom8.graphHeight / 2) / -KTDH_Nhom8.step +"");
                jTextField_x2.setText((new_Oto.getxDuoiXe1()- KTDH_Nhom8.graphWidth / 2) / KTDH_Nhom8.step + "");
                jTextField_y2.setText((new_Oto.getyDuoiXe1()- KTDH_Nhom8.graphHeight / 2) / -KTDH_Nhom8.step +"");
                jTextField_xO.setText("");
                jTextField_yO.setText("");
                jTextField_r.setText("");
                jTextField_h.setText("");
            }
        }
    }

    public static int xNguoiDung(int x) {
        return (x - KTDH_Nhom8.graphWidth / 2) / KTDH_Nhom8.step;
    }

    public static int yNguoiDung(int y) {
        return (y - KTDH_Nhom8.graphHeight / 2) / -KTDH_Nhom8.step;
    }

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Windows".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(KTDH_Nhom8.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(KTDH_Nhom8.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(KTDH_Nhom8.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(KTDH_Nhom8.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new KTDH_Nhom8().setVisible(true);

            }
        });

    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JDialog ConeDialog;
    private javax.swing.JDialog CylinderDialog;
    public static javax.swing.JTextField a1_3d;
    public static javax.swing.JTextField a_3d;
    public static javax.swing.JTextField b1_3d;
    public static javax.swing.JTextField b_3d;
    public static javax.swing.JTextField c1_3d;
    public static javax.swing.JTextField c_3d;
    private javax.swing.JDialog cudboidDialog;
    public static javax.swing.JTextField d1_3d;
    public static javax.swing.JTextField d_3d;
    private javax.swing.JButton drawCone;
    private javax.swing.JButton drawCuboid;
    private javax.swing.JButton drawCylinder;
    private javax.swing.JButton drawSphere;
    public static javax.swing.JTextField h_3d;
    private javax.swing.JTextField h_cone;
    private javax.swing.JTextField h_cylinder;
    private javax.swing.JTextField height_cuboid;
    private javax.swing.JButton jButton_DoiXung;
    private javax.swing.JButton jButton_Quay;
    private javax.swing.JButton jButton_ThuPhong;
    private javax.swing.JButton jButton_TinhTien;
    private javax.swing.JButton jButton_VeBienBao;
    private javax.swing.JButton jButton_VeCayThong;
    private javax.swing.JButton jButton_VeDiem;
    private javax.swing.JButton jButton_VeDoanThang2ChamGach;
    private javax.swing.JButton jButton_VeDoanThangNetDut;
    private javax.swing.JButton jButton_VeDoanThangNetLien;
    private javax.swing.JButton jButton_VeDuongTron;
    private javax.swing.JButton jButton_VeDuongTronNetDut;
    private javax.swing.JButton jButton_VeHinhChuNhat;
    private javax.swing.JButton jButton_VeHinhTamGiacCan;
    private javax.swing.JButton jButton_VeNew_Oto;
    private javax.swing.JButton jButton_VeSao;
    private javax.swing.JButton jButton_XoaTatCa;
    private javax.swing.JButton jButton_car;
    private javax.swing.JCheckBox jCheckBox_FillMode;
    private javax.swing.JCheckBox jCheckBox_VeLuoi;
    private javax.swing.JCheckBox jCheckBox_VeTrucToaDo;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel10;
    private javax.swing.JLabel jLabel11;
    private javax.swing.JLabel jLabel12;
    private javax.swing.JLabel jLabel13;
    private javax.swing.JLabel jLabel14;
    private javax.swing.JLabel jLabel15;
    private javax.swing.JLabel jLabel16;
    private javax.swing.JLabel jLabel17;
    private javax.swing.JLabel jLabel18;
    private javax.swing.JLabel jLabel19;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel20;
    private javax.swing.JLabel jLabel21;
    private javax.swing.JLabel jLabel22;
    private javax.swing.JLabel jLabel23;
    private javax.swing.JLabel jLabel24;
    private javax.swing.JLabel jLabel25;
    private javax.swing.JLabel jLabel26;
    private javax.swing.JLabel jLabel27;
    private javax.swing.JLabel jLabel28;
    private javax.swing.JLabel jLabel29;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JLabel jLabel30;
    private javax.swing.JLabel jLabel31;
    private javax.swing.JLabel jLabel32;
    private javax.swing.JLabel jLabel33;
    private javax.swing.JLabel jLabel34;
    private javax.swing.JLabel jLabel35;
    private javax.swing.JLabel jLabel36;
    private javax.swing.JLabel jLabel37;
    private javax.swing.JLabel jLabel38;
    private javax.swing.JLabel jLabel39;
    private javax.swing.JLabel jLabel4;
    private javax.swing.JLabel jLabel40;
    private javax.swing.JLabel jLabel41;
    private javax.swing.JLabel jLabel42;
    private javax.swing.JLabel jLabel43;
    private javax.swing.JLabel jLabel5;
    private javax.swing.JLabel jLabel6;
    private javax.swing.JLabel jLabel7;
    private javax.swing.JLabel jLabel8;
    private javax.swing.JLabel jLabel9;
    private javax.swing.JLabel jLabel_Coor;
    private javax.swing.JLabel jLabel_Transormation;
    private javax.swing.JLabel jLabel_X1;
    private javax.swing.JLabel jLabel_X2;
    private javax.swing.JLabel jLabel_Y1;
    private javax.swing.JLabel jLabel_Y2;
    private javax.swing.JLabel jLabel_h;
    private javax.swing.JLabel jLabel_r;
    private javax.swing.JLabel jLabel_xO;
    private javax.swing.JLabel jLabel_yO;
    private javax.swing.JPanel jPanel1;
    private javax.swing.JPanel jPanel10;
    private javax.swing.JPanel jPanel11;
    private javax.swing.JPanel jPanel12;
    private javax.swing.JPanel jPanel13;
    private javax.swing.JPanel jPanel14;
    private javax.swing.JPanel jPanel15;
    private javax.swing.JPanel jPanel16;
    private javax.swing.JPanel jPanel17;
    private javax.swing.JPanel jPanel18;
    private javax.swing.JPanel jPanel2;
    private javax.swing.JPanel jPanel3;
    private javax.swing.JPanel jPanel4;
    private javax.swing.JPanel jPanel5;
    private javax.swing.JPanel jPanel6;
    private javax.swing.JPanel jPanel8;
    private javax.swing.JPanel jPanel9;
    private javax.swing.JPanel jPanel_2D;
    private javax.swing.JPanel jPanel_2DAni;
    private javax.swing.JPanel jPanel_3D;
    private javax.swing.JPanel jPanel_BienDoiVaThongSo;
    private javax.swing.JPanel jPanel_Coor;
    private javax.swing.JPanel jPanel_Graph;
    private javax.swing.JSeparator jSeparator1;
    private javax.swing.JSeparator jSeparator2;
    private javax.swing.JTabbedPane jTabbedPane1;
    private javax.swing.JTextField jTextField_h;
    private javax.swing.JTextField jTextField_r;
    private javax.swing.JTextField jTextField_x1;
    private javax.swing.JTextField jTextField_x2;
    private javax.swing.JTextField jTextField_xO;
    private javax.swing.JTextField jTextField_y1;
    private javax.swing.JTextField jTextField_y2;
    private javax.swing.JTextField jTextField_yO;
    public static javax.swing.JTextField l_3d;
    private javax.swing.JTextField length_cuboid;
    public static javax.swing.JTextField o1_3d;
    public static javax.swing.JTextField o_3d;
    private javax.swing.JButton openConeDialog;
    private javax.swing.JButton openCuboidDialog;
    private javax.swing.JButton openCylinderDialog;
    private javax.swing.JButton openSphereDialog;
    public static javax.swing.JTextField r_3d;
    private javax.swing.JTextField r_cone;
    private javax.swing.JTextField r_cylinder;
    private javax.swing.JTextField r_sphere;
    private javax.swing.JButton redo;
    private javax.swing.JButton reset_cone;
    private javax.swing.JButton reset_cuboid;
    private javax.swing.JButton reset_cylinder;
    private javax.swing.JButton reset_sphere;
    private javax.swing.JPanel setColor3DShape;
    private javax.swing.JDialog sphereDialog;
    public static javax.swing.JTextField title_3D;
    private javax.swing.JButton undo;
    public static javax.swing.JTextField w_3d;
    private javax.swing.JTextField width_cuboid;
    private javax.swing.JTextField x_cone;
    private javax.swing.JTextField x_cuboid;
    private javax.swing.JTextField x_cylinder;
    private javax.swing.JTextField x_sphere;
    private javax.swing.JTextField y_cone;
    private javax.swing.JTextField y_cuboid;
    private javax.swing.JTextField y_cylinder;
    private javax.swing.JTextField y_sphere;
    private javax.swing.JTextField z_cone;
    private javax.swing.JTextField z_cuboid;
    private javax.swing.JTextField z_cylinder;
    private javax.swing.JTextField z_sphere;
    // End of variables declaration//GEN-END:variables
}
